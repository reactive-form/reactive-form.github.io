{
  "version": 3,
  "sources": ["../../scripts/injections/react.js", "../../src/ui/react/index.js", "../../src/ui/react/hooks/use-debounce-onchange.js", "../../src/ui/react/hooks/use-nonblank-name.js", "../../src/ui/react/hooks/use-timer.js", "../../src/ui/react/hooks/use-reactive.js", "../../src/ui/react/components/icon/icon.jsx", "../../src/ui/react/components/button/button.jsx", "../../src/ui/react/components/button/group.jsx", "../../src/ui/react/components/alert/alert.jsx", "../../src/ui/react/components/alert/alert-title.jsx", "../../src/ui/react/components/alert/alert-text.jsx", "../../src/ui/react/components/tabs/tabs.jsx", "../../src/ui/react/components/tabs/tab-pane.jsx", "../../src/ui/react/components/form/field.jsx", "../../src/ui/react/components/form/forms/number-input.jsx", "../../src/ui/react/components/form/forms/text-input.jsx", "../../src/ui/react/components/form/forms/single-select.jsx", "../../src/ui/react/components/form/forms/multiple-select.jsx", "../../src/ui/react/components/form/forms/checkboxes.jsx", "../../src/ui/react/components/form/forms/radios.jsx", "../../src/ui/react/sections/data-type-editor/array.jsx", "../../src/ui/react/sections/data-type-editor/object.jsx", "../../src/ui/react/sections/data-type-editor/boolean.jsx", "../../src/ui/react/sections/data-type-editor/number.jsx", "../../src/ui/react/sections/data-type-editor/string.jsx", "../../src/ui/react/sections/form-validation-editor/editor.jsx", "../../src/ui/react/sections/form-validation-editor/item.jsx", "../../src/ui/react/sections/form-validation-editor/item-name.jsx", "../../src/ui/react/sections/form-validation-editor/item-rule.jsx", "../../src/ui/react/sections/form-condition-editor/editor.jsx", "../../src/ui/react/sections/form-condition-editor/else-branch.jsx", "../../src/ui/react/sections/form-condition-editor/when-branch.jsx", "../../src/ui/react/sections/form-condition-editor/when-branch-rule.jsx", "../../src/ui/react/sections/form-condition-editor/when-branch-rule-logic.jsx", "../../src/ui/react/sections/form-condition-editor/when-branch-rule-provider.jsx"],
  "sourcesContent": ["(() => {\n  const originalRequire = window.require\n  const fallbackRequire = (pkg) => ({\n    'rcfm/helper': { UI: window.ReactiveForm.UI }, // [TODO]\n    'react': window.React,\n    'react-dom': window.ReactDOM,\n    'prop-types': window.PropTypes,\n  })[pkg]\n  window.require = (pkg) => {\n    if (originalRequire) {\n      return originalRequire(pkg) || fallbackRequire(pkg)\n    } else {\n      return fallbackRequire(pkg)\n    }\n  }\n})()\n", "import { UI } from 'rcfm/helper'\n\nimport {\n  useDebounceOnChange,\n  useNonblankName,\n  useTimer,\n  useReactive,\n} from './hooks'\n\nimport Icon from './components/icon'\nimport {\n  Button,\n  ButtonGroup,\n} from './components/button'\nimport {\n  Alert,\n  AlertTitle,\n  AlertText,\n} from './components/alert'\nimport {\n  Tabs,\n  TabPane,\n} from './components/tabs'\nimport {\n  Field,\n  NumberInput,\n  TextInput,\n  SingleSelect,\n  MultipleSelect,\n  Checkboxes,\n  Radios,\n} from './components/form'\n\nimport {\n  ArrayEditor,\n  BooleanEditor,\n  NumberEditor,\n  ObjectEditor,\n  StringEditor,\n} from './sections/data-type-editor'\nimport {\n  FormValidationEditor,\n  FormValidationEditorItem,\n  FormValidationEditorItemName,\n  FormValidationEditorItemRule,\n} from './sections/form-validation-editor'\nimport {\n  FormConditionEditor,\n  FormConditionEditorElseBranch,\n  FormConditionEditorWhenBranch,\n  FormConditionEditorWhenBranchRule,\n  FormConditionEditorWhenBranchRuleLogic,\n  FormConditionEditorWhenBranchRuleProvider,\n} from './sections/form-condition-editor'\n\n\n\nUI.React = {\n  hooks: {\n    useDebounceOnChange,\n    useNonblankName,\n    useTimer,\n    useReactive,\n  },\n}\n\n\n\n// Basic UI Components\nUI.install({ name: 'React.Icon', Component: Icon })\n\nUI.install({ name: 'React.Alert', Component: Alert })\nUI.install({ name: 'React.AlertTitle', Component: AlertTitle })\nUI.install({ name: 'React.AlertText', Component: AlertText })\n\nUI.install({ name: 'React.Tabs', Component: Tabs })\nUI.install({ name: 'React.TabPane', Component: TabPane })\n\nUI.install({ name: 'React.Button', Component: Button })\nUI.install({ name: 'React.ButtonGroup', Component: ButtonGroup })\n\nUI.install({ name: 'React.Form.Field', Component: Field })\nUI.install({ name: 'React.Form.NumberInput', Component: NumberInput })\nUI.install({ name: 'React.Form.TextInput', Component: TextInput })\nUI.install({ name: 'React.Form.SingleSelect', Component: SingleSelect })\nUI.install({ name: 'React.Form.MultipleSelect', Component: MultipleSelect })\nUI.install({ name: 'React.Form.Checkboxes', Component: Checkboxes })\nUI.install({ name: 'React.Form.Radios', Component: Radios })\n\n// Model-Specific Components\nUI.install({ name: 'React.DataTypeEditor.Array', Component: ArrayEditor })\nUI.install({ name: 'React.DataTypeEditor.Boolean', Component: BooleanEditor })\nUI.install({ name: 'React.DataTypeEditor.Number', Component: NumberEditor })\nUI.install({ name: 'React.DataTypeEditor.Object', Component: ObjectEditor })\nUI.install({ name: 'React.DataTypeEditor.String', Component: StringEditor })\n\nUI.install({\n  name: 'React.FormValidationEditor',\n  Component: FormValidationEditor,\n})\nUI.install({\n  name: 'React.FormValidationEditor.Item',\n  Component: FormValidationEditorItem,\n})\nUI.install({\n  name: 'React.FormValidationEditor.ItemName',\n  Component: FormValidationEditorItemName,\n})\nUI.install({\n  name: 'React.FormValidationEditor.ItemRule',\n  Component: FormValidationEditorItemRule,\n})\n\nUI.install({\n  name: 'React.FormConditionEditor',\n  Component: FormConditionEditor,\n})\nUI.install({\n  name: 'React.FormConditionEditor.ElseBranch',\n  Component: FormConditionEditorElseBranch,\n})\nUI.install({\n  name: 'React.FormConditionEditor.WhenBranch',\n  Component: FormConditionEditorWhenBranch,\n})\nUI.install({\n  name: 'React.FormConditionEditor.WhenBranch.Rule',\n  Component: FormConditionEditorWhenBranchRule,\n})\nUI.install({\n  name: 'React.FormConditionEditor.WhenBranch.RuleLogic',\n  Component: FormConditionEditorWhenBranchRuleLogic,\n})\nUI.install({\n  name: 'React.FormConditionEditor.WhenBranch.RuleProvider',\n  Component: FormConditionEditorWhenBranchRuleProvider,\n})\n", "import { useState, useEffect } from 'react'\nimport { UI } from 'rcfm/helper'\n\n\n\nexport default function useDebounceOnChange(options = {}) {\n  let { value, parseValue, onChange, debounce } = options\n  let [outerValue, setOuterValue] = useState(value)\n  let [innerValue, setInnerValue] = useState(value)\n  let [debouncer, setDebouncer] = useState(null)\n  let decoratedOnChange = (newValue) => {\n    parseValue && (newValue = parseValue(newValue))\n    setInnerValue(newValue)\n    debouncer ? debouncer.run(newValue) : onChange && onChange(newValue)\n  }\n  if (value !== outerValue) {\n    setOuterValue(value)\n    setInnerValue(value)\n  }\n  useEffect(() => {\n    if (debouncer || !onChange || !debounce) { return }\n    setDebouncer(UI.Debouncer.create({ runner: onChange, interval: debounce }))\n    return () => {\n      if (!debouncer) { return }\n      debouncer.abort()\n      setDebouncer(null)\n    }\n  }, [debouncer, onChange, debounce])\n  return { value: innerValue, onChange: decoratedOnChange }\n}\n", "import { guid } from 'rcfm'\nimport { useState } from 'react'\n\n\n\nexport default function useNonblankName(name = '') {\n  let randomName = useState(guid())[0]\n  return name || randomName\n}\n", "import { useState, useEffect } from 'react'\n\n\n\nfunction useTimer(duration) {\n  let [flag, setFlag] = useState(false)\n  useEffect(() => {\n    setFlag(true)\n    let timer = null\n    if (duration !== Infinity) {\n      timer = setTimeout(() => setFlag(false), duration)\n    }\n    return () => {\n      clearTimeout(timer)\n      setFlag(false)\n    }\n  }, [duration])\n  return flag\n}\n\n\n\nexport default useTimer\n", "import { useState, useEffect } from 'react'\n\n\n\nfunction useReactive(reactive, member = {}) {\n  member || (member = {})\n  let { id, prop } = member\n  let [value, setValue] = useState(getProp(reactive, member))\n  useEffect(() => {\n    if (!id) { return }\n    return reactive.subscribe({ id }, () => {\n      setValue(getProp(reactive, prop ? { id, prop } : { id }))\n    })\n  }, [reactive, id, prop])\n  return value\n}\n\nfunction getProp(reactive, member){\n  return reactive.get(member, { include: ['raw', 'error'] })\n}\n\n\n\nexport default useReactive\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function Icon(props = {}) {\n  const GetProps = UI.Icon.getProps\n  let iconProps = GetProps(props)\n  return (<i {...iconProps}></i>)\n}\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function Button(props = {}) {\n  const GetProps = UI.Button.getProps\n  const Icon = UI.use('React.Icon')\n  let buttonProps = GetProps(props)\n  let icon = buttonProps.icon\n  return (\n    <button {...buttonProps}>\n      {(() => {\n        if (!icon.name) { return buttonProps.children }\n        if (icon.position === 'middle') {\n          return <Icon name={icon.name}></Icon>\n        }\n        return (<>\n          <Icon name={icon.name}></Icon>\n          {buttonProps.children}\n        </>)\n      })()}\n    </button>\n  )\n}\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function ButtonGroup(props = {}) {\n  const GetProps = UI.Button.Group.getProps\n  let groupProps = GetProps(props)\n  return (\n    <div {...groupProps}>{groupProps.children}</div>\n  )\n}\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function Alert(props = {}) {\n  const GetProps = UI.Alert.getProps\n  const UseTimer = UI.React.hooks.useTimer\n  let alertProps = GetProps(props)\n  let timer = UseTimer(alertProps.dismiss)\n  delete alertProps.dismiss\n  if (!timer) { return null }\n  return (\n    <div {...alertProps} >{alertProps.children}</div>\n  )\n}\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function AlertTitle(props = {}) {\n  const GetProps = UI.Alert.Title.getProps\n  let titleProps = GetProps(props)\n  return (\n    <h6 {...titleProps}>\n      {titleProps.children}\n    </h6>\n  )\n}\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function AlertText(props = {}) {\n  const GetProps = UI.Alert.Text.getProps\n  let textProps = GetProps(props)\n  return (\n    <p {...textProps}>\n      {textProps.children}\n    </p>\n  )\n}\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function Tabs(props = {}) {\n  const GetProps = UI.Tabs.getProps\n  const ActivateClass = UI.Tabs.activateClass\n  let tabsProps = GetProps(props)\n  let { title, labels, activeIndex, onSwitch, classNames } = tabsProps\n  delete tabsProps.title\n  delete tabsProps.labels\n  delete tabsProps.activeIndex\n  delete tabsProps.onSwitch\n  delete tabsProps.classNames\n  return (<div {...tabsProps} >\n    <div className={classNames.header}>\n      {title && <h6 className={classNames.title}>{title}</h6>}\n      {labels.map((label, index) =>\n        <label key={label}\n          className={ActivateClass(classNames.label, index, activeIndex)}\n          onClick={() => onSwitch && onSwitch(index) } >\n          {label}\n        </label>,\n      )}\n    </div>\n    {labels.map((label, index) =>\n      <div key={label}\n        className={ActivateClass(classNames.pane, index, activeIndex)}>\n        {props.children[index]}\n      </div>,\n    )}\n  </div>)\n}\n", "export default function TabPane(props = {}) {\n  return props.children\n}\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function Field(props = {}) {\n  const GetProps = UI.Form.Field.getProps\n  let { wrapperProps, labelProps, hintProps, errorProps } = GetProps(props)\n  return (<div {...wrapperProps} >\n    {labelProps.label &&\n    <label className={labelProps.className} >\n      {labelProps.label}\n    </label>}\n    {props.children}\n    {errorProps.error &&\n    <p className={errorProps.className} >\n      {errorProps.error.map((e) => e + ' ')}\n    </p>}\n    {hintProps.hint && !errorProps.error &&\n    <p className={hintProps.className} >\n      {hintProps.hint}\n    </p>}\n  </div>)\n}\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function NumberInput(props = {}) {\n  const GetProps = UI.Form.NumberInput.getProps\n  const UseNonblankName = UI.React.hooks.useNonblankName\n  const UseDebounceOnChange = UI.React.hooks.useDebounceOnChange\n  let { wrapperProps, inputProps } = GetProps(props)\n  let name = UseNonblankName(inputProps.name)\n  let { value, onChange } = UseDebounceOnChange({\n    value: inputProps.value,\n    debounce: inputProps.debounce,\n    onChange: inputProps.onChange,\n    parseValue: (e) => e.target.value.length ? Number(e.target.value) : NaN,\n  })\n  if (isNaN(value)) { value = '' }\n  Object.assign(inputProps, { name, value, onChange })\n  return (\n    <div {...wrapperProps} ><input {...inputProps} /></div>\n  )\n}\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function TextInput(props = {}) {\n  const GetProps = UI.Form.TextInput.getProps\n  const UseNonblankName = UI.React.hooks.useNonblankName\n  const UseDebounceOnChange = UI.React.hooks.useDebounceOnChange\n  let { multiline, inputProps, wrapperProps } = GetProps(props)\n  let name = UseNonblankName(inputProps.name)\n  let { value, onChange } = UseDebounceOnChange({\n    debounce: inputProps.debounce, value: inputProps.value,\n    onChange: inputProps.onChange, parseValue: (e) => e.target.value,\n  })\n  Object.assign(inputProps, { name, value, onChange })\n  return (<div {...wrapperProps} >\n    {\n      multiline ?\n        <textarea {...inputProps} ></textarea> :\n        <input {...inputProps} />\n    }\n  </div>)\n}\n", "import { UI } from 'rcfm/helper'\nimport React, { useState } from 'react'\n\n\n\nexport default function SingleSelect(props = {}) {\n  const GetProps = UI.Form.SingleSelect.getProps\n  const FindLabel = UI.Form.SingleSelect.findLabel\n  const UseNonblankName = UI.React.hooks.useNonblankName\n  let selectProps = GetProps(props)\n  let { inputProps, wrapperProps, includeBlank, value, options } = selectProps\n  let { disabled, readOnly, onChange, placeholder } = inputProps\n  let initLabel = FindLabel(value, options)\n  let [label, setLabel] = useState(initLabel)\n  onChange && label !== initLabel && setLabel(initLabel)\n  let name = UseNonblankName(inputProps.name)\n  let onChangeHandler = (e) => {\n    let selected = options[e.target.selectedIndex - 1]\n    setLabel(selected ? selected.label : '')\n    value = selected?.value\n    onChange && onChange(value)\n  }\n  Object.assign(inputProps, { name, value, onChange: onChangeHandler })\n  return (<div {...wrapperProps} >\n    <select {...inputProps} >\n      <option className=\"rcfm-fmtag\"\n        style={{ display: includeBlank ? 'initial' : 'none' }}></option>\n      {options.map((o) =>\n        <option className=\"rcfm-fmtag\" key={o.value} value={o.value}>\n          {o.label}\n        </option>,\n      )}\n    </select>\n    <input className=\"rcfm-fmtag\"\n      tabIndex={-1} value={label} onChange={() => {}}\n      placeholder={placeholder} disabled={disabled} readOnly={readOnly}\n    />\n  </div>)\n}\n\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function MultipleSelect(props = {}) {\n  const GetProps = UI.Form.MultipleSelect.getProps\n  const UseNonblankName = UI.React.hooks.useNonblankName\n  let { inputProps, wrapperProps, options, value } = GetProps(props)\n  let onChange = inputProps.onChange\n  let name = UseNonblankName(inputProps.name)\n  let onChangeHandler = !onChange ? null : (e) => {\n    let [newVal, opts] = [[], Array.from(e.target.options)]\n    opts.forEach((o, index) => o.selected && newVal.push(options[index].value))\n    onChange(newVal)\n  }\n  Object.assign(inputProps, {\n    name, onChange: onChangeHandler,\n    [onChangeHandler ? 'value' : 'defaultValue']: value,\n  })\n  return (<div {...wrapperProps} >\n    <select {...inputProps} >\n      {options.map((o) =>\n        <option className=\"rcfm-fmtag\" key={o.value} value={o.value}>\n          {o.label}\n        </option>,\n      )}\n    </select>\n  </div>)\n}\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function Checkboxes(props = {}) {\n  const GetProps = UI.Form.Checkboxes.getProps\n  const GetNewValue = UI.Form.Checkboxes.getNewValue\n  const UseNonblankName = UI.React.hooks.useNonblankName\n  let { inputProps, wrapperProps, value, options } = GetProps(props)\n  let name = UseNonblankName(inputProps.name)\n  let onChange = inputProps.onChange\n  return (<div {...wrapperProps} >\n    {options.map((o) =>\n      <label className=\"rcfm-fmtag\" key={o.value}>\n        <input {...{\n          ...inputProps, name, value: o.value,\n          [!onChange ? 'defaultChecked' : 'checked']: value.includes(o.value),\n          onChange: !onChange ? null : (e) => {\n            onChange(GetNewValue(e, value, o.value))\n          },\n        } } />\n        {o.label}\n      </label>,\n    )}\n  </div>)\n}\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function Radios(props = {}) {\n  const GetProps = UI.Form.Radios.getProps\n  const UseNonblankName = UI.React.hooks.useNonblankName\n  let { inputProps, wrapperProps, value, options } = GetProps(props)\n  let name = UseNonblankName(inputProps.name)\n  let onChange = inputProps.onChange\n  return (<div {...wrapperProps} >\n    {options.map((o) =>\n      <label className=\"rcfm-fmtag\" key={o.value}>\n        <input {...{\n          ...inputProps, name, value: o.value,\n          [!onChange ? 'defaultChecked' : 'checked']: value === o.value,\n          onChange: !onChange ? null : () => onChange(o.value),\n        } } />\n        {o.label}\n      </label>,\n    )}\n  </div>)\n}\n", "import React from 'react'\nimport ObjectEditor from './object.jsx'\n\n\n\nexport default function ArrayEditor(props = {}) {\n  return (\n    <ObjectEditor {...props} />\n  )\n}\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function ObjectEditor(props = {}) {\n  const GetProps = UI.DataTypeEditor.Object.getProps\n  const TextInput = UI.use('React.Form.TextInput')\n  return (\n    <TextInput {...GetProps(props)} />\n  )\n}\n\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function BooleanEditor(props = {}) {\n  const GetProps = UI.DataTypeEditor.Boolean.getProps\n  const Radios = UI.use('React.Form.Radios')\n  return (\n    <Radios {...GetProps(props)} />\n  )\n}\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function NumberEditor(props = {}) {\n  const GetProps = UI.DataTypeEditor.Number.getProps\n  const NumberInput = UI.use('React.Form.NumberInput')\n  return (\n    <NumberInput {...GetProps(props)} />\n  )\n}\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function StringEditor(props = {}) {\n  const GetProps = UI.DataTypeEditor.String.getProps\n  const TextInput = UI.use('React.Form.TextInput')\n  return (\n    <TextInput {...GetProps(props)} />\n  )\n}\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function ValidationEditor(props = {}) {\n  const GetProps = UI.FormValidationEditor.getProps\n  const ValidationItem = UI.use('React.FormValidationEditor.Item')\n  let { reactive, member, value, actions, onChange } = GetProps(props)\n  return (<div className=\"rcfm-form-validation-editor\">\n    {value.map((v, index) =>\n      <ValidationItem\n        key={index}\n        reactive={reactive} member={member} value={v} actions={actions}\n        onChange={(mutation) => onChange({ ...mutation, index })}\n      />,\n    )}\n  </div>)\n}\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function ValidationItem(props = {}) {\n  const Button = UI.use('React.Button')\n  const ButtonGroup = UI.use('React.ButtonGroup')\n  const NameEditor = UI.use('React.FormValidationEditor.ItemName')\n  const RuleEditor = UI.use('React.FormValidationEditor.ItemRule')\n  let { reactive, member, value, onChange, actions } = props\n  return (<div className=\"rcfm-form-validation-editor-item\">\n    <NameEditor\n      reactive={reactive} member={member}\n      value={value} onChange={onChange}\n    />\n    {!value.name ? null :\n      <RuleEditor\n        reactive={reactive} member={member}\n        value={value} onChange={onChange}\n      />\n    }\n    {!(actions.includes('delete') || actions.includes('append')) ? null :\n      <ButtonGroup>\n        {!actions.includes('delete') ? null :\n          <Button\n            color=\"danger\" icon=\"cross\"\n            onClick={() => onChange({ action: 'delete' })}\n          />\n        }\n        {!actions.includes('append') ? null :\n          <Button\n            color=\"secondary\" icon=\"plus\"\n            onClick={() => onChange({ action: 'append' })}\n          />\n        }\n      </ButtonGroup>\n    }\n  </div>)\n}\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function ValidationItemName(props = {}) {\n  const GetValidators = UI.FormValidationEditor.getValidators\n  const SingleSelect = UI.use('React.Form.SingleSelect')\n  let { reactive, member, value, onChange } = props\n  let options = GetValidators({ reactive, member })\n  return (\n    <SingleSelect\n      includeBlank={false} value={value.name} options={options}\n      onChange={(name) => onChange({ action: 'update', name })}\n    />\n  )\n}\n", "import { Struct } from 'rcfm'\nimport { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function ValidationItemRule(props = {}) {\n  const GetRuleType = UI.FormValidationEditor.getRuleType\n  let { reactive, member, value, onChange } = props\n  let ruleType = GetRuleType({ reactive, member, value })\n  if (!ruleType) { return null }\n  let nameCap = Struct.string.capitalize(value.name)\n  const RuleEditor = UI.try([\n    `React.FormValidationEditor.ItemRule.${nameCap}`,\n    `React.DataTypeEditor.${ruleType}`,\n  ])\n  return (\n    <RuleEditor\n      reactive={reactive} member={member} value={value.rule}\n      onChange={(rule) => onChange({ action: 'update', rule })}\n    />\n  )\n}\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function Editor(prop = {}) {\n  const GetProps = UI.FormConditionEditor.getProps\n  const WhenBranch = UI.use('React.FormConditionEditor.WhenBranch')\n  const ElseBranch = UI.use('React.FormConditionEditor.ElseBranch')\n  let { reactive, member, branches, ResultComponent, onChange } = GetProps(prop)\n  return (<div className=\"rcfm-form-condition-editor\">\n    {branches.whens.map((branch, branchIndex) =>\n      <WhenBranch\n        key={branchIndex}\n        reactive={reactive} member={member}\n        value={branch} ResultComponent={ResultComponent}\n        onChange={(mu) => onChange({ ...mu, branchIndex })}\n      />,\n    )}\n    <ElseBranch\n      reactive={reactive} member={member} value={branches.else}\n      ResultComponent={ResultComponent} onChange={onChange}\n    />\n  </div>)\n}\n", "import { I18n } from 'rcfm'\nimport React from 'react'\n\n\n\nexport default function ElseResult(props = {}) {\n  let { value, onChange, ResultComponent } = props\n  return (<div className=\"rcfm-form-condition-editor-else-branch\">\n    <h6 className=\"rcfm-form-condition-editor-branch-title\">\n      {I18n.global.t('formConditionEditor.elseBranch.resultTitle')}\n    </h6>\n    <ResultComponent\n      value={value.result}\n      onChange={(result) => onChange({\n        target: 'else', action: 'update', result,\n      })}\n    />\n  </div>)\n}\n", "import { I18n } from 'rcfm'\nimport { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function WhenBranch(props = {}) {\n  const Button = UI.use('React.Button')\n  const ButtonGroup = UI.use('React.ButtonGroup')\n  const BranchRule = UI.use('React.FormConditionEditor.WhenBranch.Rule')\n  let { reactive, member, value, onChange, ResultComponent } = props\n  return (<div className=\"rcfm-form-condition-editor-when-branch\">\n    <h6 className=\"rcfm-form-condition-editor-branch-title\">\n      {I18n.global.t('formConditionEditor.whenBranch.title')}\n    </h6>\n    {value.rules.map((rule, ruleIndex) =>\n      <BranchRule\n        key={ruleIndex}\n        reactive={reactive} member={member}\n        value={rule} onChange={(mu) => onChange({ ...mu, ruleIndex })}\n      />,\n    )}\n    <h6 className=\"rcfm-form-condition-editor-branch-title\">\n      {I18n.global.t('formConditionEditor.whenBranch.resultTitle')}\n    </h6>\n    <ResultComponent\n      value={value.result}\n      onChange={(result) => onChange({\n        target: 'when', action: 'update', result,\n      })}\n    />\n    <ButtonGroup fluid>\n      <Button\n        color=\"danger\"\n        onClick={() => onChange({ target: 'when', action: 'delete' })}\n      >\n        {I18n.global.t('formConditionEditor.whenBranch.delete')}\n      </Button>\n      <Button\n        color=\"secondary\"\n        onClick={() => onChange({ target: 'when', action: 'append' })}\n      >\n        {I18n.global.t('formConditionEditor.whenBranch.add')}\n      </Button>\n    </ButtonGroup>\n  </div>)\n}\n\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function WhenBranchRule(props = {}) {\n  const [Logic, Provider, ValidationItem, ButtonGroup, Button] = [\n    UI.use('React.FormConditionEditor.WhenBranch.RuleLogic'),\n    UI.use('React.FormConditionEditor.WhenBranch.RuleProvider'),\n    UI.use('React.FormValidationEditor.Item'),\n    UI.use('React.ButtonGroup'), UI.use('React.Button'),\n  ]\n  let { reactive, member, value, onChange } = props\n  let provider = reactive.schema.reference.parse(value.expression.value)\n  return (<div className=\"rcfm-form-condition-editor-when-branch-rule\">\n    <div className=\"rcfm-form-condition-editor-when-branch-rule-elements\">\n      {!value.logic ? null :\n        <Logic\n          reactive={reactive} member={member}\n          value={value} onChange={onChange}\n        />\n      }\n      <Provider\n        reactive={reactive} member={member}\n        value={value} onChange={onChange}\n      />\n      <ButtonGroup>\n        <Button\n          color=\"danger\" icon=\"cross\"\n          onClick={() => onChange({ target: 'rule', action: 'delete' })}\n        />\n        <Button\n          color=\"secondary\" icon=\"plus\"\n          onClick={() => onChange({ target: 'rule', action: 'append' })}\n        />\n      </ButtonGroup>\n    </div>\n    {!value.expression.value ? null :\n      <div className=\"rcfm-form-condition-editor-when-branch-rule-elements\">\n        <ValidationItem\n          reactive={reactive} member={provider}\n          value={value.expression} actions={['update']}\n          onChange={(mu) => onChange({\n            ...mu, target: 'rule', action: 'update',\n          }) }\n        />\n      </div>\n    }\n  </div>)\n}\n", "import { UI } from 'rcfm/helper'\nimport React from 'react'\n\n\n\nexport default function WhenBranchRuleLogic(props = {}) {\n  const GetLogics = UI.FormConditionEditor.getLogics\n  const SingleSelect = UI.use('React.Form.SingleSelect')\n  let { value, onChange } = props\n  let logics = GetLogics()\n  return (\n    <SingleSelect\n      className=\"rcfm-form-condition-editor-when-branch-rule-logic\"\n      includeBlank={false} options={logics} value={value.logic}\n      onChange={(logic) => onChange({\n        target: 'rule', action: 'update', logic,\n      })}\n    />\n  )\n}\n", "import { UI } from 'rcfm/helper'\nimport React, { useState } from 'react'\n\n\n\nexport default function WhenBranchRuleProvider(props = {}) {\n  const SplitProvider = UI.FormConditionEditor.splitProvider\n  const JoinProvider = UI.FormConditionEditor.joinProvider\n  const GetProviders = UI.FormConditionEditor.getProviders\n  const useReactive = UI.React.hooks.useReactive\n  const SingleSelect = UI.use('React.Form.SingleSelect')\n  let { reactive, member, value, onChange } = props\n  let [options, setOptions] = useState(GetProviders({ reactive, member }))\n  let refershOptions = () => setOptions(GetProviders({ reactive, member }))\n  let provider = reactive.schema.reference.parse(value.expression.value)\n  let providerLabel = useReactive(reactive, provider)?.value\n  return (\n    <SingleSelect\n      className=\"rcfm-form-condition-editor-when-branch-rule-provider\"\n      key={providerLabel} includeBlank={false} options={options}\n      value={JoinProvider(provider)} onFocus={refershOptions}\n      onChange={(val) => refershOptions(onChange({\n        target: 'rule', action: 'update',\n        value: reactive.schema.reference.stringify(SplitProvider(val), {\n          format: 'interpolation',\n        }),\n      }))}\n    />\n  )\n}\n"],
  "mappings": "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",
  "names": []
}
