{"version":3,"sources":["jsdelivr-header.js","/npm/@hotwired/turbo@7.1.0/dist/turbo.es2017-umd.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,CCFC,SAAU,EAAQ,GACI,iBAAZ,SAA0C,oBAAX,OAAyB,EAAQ,SACrD,mBAAX,QAAyB,OAAO,IAAM,OAAO,CAAC,WAAY,GACU,GAA1E,EAA+B,oBAAf,WAA6B,WAAa,GAAU,MAAqB,MAAQ,IAHtG,CAIE,MAAM,SAAW,GAAW,cAE1B,WACI,QAAuB,IAAnB,OAAO,cAAmD,IAA1B,OAAO,gBACvC,OAAO,eAAe,0BACtB,OAEJ,MAAM,EAAqB,YACrB,EACa,WACX,OAAO,QAAQ,UAAU,EAAoB,GAAI,KAAK,cAG9D,OAAO,YACH,EACJ,YAAY,UAAY,EAAmB,UAC3C,YAAY,UAAU,YAAc,YACpC,OAAO,eAAe,YAAa,GAfvC,GA0CA,SAAU,GAuBR,SAAS,EAAM,EAAkB,EAAS,GACxC,MAAM,IAAI,EAAiB,2DAA6D,EAAU,IAAK,GAvBnE,mBAA3B,EAAU,gBAErB,EAAU,cAAgB,SAAS,GAC7B,IAaN,SAA2B,EAAW,GACpC,aAAqB,aAAe,EAAM,UAAW,4CACnC,UAAlB,EAAU,MAAoB,EAAM,UAAW,gDAC/C,EAAU,MAAQ,GAAQ,EAAM,aAAc,0DAA2D,iBAfvG,CAAkB,EAAW,MAC7B,EAAU,WAEV,EAAY,SAAS,cAAc,UACzB,KAAO,SACjB,EAAU,QAAS,EACnB,KAAK,YAAY,GACjB,EAAU,QACV,KAAK,YAAY,MAbvB,CA0BG,gBAAgB,WAEnB,MAAM,EAAmB,IAAI,QAM7B,SAAS,EAAc,GACnB,MAAM,EANV,SAAsC,GAClC,MAAM,EAAU,aAAkB,QAAU,EAAS,aAAkB,KAAO,EAAO,cAAgB,KAC/F,EAAY,EAAU,EAAQ,QAAQ,iBAAmB,KAC/D,MAAiF,WAAzE,MAAA,OAA6C,EAAS,EAAU,MAAoB,EAAY,KAGtF,CAA6B,EAAM,QACjD,GAAa,EAAU,MACvB,EAAiB,IAAI,EAAU,KAAM,GA0B7C,IAAI,EAiRA,EAgLA,EASA,EA+xBA,EAOA,GAvwCJ,WACI,GAAI,cAAe,MAAM,UACrB,OACJ,IAAI,EACJ,GAAI,gBAAiB,QAAU,iBAAiB,KAAK,UAAU,QAC3D,EAAY,OAAO,YAAY,cAE9B,CAAA,GAAI,gBAAiB,OACtB,OAGA,EAAY,OAAO,MAAM,UAE7B,iBAAiB,QAAS,GAAe,GACzC,OAAO,eAAe,EAAW,YAAa,CAC1C,MACI,GAAiB,UAAb,KAAK,MAAoB,KAAK,kBAAkB,gBAChD,OAAO,EAAiB,IAAI,KAAK,WAjBjD,GAwBA,SAAW,GACP,EAAyB,MAAI,QAC7B,EAAwB,KAAI,OAFhC,CAGG,IAAsB,EAAoB,KAC7C,MAAM,UAAqB,YACvB,cACI,QACA,KAAK,OAAS,QAAQ,UACtB,KAAK,SAAW,IAAI,EAAa,oBAAoB,MAE9C,gCACP,MAAO,CAAC,WAAY,UAAW,OAEnC,oBACI,KAAK,SAAS,UAElB,uBACI,KAAK,SAAS,aAElB,SACI,MAAM,IAAE,GAAQ,KAChB,KAAK,IAAM,KACX,KAAK,IAAM,EAEf,yBAAyB,GACT,WAAR,EACA,KAAK,SAAS,sBAED,OAAR,EACL,KAAK,SAAS,mBAGd,KAAK,SAAS,kBAGlB,UACA,OAAO,KAAK,aAAa,OAEzB,QAAI,GACA,EACA,KAAK,aAAa,MAAO,GAGzB,KAAK,gBAAgB,OAGzB,cACA,OA2CR,SAAqC,GACjC,GACS,SADD,EAAM,cACG,OAAO,EAAkB,KAC7B,OAAO,EAAkB,MA9C3B,CAA4B,KAAK,aAAa,YAAc,IAEnE,YAAQ,GACJ,EACA,KAAK,aAAa,UAAW,GAG7B,KAAK,gBAAgB,WAGzB,eACA,OAAO,KAAK,aAAa,YAEzB,aAAS,GACL,EACA,KAAK,aAAa,WAAY,IAG9B,KAAK,gBAAgB,YAGzB,iBACA,OAAO,KAAK,aAAa,cAEzB,eAAW,GACP,EACA,KAAK,aAAa,aAAc,IAGhC,KAAK,gBAAgB,cAGzB,eACA,OAAQ,KAAK,SAAS,UAEtB,eACA,OAAO,KAAK,gBAAkB,WAAa,KAAK,UAEhD,gBACA,IAAI,EAAI,EACR,OAAoG,QAA5F,EAAmC,QAA7B,EAAK,KAAK,qBAAkC,IAAP,OAAgB,EAAS,EAAG,uBAAoC,IAAP,OAAgB,EAAS,EAAG,aAAa,uBAU7J,SAAS,EAAU,GACf,OAAO,IAAI,IAAI,EAAU,WAAY,SAAS,SAElD,SAAS,EAAU,GACf,IAAI,EACJ,OAAI,EAAI,KACG,EAAI,KAAK,MAAM,IAEjB,EAAc,EAAI,KAAK,MAAM,WAC3B,EAAY,QADlB,EAIT,SAAS,EAAU,EAAM,GAErB,OAAO,GADS,MAAA,OAA6C,EAAS,EAAU,aAAa,gBAAkB,EAAK,aAAa,WAAa,EAAK,QAGvJ,SAAS,EAAa,GAClB,OA2BJ,SAA8B,GAC1B,OAJJ,SAA2B,GACvB,OAAO,EAAI,SAAS,MAAM,KAAK,MAAM,GAG9B,CAAkB,GAAK,OAAO,GAAG,GA5BhC,CAAqB,GAAK,MAAM,aAAe,IAAI,IAAM,GAKrE,SAAS,EAAa,EAAS,GAC3B,MAAM,EAwBV,SAAmB,GACf,OAEsB,EAFE,EAAI,OAAS,EAAI,SAGlC,EAAM,SAAS,KAAO,EAAQ,EAAQ,IADjD,IAA0B,EA3BP,CAAU,GACzB,OAAO,EAAQ,OAAS,EAAU,GAAQ,MAAQ,EAAQ,KAAK,WAAW,GAE9E,SAAS,EAAoB,EAAU,GACnC,OAAO,EAAa,EAAU,MAPrB,EAO6C,GAP3B,MAAM,+BASrC,SAAS,EAAc,GACnB,MAAM,EAAS,EAAU,GACzB,OAAiB,MAAV,EACD,EAAI,KAAK,MAAM,IAAK,EAAO,OAAS,IACpC,EAAI,KAEd,SAAS,EAAW,GAChB,OAAO,EAAc,GAkBzB,MAAM,EACF,YAAY,GACR,KAAK,SAAW,EAEhB,gBACA,OAAO,KAAK,SAAS,GAErB,aACA,OAAQ,KAAK,UAEb,kBACA,OAAO,KAAK,YAAc,KAAO,KAAK,YAAc,IAEpD,kBACA,OAAO,KAAK,YAAc,KAAO,KAAK,YAAc,IAEpD,iBACA,OAAO,KAAK,SAAS,WAErB,eACA,OAAO,EAAU,KAAK,SAAS,KAE/B,aACA,OAAO,KAAK,aAAe,KAAK,YAAY,MAAM,0DAElD,iBACA,OAAO,KAAK,SAAS,OAErB,kBACA,OAAO,KAAK,OAAO,gBAEnB,mBACA,OAAO,KAAK,SAAS,QAAQ,OAE7B,mBACA,OAAI,KAAK,OACE,KAAK,SAAS,QAAQ,OAGtB,QAAQ,aAAQ,GAG/B,OAAO,GACH,OAAO,KAAK,SAAS,QAAQ,IAAI,IAIzC,SAAS,EAAS,GAAW,OAAE,EAAM,WAAE,EAAU,OAAE,GAAW,IAC1D,MAAM,EAAQ,IAAI,YAAY,EAAW,CAAE,WAAA,EAAY,SAAS,EAAM,OAAA,IAOtE,OANI,GAAU,EAAO,YACjB,EAAO,cAAc,GAGrB,SAAS,gBAAgB,cAAc,GAEpC,EAEX,SAAS,IACL,OAAO,IAAI,SAAQ,GAAW,uBAAsB,IAAM,QAQ9D,SAAS,EAAkB,EAAO,IAC9B,OAAO,IAAI,WAAY,gBAAgB,EAAM,aAEjD,SAAS,EAAS,KAAY,GAC1B,MAAM,EAKV,SAAqB,EAAS,GAC1B,OAAO,EAAQ,QAAO,CAAC,EAAQ,EAAQ,IAE5B,EAAS,GADW,MAAb,EAAO,GAAkB,GAAK,EAAO,KAEpD,IATW,CAAY,EAAS,GAAQ,QAAQ,MAAO,IAAI,MAAM,MAC9D,EAAQ,EAAM,GAAG,MAAM,QACvB,EAAS,EAAQ,EAAM,GAAG,OAAS,EACzC,OAAO,EAAM,KAAI,GAAQ,EAAK,MAAM,KAAS,KAAK,MAQtD,SAAS,IACL,OAAO,MAAM,MAAM,KAAM,CAAE,OAAQ,KAAM,KAAI,CAAC,EAAG,IACpC,GAAL,GAAe,IAAL,GAAgB,IAAL,GAAgB,IAAL,EACzB,IAEG,IAAL,EACE,IAEG,IAAL,GACG,KAAK,MAAsB,EAAhB,KAAK,UAAgB,GAAG,SAAS,IAG7C,KAAK,MAAsB,GAAhB,KAAK,UAAe,SAAS,MAEpD,KAAK,IAEZ,SAAS,EAAa,KAAkB,GACpC,IAAK,MAAM,KAAS,EAAS,KAAI,GAAW,MAAA,OAAyC,EAAS,EAAQ,aAAa,KAC/G,GAAoB,iBAAT,EACP,OAAO,EAEf,OAAO,KAEX,SAAS,KAAc,GACnB,IAAK,MAAM,KAAW,EACO,eAArB,EAAQ,WACR,EAAQ,aAAa,OAAQ,IAEjC,EAAQ,aAAa,YAAa,QAG1C,SAAS,KAAkB,GACvB,IAAK,MAAM,KAAW,EACO,eAArB,EAAQ,WACR,EAAQ,gBAAgB,QAE5B,EAAQ,gBAAgB,cAKhC,SAAW,GACP,EAAY,EAAiB,IAAI,GAAK,MACtC,EAAY,EAAkB,KAAI,GAAK,OACvC,EAAY,EAAiB,IAAI,GAAK,MACtC,EAAY,EAAmB,MAAI,GAAK,QACxC,EAAY,EAAoB,OAAI,GAAK,SAL7C,CAMG,IAAgB,EAAc,KAUjC,MAAM,EACF,YAAY,EAAU,EAAQ,EAAU,EAAO,IAAI,gBAAiB,EAAS,MACzE,KAAK,gBAAkB,IAAI,gBAC3B,KAAK,sBAAyB,MAC9B,KAAK,SAAW,EAChB,KAAK,OAAS,EACd,KAAK,QAAU,KAAK,eACpB,KAAK,KAAO,EACZ,KAAK,IAAM,EACX,KAAK,OAAS,EAEd,eACA,OAAO,KAAK,IAEZ,aACA,OAAO,KAAK,IAAI,aAEhB,cACA,OAAO,KAAK,KAAO,MAAM,KAAK,KAAK,KAAK,WAAa,GAEzD,SACI,KAAK,gBAAgB,QAEzB,gBACI,IAAI,EAAI,EACR,MAAM,aAAE,GAAiB,KACgC,QAAxD,GAAM,EAAK,KAAK,UAAU,gCAA6C,IAAP,GAAyB,EAAG,KAAK,EAAI,KAAK,QAAS,YAC9G,KAAK,4BAA4B,GACvC,IACI,KAAK,SAAS,eAAe,MAC7B,MAAM,QAAiB,MAAM,KAAK,IAAI,KAAM,GAC5C,aAAa,KAAK,QAAQ,GAE9B,MAAO,GACH,GAAmB,eAAf,EAAM,KAEN,MADA,KAAK,SAAS,eAAe,KAAM,GAC7B,EAGd,QACI,KAAK,SAAS,gBAAgB,OAGtC,cAAc,GACV,MAAM,EAAgB,IAAI,EAAc,GAWxC,OAVc,EAAS,8BAA+B,CAAE,YAAY,EAAM,OAAQ,CAAE,cAAA,GAAiB,OAAQ,KAAK,SACxG,iBACN,KAAK,SAAS,iCAAiC,KAAM,GAEhD,EAAc,UACnB,KAAK,SAAS,6BAA6B,KAAM,GAGjD,KAAK,SAAS,0BAA0B,KAAM,GAE3C,EAEP,mBACA,IAAI,EACJ,MAAO,CACH,OAAQ,EAAY,KAAK,QAAQ,cACjC,YAAa,cACb,QAAS,KAAK,QACd,SAAU,SACV,KAAM,KAAK,aAAe,KAAO,KAAK,KACtC,OAAQ,KAAK,YACb,SAA4C,QAAjC,EAAK,KAAK,SAAS,gBAA6B,IAAP,OAAgB,EAAS,EAAG,MAGpF,qBACA,MAAO,CACH,OAAU,oCAGd,mBACA,OAAO,KAAK,QAAU,EAAY,IAElC,kBACA,OAAO,KAAK,gBAAgB,OAEhC,kCAAkC,GAC9B,MAAM,EAAsB,IAAI,SAAQ,GAAW,KAAK,sBAAwB,IAClE,EAAS,6BAA8B,CACjD,YAAY,EACZ,OAAQ,CACJ,aAAA,EACA,IAAK,KAAK,IACV,OAAQ,KAAK,uBAEjB,OAAQ,KAAK,SAEP,wBACA,GAIlB,MAAM,EACF,YAAY,EAAU,GAClB,KAAK,SAAU,EACf,KAAK,UAAY,IACb,MAAM,EAAY,EAAQ,OAAO,GAAG,IAChC,MAAA,OAA6C,EAAS,EAAU,iBAChE,KAAK,SAAS,0BAA0B,KAAK,UAGrD,KAAK,SAAW,EAChB,KAAK,QAAU,EACf,KAAK,qBAAuB,IAAI,qBAAqB,KAAK,WAE9D,QACS,KAAK,UACN,KAAK,SAAU,EACf,KAAK,qBAAqB,QAAQ,KAAK,UAG/C,OACQ,KAAK,UACL,KAAK,SAAU,EACf,KAAK,qBAAqB,UAAU,KAAK,WAKrD,MAAM,EACF,YAAY,GACR,KAAK,gBAAkB,SAAS,cAAc,YAC9C,KAAK,gBAAgB,UAAY,EAErC,YAAY,GACR,MAAsB,iBAAX,EACA,IAAI,KAAK,GAGT,EAGX,eACA,MAAM,EAAW,SAAS,yBAC1B,IAAK,MAAM,KAAW,KAAK,gBACvB,EAAS,YAAY,SAAS,WAAW,GAAS,IAEtD,OAAO,EAEP,sBACA,OAAO,KAAK,iBAAiB,QAAO,CAAC,EAAgB,IACd,gBAA/B,EAAM,QAAQ,cACP,IAAI,EAAgB,GAGpB,GAEZ,IAEH,uBACA,OAAO,MAAM,KAAK,KAAK,gBAAgB,QAAQ,WAGvD,EAAc,YAAc,6BAG5B,SAAW,GACP,EAAoB,EAAiC,YAAI,GAAK,cAC9D,EAAoB,EAAgC,WAAI,GAAK,aAC7D,EAAoB,EAA6B,QAAI,GAAK,UAC1D,EAAoB,EAA+B,UAAI,GAAK,YAC5D,EAAoB,EAA8B,SAAI,GAAK,WAC3D,EAAoB,EAA6B,QAAI,GAAK,UAN9D,CAOG,IAAwB,EAAsB,KAEjD,SAAW,GACP,EAAwB,WAAI,oCAC5B,EAAuB,UAAI,sBAC3B,EAAmB,MAAI,aAH3B,CAIG,IAAgB,EAAc,KAQjC,MAAM,EACF,YAAY,EAAU,EAAa,EAAW,GAAe,GACzD,KAAK,MAAQ,EAAoB,YACjC,KAAK,SAAW,EAChB,KAAK,YAAc,EACnB,KAAK,UAAY,EACjB,KAAK,SAwHb,SAAuB,EAAa,GAChC,MAAM,EAAW,IAAI,SAAS,GACxB,EAAO,MAAA,OAA6C,EAAS,EAAU,aAAa,QACpF,EAAQ,MAAA,OAA6C,EAAS,EAAU,aAAa,SACvF,GAAiB,MAAT,GAAiB,EAAS,IAAI,IAAS,GAC/C,EAAS,OAAO,EAAM,GAE1B,OAAO,EA/Ha,CAAc,EAAa,GAC3C,KAAK,SAAW,EAAU,KAAK,QAC3B,KAAK,QAAU,EAAY,KAgJvC,SAA8B,EAAK,GAC/B,MAAM,EAAe,IAAI,gBACzB,IAAK,MAAO,EAAM,KAAU,EACpB,aAAiB,MAErB,EAAa,OAAO,EAAM,GAE9B,EAAI,OAAS,EAAa,WAtJlB,CAAqB,KAAK,SAAU,IAAI,KAAK,KAAK,YAEtD,KAAK,aAAe,IAAI,EAAa,KAAM,KAAK,OAAQ,KAAK,SAAU,KAAK,KAAM,KAAK,aACvF,KAAK,aAAe,EAExB,qBAAqB,EAAS,GAC1B,OAAO,QAAQ,GAEf,aACA,IAAI,EAEJ,OAlNR,SAA+B,GAC3B,OAAQ,EAAO,eACX,IAAK,MAAO,OAAO,EAAY,IAC/B,IAAK,OAAQ,OAAO,EAAY,KAChC,IAAK,MAAO,OAAO,EAAY,IAC/B,IAAK,QAAS,OAAO,EAAY,MACjC,IAAK,SAAU,OAAO,EAAY,QA4M3B,GADmC,QAAzB,EAAK,KAAK,iBAA8B,IAAP,OAAgB,EAAS,EAAG,aAAa,gBAAkB,KAAK,YAAY,aAAa,WAAa,IACpH,gBAAkB,EAAY,IAElE,aACA,IAAI,EACJ,MAAM,EAAuD,iBAA5B,KAAK,YAAY,OAAsB,KAAK,YAAY,OAAS,KAClG,OAAkC,QAAzB,EAAK,KAAK,iBAA8B,IAAP,OAAgB,EAAS,EAAG,aAAa,gBAAkB,KAAK,YAAY,aAAa,WAAa,GAAqB,GAErK,WACA,OAAI,KAAK,SAAW,EAAY,YAAc,KAAK,QAAU,EAAY,IAC9D,IAAI,gBAAgB,KAAK,gBAGzB,KAAK,SAGhB,cACA,IAAI,EACJ,OA5CR,SAA+B,GAC3B,OAAQ,EAAS,eACb,KAAK,EAAY,UAAW,OAAO,EAAY,UAC/C,KAAK,EAAY,MAAO,OAAO,EAAY,MAC3C,QAAS,OAAO,EAAY,YAwCrB,EAAiD,QAAzB,EAAK,KAAK,iBAA8B,IAAP,OAAgB,EAAS,EAAG,aAAa,iBAAmB,KAAK,YAAY,SAE7I,mBACA,OAAO,KAAK,aAAa,aAEzB,qBACA,MAAO,IAAI,KAAK,UAAU,QAAO,CAAC,GAAU,EAAM,KACvC,EAAQ,OAAuB,iBAAT,EAAoB,CAAC,CAAC,EAAM,IAAU,KACpE,IAEH,0BACA,OAAO,KAAK,YAAY,aAAa,sBAErC,wBACA,OAAoC,OAA7B,KAAK,oBAEhB,cACI,MAAM,YAAE,EAAW,WAAE,GAAe,EACpC,GAAI,KAAK,kBAAmB,CAExB,IADe,EAAe,cAAc,KAAK,oBAAqB,KAAK,aAEvE,OAGR,GAAI,KAAK,OAAS,EAEd,OADA,KAAK,MAAQ,EACN,KAAK,aAAa,UAGjC,OACI,MAAM,SAAE,EAAQ,QAAE,GAAY,EAC9B,GAAI,KAAK,OAAS,GAAY,KAAK,OAAS,EAGxC,OAFA,KAAK,MAAQ,EACb,KAAK,aAAa,UACX,EAGf,yBAAyB,EAAS,GAC9B,IAAK,EAAQ,aAAc,CACvB,MAAM,EA2DlB,SAAwB,GACpB,GAAkB,MAAd,EAAoB,CACpB,MACM,GADU,SAAS,OAAS,SAAS,OAAO,MAAM,MAAQ,IACzC,MAAM,GAAW,EAAO,WAAW,KAC1D,GAAI,EAAQ,CACR,MAAM,EAAQ,EAAO,MAAM,KAAK,MAAM,GAAG,KAAK,KAC9C,OAAO,EAAQ,mBAAmB,QAAS,IAjE7B,CAAe,EAAe,gBAAkB,EAAe,cACzE,IACA,EAAQ,gBAAkB,GAE9B,EAAgB,OAAI,CAAC,EAAc,YAAa,EAAgB,QAAG,KAAK,OAGhF,eAAe,GACX,IAAI,EACJ,KAAK,MAAQ,EAAoB,QACP,QAAzB,EAAK,KAAK,iBAA8B,IAAP,GAAyB,EAAG,aAAa,WAAY,IACvF,EAAS,qBAAsB,CAAE,OAAQ,KAAK,YAAa,OAAQ,CAAE,eAAgB,QACrF,KAAK,SAAS,sBAAsB,MAExC,iCAAiC,EAAS,GACtC,KAAK,OAAS,CAAE,QAAS,EAAS,UAAW,cAAe,GAEhE,6BAA6B,EAAS,GAClC,GAAI,EAAS,aAAe,EAAS,YACjC,KAAK,SAAS,iCAAiC,KAAM,QAEpD,GAAI,KAAK,oBAAoB,IAoD1C,SAA0C,GACtC,OAA8B,KAAvB,EAAS,aAAsB,EAAS,WArDG,CAAiC,GAAW,CACtF,MAAM,EAAQ,IAAI,MAAM,oDACxB,KAAK,SAAS,sBAAsB,KAAM,QAG1C,KAAK,MAAQ,EAAoB,UACjC,KAAK,OAAS,CAAE,SAAS,EAAM,cAAe,GAC9C,KAAK,SAAS,oCAAoC,KAAM,GAGhE,0BAA0B,EAAS,GAC/B,KAAK,OAAS,CAAE,SAAS,EAAO,cAAe,GAC/C,KAAK,SAAS,iCAAiC,KAAM,GAEzD,eAAe,EAAS,GACpB,KAAK,OAAS,CAAE,SAAS,EAAO,MAAA,GAChC,KAAK,SAAS,sBAAsB,KAAM,GAE9C,gBAAgB,GACZ,IAAI,EACJ,KAAK,MAAQ,EAAoB,QACP,QAAzB,EAAK,KAAK,iBAA8B,IAAP,GAAyB,EAAG,gBAAgB,YAC9E,EAAS,mBAAoB,CAAE,OAAQ,KAAK,YAAa,OAAQ,OAAO,OAAO,CAAE,eAAgB,MAAQ,KAAK,UAC9G,KAAK,SAAS,uBAAuB,MAEzC,oBAAoB,GAChB,OAAQ,EAAQ,cAAgB,KAAK,cAsB7C,SAAS,EAAe,GACpB,MAAM,EAAU,SAAS,cAAc,cAAc,OACrD,OAAO,GAAW,EAAQ,QAgB9B,MAAM,EACF,YAAY,GACR,KAAK,QAAU,EAEf,eACA,MAAO,IAAI,KAAK,QAAQ,UAE5B,UAAU,GACN,OAA2C,MAApC,KAAK,oBAAoB,GAEpC,oBAAoB,GAChB,OAAO,EAAS,KAAK,QAAQ,cAAc,QAAQ,gBAAqB,OAAc,KAEtF,kBACA,OAAO,KAAK,QAAQ,YAEpB,gCACA,OAAO,KAAK,QAAQ,cAAc,eAElC,wBACA,MAAO,IAAI,KAAK,QAAQ,iBAAiB,+BAE7C,wBAAwB,GACpB,OAAO,KAAK,QAAQ,cAAc,IAAI,2BAE1C,kCAAkC,GAC9B,MAAM,EAAsB,GAC5B,IAAK,MAAM,KAA2B,KAAK,kBAAmB,CAC1D,MAAM,GAAE,GAAO,EACT,EAAsB,EAAS,wBAAwB,GACzD,IACA,EAAoB,GAAM,CAAC,EAAyB,IAG5D,OAAO,GAIf,MAAM,EACF,YAAY,EAAU,GAClB,KAAK,cAAkB,IACnB,MAAM,EAAO,EAAM,OACnB,IAAK,EAAM,kBAAoB,aAAgB,iBAAmB,EAAK,QAAQ,sBAAwB,KAAK,QAAS,CACjH,MAAM,EAAY,EAAM,gBAAa,EAEvB,YADE,MAAA,OAA6C,EAAS,EAAU,aAAa,gBAAkB,EAAK,SAC1F,KAAK,SAAS,8BAA8B,EAAM,KACxE,EAAM,iBACN,EAAM,2BACN,KAAK,SAAS,0BAA0B,EAAM,MAI1D,KAAK,SAAW,EAChB,KAAK,QAAU,EAEnB,QACI,KAAK,QAAQ,iBAAiB,SAAU,KAAK,eAEjD,OACI,KAAK,QAAQ,oBAAoB,SAAU,KAAK,gBAIxD,MAAM,EACF,YAAY,EAAU,GAClB,KAAK,qBAAwB,MAC7B,KAAK,2BAA8B,MACnC,KAAK,SAAW,EAChB,KAAK,QAAU,EAEnB,eAAe,GACX,MAAM,EAAU,KAAK,SAAS,oBAAoB,GAC9C,GACA,KAAK,gBAAgB,GACrB,KAAK,aAAa,IAGlB,KAAK,iBAAiB,CAAE,EAAG,EAAG,EAAG,IAGzC,2BAA2B,GACvB,KAAK,eAAe,EAAU,IAElC,gBAAgB,GACZ,EAAQ,iBAEZ,aAAa,GACL,aAAmB,cACf,EAAQ,aAAa,YACrB,EAAQ,SAGR,EAAQ,aAAa,WAAY,MACjC,EAAQ,QACR,EAAQ,gBAAgB,cAIpC,kBAAiB,EAAE,EAAC,EAAE,IAClB,KAAK,WAAW,SAAS,EAAG,GAEhC,cACI,KAAK,iBAAiB,CAAE,EAAG,EAAG,EAAG,IAEjC,iBACA,OAAO,OAEX,aAAa,GACT,MAAM,UAAE,EAAS,aAAE,EAAc,YAAa,GAAa,EAC3D,GAAI,EACA,IACI,KAAK,cAAgB,IAAI,SAAQ,GAAW,KAAK,qBAAuB,IACxE,KAAK,SAAW,EAChB,KAAK,wBAAwB,GAC7B,MAAM,EAAqB,IAAI,SAAQ,GAAW,KAAK,2BAA6B,IAC5D,KAAK,SAAS,sBAAsB,EAAU,KAAK,mCAEjE,QACJ,KAAK,eAAe,GAC1B,KAAK,SAAS,qBAAqB,EAAU,GAC7C,KAAK,wBAAwB,GAEjC,eACW,KAAK,SACZ,KAAK,0BAAqB,UACnB,KAAK,mBAIhB,KAAK,aAGb,aACI,KAAK,SAAS,kBAElB,wBAAwB,GACpB,KAAK,cAAc,EAAS,WAC5B,EAAS,kBAEb,cAAc,GACN,EACA,KAAK,QAAQ,aAAa,qBAAsB,IAGhD,KAAK,QAAQ,gBAAgB,sBAGrC,qBAAqB,SACX,EAAS,SAEnB,wBAAwB,GACpB,EAAS,mBAIjB,MAAM,UAAkB,EACpB,aACI,KAAK,QAAQ,UAAY,GAEzB,eACA,OAAO,IAAI,EAAS,KAAK,UAIjC,MAAM,EACF,YAAY,EAAU,GAClB,KAAK,aAAgB,IACb,KAAK,sBAAsB,EAAM,QACjC,KAAK,WAAa,SAGX,KAAK,YAGpB,KAAK,YAAgB,IACb,KAAK,YAAc,KAAK,sBAAsB,EAAM,SAAW,EAAM,kBAAkB,SACnF,KAAK,SAAS,yBAAyB,EAAM,OAAQ,EAAM,OAAO,OAClE,KAAK,WAAW,iBAChB,EAAM,iBACN,KAAK,SAAS,qBAAqB,EAAM,OAAQ,EAAM,OAAO,aAG/D,KAAK,YAEhB,KAAK,UAAY,YACN,KAAK,YAEhB,KAAK,SAAW,EAChB,KAAK,QAAU,EAEnB,QACI,KAAK,QAAQ,iBAAiB,QAAS,KAAK,cAC5C,SAAS,iBAAiB,cAAe,KAAK,aAC9C,SAAS,iBAAiB,qBAAsB,KAAK,WAEzD,OACI,KAAK,QAAQ,oBAAoB,QAAS,KAAK,cAC/C,SAAS,oBAAoB,cAAe,KAAK,aACjD,SAAS,oBAAoB,qBAAsB,KAAK,WAE5D,sBAAsB,GAClB,MAAM,EAAU,aAAkB,QAC5B,EACA,aAAkB,KACd,EAAO,cACP,KACV,OAAO,GAAW,EAAQ,QAAQ,sBAAwB,KAAK,SAqDvE,MAAM,EACF,YAAY,EAAiB,EAAa,EAAW,GAAa,GAC9D,KAAK,gBAAkB,EACvB,KAAK,YAAc,EACnB,KAAK,UAAY,EACjB,KAAK,WAAa,EAClB,KAAK,QAAU,IAAI,SAAQ,CAAC,EAAS,IAAW,KAAK,mBAAqB,CAAE,QAAA,EAAS,OAAA,KAErF,mBACA,OAAO,EAEX,mBAGA,kBACQ,KAAK,qBACL,KAAK,mBAAmB,iBACjB,KAAK,oBAGpB,oBAAoB,GAChB,GAA+C,SAA3C,EAAQ,aAAa,mBACrB,OAAO,EAEN,CACD,MAAM,EAAuB,SAAS,cAAc,UAOpD,OANI,KAAK,WACL,EAAqB,MAAQ,KAAK,UAEtC,EAAqB,YAAc,EAAQ,YAC3C,EAAqB,OAAQ,EA+BzC,SAA+B,EAAoB,GAC/C,IAAK,MAAM,KAAE,EAAI,MAAE,IAAW,IAAI,EAAc,YAC5C,EAAmB,aAAa,EAAM,GAhClC,CAAsB,EAAsB,GACrC,GAGf,4BAA4B,IApFhC,MACI,YAAY,GACR,KAAK,oBAAsB,EAE/B,mCAAmC,EAAqB,GACpD,MAAM,EAAQ,IAAI,KAAK,GACvB,EAAM,QACN,IACA,EAAM,QAEV,QACI,IAAK,MAAM,KAAM,KAAK,oBAAqB,CACvC,MAAO,CAAE,GAAuB,KAAK,oBAAoB,GACzD,KAAK,0CAA0C,IAGvD,QACI,IAAK,MAAM,KAAM,KAAK,oBAAqB,CACvC,MAAO,GAA2B,KAAK,oBAAoB,GAC3D,KAAK,wCAAwC,GAC7C,KAAK,uCAAuC,IAGpD,0CAA0C,GACtC,MAAM,EAkBd,SAA8C,GAC1C,MAAM,EAAU,SAAS,cAAc,QAGvC,OAFA,EAAQ,aAAa,OAAQ,+BAC7B,EAAQ,aAAa,UAAW,EAAiB,IAC1C,EAtBiB,CAAqC,GACzD,EAAiB,YAAY,GAEjC,wCAAwC,GACpC,MAAM,EAAQ,EAAiB,WAAU,GACzC,EAAiB,YAAY,GAEjC,uCAAuC,GACnC,MAAM,EAAc,KAAK,mBAAmB,EAAiB,IAC7D,MAAA,GAA0D,EAAY,YAAY,GAEtF,mBAAmB,GACf,OAAO,KAAK,aAAa,MAAK,GAAW,EAAQ,SAAW,IAE5D,mBACA,MAAO,IAAI,SAAS,iBAAiB,uDA8C/B,4BAA4B,KAAK,oBAAqB,GAEhE,iCACI,MAAM,EAAU,KAAK,kBAAkB,2BA2B/C,SAA4B,GACxB,OAAO,GAAmC,mBAAjB,EAAQ,OA3BzB,CAAmB,IACnB,EAAQ,QAGZ,wBACA,OAAO,KAAK,YAAY,YAAc,KAAK,YAAc,KAAK,gBAE9D,qBACA,OAAO,KAAK,gBAAgB,QAE5B,iBACA,OAAO,KAAK,YAAY,QAExB,0BACA,OAAO,KAAK,gBAAgB,kCAAkC,KAAK,aAEnE,eACA,IAAI,EACJ,OAAwE,QAAhE,EAAK,SAAS,KAAK,cAAc,iCAA8C,IAAP,OAAgB,EAAS,EAAG,aAAa,YAYjI,MAAM,UAAsB,EACpB,mBACA,OAAO,EAEX,qBACU,IACN,KAAK,6BAA4B,KAC7B,KAAK,sBAET,KAAK,4BACC,IACN,KAAK,uCACC,IACN,KAAK,yBAET,mBACI,IAAI,EACJ,MAAM,EAAmB,SAAS,cAClC,EAAiB,mBAAmB,KAAK,gBACzC,EAAiB,iBACjB,MAAM,EAAe,KAAK,WACpB,EAAoD,QAArC,EAAK,EAAa,qBAAkC,IAAP,OAAgB,EAAS,EAAG,cAC1F,IACA,EAAY,mBAAmB,GAC/B,KAAK,eAAe,YAAY,EAAY,oBAGpD,sBACI,GAAI,KAAK,eAAe,YAAc,KAAK,WAAW,WAAY,CAC9D,MAAM,EAAU,KAAK,eAAe,kBAC9B,GAkBiB,EAlBiB,KAAK,eAAe,aAAa,yBAkB3C,EAlBqE,MAmB9F,OAAT,GAA2B,SAAT,GAA6B,UAAT,GAA8B,WAAT,EACpD,EAGA,GAtBH,GAAI,EAEA,OADA,EAAQ,eAAe,CAAE,MAAA,KAClB,EAevB,IAAmC,EAAO,EAZlC,OAAO,EAEX,yBACI,IAAK,MAAM,KAAsB,KAAK,kBAAmB,CACrD,MAAM,EAAyB,KAAK,oBAAoB,GACxD,EAAmB,YAAY,IAGnC,wBACA,OAAO,KAAK,eAAe,iBAAiB,WAYpD,MAAM,EACF,cACI,KAAK,QAAS,EACd,KAAK,MAAQ,EACb,KAAK,SAAU,EACf,KAAK,QAAU,KACX,KAAK,SAAS,KAAK,MAAQ,KAAK,SAAW,MAE/C,KAAK,kBAAoB,KAAK,0BAC9B,KAAK,gBAAkB,KAAK,wBAC5B,KAAK,2BACL,KAAK,SAAS,GAEP,wBACP,OAAO,CAAS;;;;;;;;;;kBAUV,EAAY;oBACV,EAAY,kBAAoB,OAAO,EAAY,kBAAoB;;;MAKnF,OACS,KAAK,UACN,KAAK,SAAU,EACf,KAAK,yBACL,KAAK,kBAGb,OACQ,KAAK,UAAY,KAAK,SACtB,KAAK,QAAS,EACd,KAAK,qBAAoB,KACrB,KAAK,2BACL,KAAK,gBACL,KAAK,SAAU,EACf,KAAK,QAAS,MAI1B,SAAS,GACL,KAAK,MAAQ,EACb,KAAK,UAET,2BACI,SAAS,KAAK,aAAa,KAAK,kBAAmB,SAAS,KAAK,YAErE,yBACI,KAAK,gBAAgB,MAAM,MAAQ,IACnC,KAAK,gBAAgB,MAAM,QAAU,IACrC,SAAS,gBAAgB,aAAa,KAAK,gBAAiB,SAAS,MACrE,KAAK,UAET,oBAAoB,GAChB,KAAK,gBAAgB,MAAM,QAAU,IACrC,WAAW,EAA0C,IAAhC,EAAY,mBAErC,2BACQ,KAAK,gBAAgB,YACrB,SAAS,gBAAgB,YAAY,KAAK,iBAGlD,iBACS,KAAK,kBACN,KAAK,gBAAkB,OAAO,YAAY,KAAK,QAAS,EAAY,oBAG5E,gBACI,OAAO,cAAc,KAAK,wBACnB,KAAK,gBAEhB,UACI,uBAAsB,KAClB,KAAK,gBAAgB,MAAM,MAAW,GAAmB,GAAb,KAAK,MAAd,OAG3C,0BACI,MAAM,EAAU,SAAS,cAAc,SAGvC,OAFA,EAAQ,KAAO,WACf,EAAQ,YAAc,EAAY,WAC3B,EAEX,wBACI,MAAM,EAAU,SAAS,cAAc,OAEvC,OADA,EAAQ,UAAY,qBACb,GAGf,EAAY,kBAAoB,IAEhC,MAAM,UAAqB,EACvB,cACI,SAAS,WACT,KAAK,mBAAqB,KAAK,SAC1B,QAAQ,IA0ErB,SAA2B,GAEvB,MAAkB,YADF,EAAQ,QAAQ,cA3EF,CAAkB,KACvC,KAAK,GAqFlB,SAA6B,GACrB,EAAQ,aAAa,UACrB,EAAQ,aAAa,QAAS,IAElC,OAAO,EAzFmB,CAAoB,KACrC,QAAO,CAAC,EAAQ,KACjB,MAAM,UAAE,GAAc,EAChB,EAAU,KAAa,EACvB,EAAO,GACP,CACE,KAAM,EAAY,GAClB,QAAS,EAAiB,GAC1B,SAAU,IAElB,OAAO,OAAO,OAAO,OAAO,OAAO,GAAI,GAAS,CAAE,CAAC,GAAY,OAAO,OAAO,OAAO,OAAO,GAAI,GAAU,CAAE,SAAU,IAAI,EAAQ,SAAU,SAC5I,IAEH,8BACA,OAAO,OAAO,KAAK,KAAK,oBACnB,QAAO,GAAa,KAAK,mBAAmB,GAAW,UACvD,KAAK,IAEd,+BAA+B,GAC3B,OAAO,KAAK,qCAAqC,SAAU,GAE/D,mCAAmC,GAC/B,OAAO,KAAK,qCAAqC,aAAc,GAEnE,qCAAqC,EAAa,GAC9C,OAAO,OAAO,KAAK,KAAK,oBACnB,QAAO,KAAe,KAAa,EAAS,sBAC5C,KAAI,GAAa,KAAK,mBAAmB,KACzC,QAAO,EAAG,KAAA,KAAW,GAAQ,IAC7B,KAAI,EAAG,UAAW,MAAe,IAEtC,0BACA,OAAO,OAAO,KAAK,KAAK,oBAAoB,QAAO,CAAC,EAAQ,KACxD,MAAM,KAAE,EAAI,QAAE,EAAO,SAAE,GAAa,KAAK,mBAAmB,GAC5D,OAAY,MAAR,GAAiB,EAGZ,EAAS,OAAS,EAChB,IAAI,KAAW,EAAS,MAAM,IAG9B,EANA,IAAI,KAAW,KAQ3B,IAEP,aAAa,GACT,MAAM,EAAU,KAAK,sBAAsB,GAC3C,OAAO,EACD,EAAQ,aAAa,WACrB,KAEV,sBAAsB,GAClB,OAAO,OAAO,KAAK,KAAK,oBAAoB,QAAO,CAAC,EAAQ,KACxD,MAAQ,UAAW,IAAa,KAAK,mBAAmB,GACxD,OA2BZ,SAAsC,EAAS,GAE3C,MAAkB,QADF,EAAQ,QAAQ,eACJ,EAAQ,aAAa,SAAW,EA7B7C,CAA6B,EAAS,GAAQ,EAAU,SAChE,IAGX,SAAS,EAAY,GACjB,OAUJ,SAAyB,GAErB,MAAkB,UADF,EAAQ,QAAQ,cAX5B,CAAgB,GACT,SAiBf,SAA6B,GACzB,MAAM,EAAU,EAAQ,QAAQ,cAChC,MAAkB,SAAX,GAAkC,QAAX,GAAoD,cAA/B,EAAQ,aAAa,OAjB/D,CAAoB,GAClB,kBADN,EAIT,SAAS,EAAiB,GACtB,MAAmD,UAA5C,EAAQ,aAAa,oBAyBhC,MAAM,UAAqB,EACvB,YAAY,EAAS,GACjB,MAAM,GACN,KAAK,aAAe,EAExB,sBAAsB,EAAO,IACzB,OAAO,KAAK,aAAa,EAAkB,IAE/C,mBAAmB,GACf,OAAO,KAAK,aAAa,EAAQ,eAErC,qBAAoB,KAAE,EAAI,KAAE,IACxB,OAAO,IAAI,KAAK,EAAM,IAAI,EAAa,IAE3C,QACI,OAAO,IAAI,EAAa,KAAK,QAAQ,WAAU,GAAO,KAAK,cAE3D,kBACA,OAAO,KAAK,aAAa,QAEzB,mBACA,IAAI,EAEJ,OAAO,EADyC,QAAlC,EAAK,KAAK,WAAW,eAA4B,IAAP,EAAgB,EAAK,KAG7E,wBACA,OAAO,KAAK,WAAW,iBAEvB,oBACA,MAAiC,cAA1B,KAAK,kBAEZ,kBACA,MAAiC,YAA1B,KAAK,kBAEZ,kBACA,MAA2C,UAApC,KAAK,WAAW,iBAE3B,WAAW,GACP,OAAO,KAAK,aAAa,aAAa,SAAS,OAKvD,SAAW,GACP,EAAyB,WAAI,aAC7B,EAA2B,aAAI,eAC/B,EAAyB,WAAI,aAC7B,EAAuB,SAAI,WAJ/B,CAKG,IAAiB,EAAe,KAEnC,SAAW,GACP,EAAwB,YAAI,cAC5B,EAAoB,QAAI,UACxB,EAAqB,SAAI,WACzB,EAAmB,OAAI,SACvB,EAAsB,UAAI,YAL9B,CAMG,IAAe,EAAa,KAC/B,MAAM,EAAiB,CACnB,OAAQ,UACR,gBAAgB,EAChB,oBAAqB,OACrB,YAAY,GAEhB,IAAI,EA4vBA,GA3vBJ,SAAW,GACP,EAAiB,EAAiC,eAAI,GAAK,iBAC3D,EAAiB,EAAiC,gBAAK,GAAK,iBAC5D,EAAiB,EAAsC,qBAAK,GAAK,sBAHrE,CAIG,IAAqB,EAAmB,KAC3C,MAAM,EACF,YAAY,EAAU,EAAU,EAAuB,EAAU,IAC7D,KAAK,WAAa,IAClB,KAAK,cAAgB,GACrB,KAAK,kBAAmB,EACxB,KAAK,gBAAiB,EACtB,KAAK,UAAW,EAChB,KAAK,gBAAiB,EACtB,KAAK,MAAQ,EAAW,YACxB,KAAK,SAAW,EAChB,KAAK,SAAW,EAChB,KAAK,sBAAwB,GAAyB,IACtD,MAAM,OAAE,EAAM,eAAE,EAAc,SAAE,EAAQ,aAAE,EAAY,SAAE,EAAQ,oBAAE,EAAmB,WAAE,GAAe,OAAO,OAAO,OAAO,OAAO,GAAI,GAAiB,GACvJ,KAAK,OAAS,EACd,KAAK,eAAiB,EACtB,KAAK,SAAW,EAChB,KAAK,aAAe,EACpB,KAAK,SAAW,EAChB,KAAK,WAAa,KAAK,SAAS,6BAA6B,KAAK,SAAU,KAAK,QACjF,KAAK,oBAAsB,EAC3B,KAAK,WAAa,EAClB,KAAK,UAAY,EAEjB,cACA,OAAO,KAAK,SAAS,QAErB,WACA,OAAO,KAAK,SAAS,KAErB,cACA,OAAO,KAAK,SAAS,QAErB,sBACA,OAAO,KAAK,QAAQ,gCAAgC,KAAK,uBAEzD,aACA,OAAO,KAAK,WAEhB,QACQ,KAAK,OAAS,EAAW,cACzB,KAAK,mBAAmB,EAAa,YACrC,KAAK,MAAQ,EAAW,QACxB,KAAK,QAAQ,aAAa,MAC1B,KAAK,SAAS,aAAa,OAGnC,SACQ,KAAK,OAAS,EAAW,UACrB,KAAK,SACL,KAAK,QAAQ,SAEjB,KAAK,eACL,KAAK,MAAQ,EAAW,UAGhC,WACQ,KAAK,OAAS,EAAW,UACzB,KAAK,mBAAmB,EAAa,UACrC,KAAK,MAAQ,EAAW,UACxB,KAAK,QAAQ,eAAe,MAC5B,KAAK,SAAS,eAAe,MAC7B,KAAK,kBAGb,OACQ,KAAK,OAAS,EAAW,UACzB,KAAK,MAAQ,EAAW,OACxB,KAAK,QAAQ,YAAY,OAGjC,gBACI,IAAI,EACJ,IAAK,KAAK,eAAgB,CACtB,MAAM,EAAmB,KAAK,SAAS,QAAmC,QAAxB,EAAK,KAAK,gBAA6B,IAAP,OAAgB,EAAS,EAAG,MAAQ,UAAY,KAAK,OACjI,EAAS,KAAK,0BAA0B,GAC9C,KAAK,QAAQ,OAAO,EAAQ,KAAK,SAAU,KAAK,uBAChD,KAAK,gBAAiB,GAG9B,eACQ,KAAK,uBACL,KAAK,kBAEA,KAAK,uBAAyB,KAAK,UACxC,KAAK,QAAU,IAAI,EAAa,KAAM,EAAY,IAAK,KAAK,UAC5D,KAAK,QAAQ,WAGrB,kBACQ,KAAK,WACL,KAAK,eACL,KAAK,iBACL,KAAK,iBAGb,eACI,KAAK,mBAAmB,EAAa,cACrC,KAAK,QAAQ,oBAAoB,MAErC,eAAe,EAAW,KAAK,UAE3B,GADA,KAAK,SAAW,EACZ,EAAU,CACV,MAAM,WAAE,GAAe,EACnB,EAAa,GACb,KAAK,QAAQ,sBAAsB,MAGnC,KAAK,QAAQ,iCAAiC,KAAM,IAIhE,gBACI,KAAK,mBAAmB,EAAa,YACrC,KAAK,QAAQ,qBAAqB,MAEtC,eACI,GAAI,KAAK,SAAU,CACf,MAAM,WAAE,EAAU,aAAE,GAAiB,KAAK,SAC1C,KAAK,QAAO,UACR,KAAK,gBACD,KAAK,KAAK,qBACJ,KAAK,KAAK,cAChB,EAAa,IAA+B,MAAhB,SACtB,KAAK,KAAK,WAAW,EAAa,eAAe,IAAe,EAAO,KAAK,YAClF,KAAK,QAAQ,cAAc,MAC3B,KAAK,mBAGC,KAAK,KAAK,YAAY,EAAa,eAAe,IACxD,KAAK,QAAQ,cAAc,MAC3B,KAAK,YAKrB,oBACI,MAAM,EAAW,KAAK,KAAK,6BAA6B,KAAK,WAAa,KAAK,uBAC/E,GAAI,KAAc,EAAU,KAAK,WAAa,EAAS,UAAU,EAAU,KAAK,cACzD,WAAf,KAAK,QAAuB,EAAS,eACrC,OAAO,EAInB,uBACI,GAAI,KAAK,aACL,OAAO,EAAa,eAAe,KAAK,cAGhD,oBACI,OAAmC,MAA5B,KAAK,oBAEhB,qBACI,MAAM,EAAW,KAAK,oBACtB,GAAI,EAAU,CACV,MAAM,EAAY,KAAK,qBACvB,KAAK,QAAO,UACR,KAAK,gBACD,KAAK,WACL,KAAK,QAAQ,cAAc,OAGvB,KAAK,KAAK,qBACJ,KAAK,KAAK,oBACd,KAAK,KAAK,WAAW,EAAU,EAAW,KAAK,YACrD,KAAK,QAAQ,cAAc,MACtB,GACD,KAAK,gBAMzB,iBACI,IAAI,EACA,KAAK,uBAAyB,KAAK,mBAA8C,QAAxB,EAAK,KAAK,gBAA6B,IAAP,OAAgB,EAAS,EAAG,cACrH,KAAK,QAAQ,wBAAwB,KAAK,qBAAsB,CAC5D,OAAQ,UACR,SAAU,KAAK,WAEnB,KAAK,kBAAmB,GAGhC,qBACQ,KAAK,YACL,KAAK,QAAO,UACR,KAAK,gBACL,KAAK,QAAQ,cAAc,SAIvC,iBACI,KAAK,eAET,iCAAiC,EAAS,IAE1C,mCAAmC,EAAS,GACxC,MAAM,QAAqB,EAAS,cAC9B,WAAE,EAAU,WAAE,GAAe,EACf,MAAhB,EACA,KAAK,eAAe,CAAE,WAAY,EAAiB,oBAAqB,WAAA,KAGxE,KAAK,qBAAuB,EAAS,WAAa,EAAS,cAAW,EACtE,KAAK,eAAe,CAAE,WAAY,EAAY,aAAA,EAAc,WAAA,KAGpE,gCAAgC,EAAS,GACrC,MAAM,QAAqB,EAAS,cAC9B,WAAE,EAAU,WAAE,GAAe,EACf,MAAhB,EACA,KAAK,eAAe,CAAE,WAAY,EAAiB,oBAAqB,WAAA,IAGxE,KAAK,eAAe,CAAE,WAAY,EAAY,aAAA,EAAc,WAAA,IAGpE,eAAe,EAAS,GACpB,KAAK,eAAe,CAAE,WAAY,EAAiB,eAAgB,YAAY,IAEnF,kBACI,KAAK,gBAET,gBACS,KAAK,WACa,WAAf,KAAK,OACL,KAAK,4BAA8B,KAAK,kBAAoB,KAAK,KAAK,cAGtE,KAAK,kBAAoB,KAAK,KAAK,cAEnC,KAAK,YACL,KAAK,SAAS,gCAAgC,KAAK,KAAK,qBAAsB,KAAK,UAEvF,KAAK,UAAW,GAGxB,2BACI,MAAM,eAAE,GAAmB,KAAK,gBAChC,GAAI,EAEA,OADA,KAAK,KAAK,iBAAiB,IACpB,EAGf,iBACI,MAAM,EAAS,EAAU,KAAK,UAC9B,GAAc,MAAV,EAEA,OADA,KAAK,KAAK,eAAe,IAClB,EAGf,mBAAmB,GACf,KAAK,cAAc,IAAU,IAAI,MAAO,UAE5C,mBACI,OAAO,OAAO,OAAO,GAAI,KAAK,eAElC,0BAA0B,GACtB,OAAQ,GACJ,IAAK,UAAW,OAAO,QAAQ,aAC/B,IAAK,UACL,IAAK,UAAW,OAAO,QAAQ,WAGvC,uBACI,MAA+B,iBAAjB,KAAK,SAEvB,qBACI,OAAI,KAAK,aAGe,WAAf,KAAK,QACF,KAAK,oBAGN,KAAK,YAGpB,gBACS,KAAK,iBACN,KAAK,KAAK,gBAAgB,MAAK,GAAY,GAAY,KAAK,oBAAoB,KAChF,KAAK,gBAAiB,GAG9B,aAAa,GACT,KAAK,qBACC,IAAI,SAAQ,IACd,KAAK,MAAQ,uBAAsB,IAAM,eAEvC,WACC,KAAK,MACZ,KAAK,gBAET,eACQ,KAAK,QACL,qBAAqB,KAAK,cACnB,KAAK,QAIxB,SAAS,EAAa,GAClB,OAAO,GAAc,KAAO,EAAa,IAG7C,MAAM,EACF,YAAY,GACR,KAAK,YAAc,IAAI,EACvB,KAAK,gBAAkB,KACnB,KAAK,YAAY,QAErB,KAAK,QAAU,EAEnB,wBAAwB,EAAU,GAC9B,KAAK,UAAU,WAAW,EAAU,IAAQ,GAEhD,aAAa,GACT,EAAM,qBACN,EAAM,eACN,EAAM,gBACN,EAAM,qBAEV,oBAAoB,GAChB,KAAK,YAAY,SAAS,GACtB,EAAM,qBAAuC,WAAhB,EAAM,OACnC,KAAK,iCAGL,KAAK,kBAGb,sBAAsB,GAClB,EAAM,eAEV,iCAAiC,EAAO,GACpC,OAAQ,GACJ,KAAK,EAAiB,eACtB,KAAK,EAAiB,eACtB,KAAK,EAAiB,oBAClB,OAAO,KAAK,SAChB,QACI,OAAO,EAAM,gBAGzB,qBAAqB,GACjB,KAAK,YAAY,SAAS,GAC1B,KAAK,uBAET,eAAe,IAEf,kBACI,KAAK,SAET,YAAY,IAEZ,cAAc,IAEd,sBAAsB,GAClB,KAAK,YAAY,SAAS,GAC1B,KAAK,gCAET,uBAAuB,GACnB,KAAK,YAAY,SAAS,GAC1B,KAAK,sBAET,iCACI,KAAK,wBAA0B,OAAO,WAAW,KAAK,gBAAiB,KAAK,QAAQ,kBAExF,uBACI,KAAK,YAAY,OACmB,MAAhC,KAAK,0BACL,OAAO,aAAa,KAAK,gCAClB,KAAK,yBAGpB,gCACuC,MAA/B,KAAK,yBACL,KAAK,uBAAyB,OAAO,WAAW,KAAK,gBAAiB,KAAK,QAAQ,mBAG3F,sBACI,KAAK,YAAY,OACkB,MAA/B,KAAK,yBACL,OAAO,aAAa,KAAK,+BAClB,KAAK,wBAGpB,SACI,OAAO,SAAS,SAEhB,gBACA,OAAO,KAAK,QAAQ,WAI5B,MAAM,EACF,cACI,KAAK,SAAU,EAEnB,QACS,KAAK,UACN,KAAK,SAAU,EACf,iBAAiB,qBAAsB,KAAK,qBAAqB,IAGzE,OACQ,KAAK,UACL,KAAK,SAAU,EACf,oBAAoB,qBAAsB,KAAK,qBAAqB,IAG5E,sBACI,MAAM,EAAgB,IAAI,SAAS,iBAAiB,+BACpD,IAAK,MAAM,KAAW,EAClB,EAAQ,UAKpB,MAAM,EACF,YAAY,GACR,KAAK,SAAU,EACf,KAAK,eAAiB,KAClB,oBAAoB,SAAU,KAAK,eAAe,GAClD,iBAAiB,SAAU,KAAK,eAAe,IAEnD,KAAK,cAAkB,IACnB,IAAK,EAAM,iBAAkB,CACzB,MAAM,EAAO,EAAM,kBAAkB,gBAAkB,EAAM,YAAS,EAChE,EAAY,EAAM,gBAAa,EACrC,GAAI,EAAM,CAEQ,YADE,MAAA,OAA6C,EAAS,EAAU,aAAa,gBAAkB,EAAK,aAAa,YACvG,KAAK,SAAS,eAAe,EAAM,KACzD,EAAM,iBACN,KAAK,SAAS,cAAc,EAAM,OAKlD,KAAK,SAAW,EAEpB,QACS,KAAK,UACN,iBAAiB,SAAU,KAAK,gBAAgB,GAChD,KAAK,SAAU,GAGvB,OACQ,KAAK,UACL,oBAAoB,SAAU,KAAK,gBAAgB,GACnD,KAAK,SAAU,IAK3B,MAAM,EACF,YAAY,GACR,KAAK,QAAU,EACf,KAAK,gBAAkB,IAAI,EAAgB,KAAM,GACjD,KAAK,gBAAkB,IAAI,EAAgB,KAAM,GAErD,QACI,KAAK,gBAAgB,QACrB,KAAK,gBAAgB,QAEzB,OACI,KAAK,gBAAgB,OACrB,KAAK,gBAAgB,OAEzB,yBAAyB,EAAS,GAC9B,OAAO,KAAK,eAAe,GAE/B,qBAAqB,EAAS,GAC1B,MAAM,EAAQ,KAAK,iBAAiB,GAChC,GACA,EAAM,SAAS,qBAAqB,EAAS,GAGrD,8BAA8B,EAAS,GACnC,OAAO,KAAK,aAAa,EAAS,GAEtC,0BAA0B,EAAS,GAC/B,MAAM,EAAQ,KAAK,iBAAiB,EAAS,GACzC,IACA,EAAM,gBAAgB,cACtB,EAAM,SAAS,0BAA0B,EAAS,IAG1D,aAAa,EAAM,GACf,IAAI,EACJ,MAAM,EAAS,EAAU,EAAM,GACzB,EAAO,KAAK,QAAQ,cAAc,cAAc,2BAChD,EAAe,EAA8E,QAAnE,EAAK,MAAA,OAAmC,EAAS,EAAK,eAA4B,IAAP,EAAgB,EAAK,KAChI,OAAO,KAAK,eAAe,EAAM,IAAc,EAAoB,EAAQ,GAE/E,eAAe,EAAS,GACpB,MAAM,EAAQ,KAAK,iBAAiB,EAAS,GAC7C,QAAO,GAAQ,GAAS,EAAQ,QAAQ,eAE5C,iBAAiB,EAAS,GACtB,MAAM,GAAM,MAAA,OAA6C,EAAS,EAAU,aAAa,sBAAwB,EAAQ,aAAa,oBACtI,GAAI,GAAY,QAAN,EAAc,CACpB,MAAM,EAAQ,KAAK,QAAQ,cAAc,IAAI,qBAC7C,GAAI,aAAiB,EACjB,OAAO,IAMvB,MAAM,EACF,YAAY,GACR,KAAK,sBAAwB,IAC7B,KAAK,gBAAkB,GACvB,KAAK,SAAU,EACf,KAAK,YAAa,EAClB,KAAK,WAAc,IACf,GAAI,KAAK,uBAAwB,CAC7B,MAAM,MAAE,GAAU,EAAM,OAAS,GACjC,GAAI,EAAO,CACP,KAAK,SAAW,IAAI,IAAI,OAAO,SAAS,MACxC,MAAM,sBAAE,GAA0B,EAClC,KAAK,sBAAwB,EAC7B,KAAK,SAAS,iDAAiD,KAAK,SAAU,MAI1F,KAAK,WAAa,MAAO,UAzjDtB,QAAQ,UA2jDP,KAAK,YAAa,GAEtB,KAAK,SAAW,EAEpB,QACS,KAAK,UACN,iBAAiB,WAAY,KAAK,YAAY,GAC9C,iBAAiB,OAAQ,KAAK,YAAY,GAC1C,KAAK,SAAU,EACf,KAAK,QAAQ,IAAI,IAAI,OAAO,SAAS,QAG7C,OACQ,KAAK,UACL,oBAAoB,WAAY,KAAK,YAAY,GACjD,oBAAoB,OAAQ,KAAK,YAAY,GAC7C,KAAK,SAAU,GAGvB,KAAK,EAAU,GACX,KAAK,OAAO,QAAQ,UAAW,EAAU,GAE7C,QAAQ,EAAU,GACd,KAAK,OAAO,QAAQ,aAAc,EAAU,GAEhD,OAAO,EAAQ,EAAU,EAAwB,KAC7C,MAAM,EAAQ,CAAE,MAAO,CAAE,sBAAA,IACzB,EAAO,KAAK,QAAS,EAAO,GAAI,EAAS,MACzC,KAAK,SAAW,EAChB,KAAK,sBAAwB,EAEjC,gCAAgC,GAC5B,OAAO,KAAK,gBAAgB,IAA0B,GAE1D,sBAAsB,GAClB,MAAM,sBAAE,GAA0B,KAC5B,EAAkB,KAAK,gBAAgB,GAC7C,KAAK,gBAAgB,GAAyB,OAAO,OAAO,OAAO,OAAO,GAAI,GAAkB,GAEpG,mCACI,IAAI,EACC,KAAK,4BACN,KAAK,0BAAiE,QAApC,EAAK,QAAQ,yBAAsC,IAAP,EAAgB,EAAK,OACnG,QAAQ,kBAAoB,UAGpC,uCACQ,KAAK,4BACL,QAAQ,kBAAoB,KAAK,iCAC1B,KAAK,2BAGpB,uBACI,OAAO,KAAK,eAEhB,eACI,OAAO,KAAK,YAAqC,YAAvB,SAAS,YAI3C,MAAM,GACF,YAAY,GACR,KAAK,SAAU,EACf,KAAK,cAAgB,KACjB,oBAAoB,QAAS,KAAK,cAAc,GAChD,iBAAiB,QAAS,KAAK,cAAc,IAEjD,KAAK,aAAgB,IACjB,GAAI,KAAK,wBAAwB,GAAQ,CACrC,MAAM,EAAU,EAAM,cAAgB,EAAM,eAAe,IAAO,EAAM,OAClE,EAAO,KAAK,wBAAwB,GAC1C,GAAI,EAAM,CACN,MAAM,EAAW,KAAK,mBAAmB,GACrC,KAAK,SAAS,yBAAyB,EAAM,KAC7C,EAAM,iBACN,KAAK,SAAS,uBAAuB,EAAM,OAK3D,KAAK,SAAW,EAEpB,QACS,KAAK,UACN,iBAAiB,QAAS,KAAK,eAAe,GAC9C,KAAK,SAAU,GAGvB,OACQ,KAAK,UACL,oBAAoB,QAAS,KAAK,eAAe,GACjD,KAAK,SAAU,GAGvB,wBAAwB,GACpB,QAAU,EAAM,QAAU,EAAM,OAAO,mBAChC,EAAM,kBACN,EAAM,MAAQ,GACd,EAAM,QACN,EAAM,SACN,EAAM,SACN,EAAM,UAEjB,wBAAwB,GACpB,GAAI,aAAkB,QAClB,OAAO,EAAO,QAAQ,4CAG9B,mBAAmB,GACf,OAAO,EAAU,EAAK,aAAa,SAAW,KAItD,SAAS,GAAS,GACd,MAAiB,WAAV,GAAiC,WAAV,GAAiC,WAAV,EAGzD,MAAM,GACF,YAAY,GACR,KAAK,SAAW,EAEpB,aAAa,EAAU,EAAU,IACzB,KAAK,SAAS,iCAAiC,EAAU,EAAQ,UAC7D,EAAoB,EAAU,KAAK,KAAK,SAAS,cACjD,KAAK,SAAS,wBAAwB,EAAU,GAGhD,OAAO,SAAS,KAAO,EAAS,YAI5C,WAAW,EAAW,EAAuB,EAAU,IACnD,KAAK,OACL,KAAK,aAAe,IAAI,EAAM,KAAM,EAAU,GAAY,EAAuB,OAAO,OAAO,CAAE,SAAU,KAAK,UAAY,IAC5H,KAAK,aAAa,QAEtB,WAAW,EAAM,GACb,KAAK,OACL,KAAK,eAAiB,IAAI,EAAe,KAAM,EAAM,GAAW,GAChE,KAAK,eAAe,QAExB,OACQ,KAAK,iBACL,KAAK,eAAe,cACb,KAAK,gBAEZ,KAAK,eACL,KAAK,aAAa,gBACX,KAAK,cAGhB,cACA,OAAO,KAAK,SAAS,QAErB,WACA,OAAO,KAAK,SAAS,KAErB,cACA,OAAO,KAAK,SAAS,QAEzB,sBAAsB,GACgC,mBAAvC,KAAK,QAAQ,uBACpB,KAAK,QAAQ,sBAAsB,GAG3C,0CAA0C,EAAgB,GACtD,GAAI,GAAkB,KAAK,eAAgB,CACvC,MAAM,QAAqB,EAAc,aACzC,GAAI,EAAc,CACV,EAAe,QAAU,EAAY,KACrC,KAAK,KAAK,qBAEd,MAAM,WAAE,EAAU,WAAE,GAAe,EAE7B,EAAe,CAAE,OADR,KAAK,2BAA2B,GAChB,SAAU,CAAE,WAAA,EAAY,aAAA,EAAc,WAAA,IACrE,KAAK,aAAa,EAAc,SAAU,KAItD,uCAAuC,EAAgB,GACnD,MAAM,QAAqB,EAAc,aACzC,GAAI,EAAc,CACd,MAAM,EAAW,EAAa,eAAe,GACzC,EAAc,kBACR,KAAK,KAAK,YAAY,SAGtB,KAAK,KAAK,WAAW,GAE/B,KAAK,KAAK,cACV,KAAK,KAAK,sBAGlB,sBAAsB,EAAgB,GAClC,QAAQ,MAAM,GAElB,uBAAuB,GACgC,mBAAxC,KAAK,QAAQ,wBACpB,KAAK,QAAQ,uBAAuB,GAG5C,aAAa,GACT,KAAK,SAAS,aAAa,GAE/B,eAAe,GACX,KAAK,SAAS,eAAe,GAEjC,6BAA6B,EAAU,GACnC,MAAM,EAAS,EAAU,GACnB,EAAgB,EAAU,KAAK,KAAK,sBACpC,EAAgC,YAAX,QAA0C,IAAX,EAC1D,MAAkB,YAAX,GACH,EAAc,KAAc,EAAc,KAAK,KAAK,wBACnD,GAAiC,MAAV,GAAkB,IAAW,GAE7D,gCAAgC,EAAQ,GACpC,KAAK,SAAS,gCAAgC,EAAQ,GAEtD,eACA,OAAO,KAAK,QAAQ,SAEpB,4BACA,OAAO,KAAK,QAAQ,sBAExB,2BAA2B,GACvB,MAAM,YAAE,EAAW,UAAE,GAAc,EAC7B,EAAS,EAAa,oBAAqB,EAAW,GAC5D,OAAO,GAAS,GAAU,EAAS,YAK3C,SAAW,GACP,EAAU,EAAmB,QAAI,GAAK,UACtC,EAAU,EAAmB,QAAI,GAAK,UACtC,EAAU,EAAuB,YAAI,GAAK,cAC1C,EAAU,EAAoB,SAAI,GAAK,WAJ3C,CAKG,IAAc,EAAY,KAC7B,MAAM,GACF,YAAY,GACR,KAAK,MAAQ,EAAU,QACvB,KAAK,SAAU,EACf,KAAK,oBAAsB,KACvB,MAAM,WAAE,GAAe,KACL,eAAd,EACA,KAAK,oBAEc,YAAd,GACL,KAAK,kBAGb,KAAK,eAAiB,KAClB,KAAK,SAAS,kBAElB,KAAK,SAAW,EAEpB,QACS,KAAK,UACF,KAAK,OAAS,EAAU,UACxB,KAAK,MAAQ,EAAU,SAE3B,SAAS,iBAAiB,mBAAoB,KAAK,qBAAqB,GACxE,iBAAiB,WAAY,KAAK,gBAAgB,GAClD,KAAK,SAAU,GAGvB,OACQ,KAAK,UACL,SAAS,oBAAoB,mBAAoB,KAAK,qBAAqB,GAC3E,oBAAoB,WAAY,KAAK,gBAAgB,GACrD,KAAK,SAAU,GAGvB,oBACQ,KAAK,OAAS,EAAU,UACxB,KAAK,MAAQ,EAAU,YACvB,KAAK,SAAS,yBAGtB,iBACI,KAAK,oBACD,KAAK,OAAS,EAAU,cACxB,KAAK,MAAQ,EAAU,SACvB,KAAK,SAAS,cAGlB,iBACA,OAAO,SAAS,YAIxB,MAAM,GACF,YAAY,GACR,KAAK,SAAU,EACf,KAAK,SAAW,KACZ,KAAK,eAAe,CAAE,EAAG,OAAO,YAAa,EAAG,OAAO,eAE3D,KAAK,SAAW,EAEpB,QACS,KAAK,UACN,iBAAiB,SAAU,KAAK,UAAU,GAC1C,KAAK,WACL,KAAK,SAAU,GAGvB,OACQ,KAAK,UACL,oBAAoB,SAAU,KAAK,UAAU,GAC7C,KAAK,SAAU,GAGvB,eAAe,GACX,KAAK,SAAS,sBAAsB,IAI5C,MAAM,GACF,YAAY,GACR,KAAK,QAAU,IAAI,IACnB,KAAK,SAAU,EACf,KAAK,qBAAyB,IAC1B,MAAM,EAkDlB,SAAgC,GAC5B,IAAI,EACJ,MAAM,EAAwC,QAAvB,EAAK,EAAM,cAA2B,IAAP,OAAgB,EAAS,EAAG,cAClF,GAAI,aAAyB,EACzB,OAAO,EAtDc,CAAuB,GACpC,GAwDhB,SAA+B,GAC3B,IAAI,EAEJ,OADoD,QAA/B,EAAK,EAAS,mBAAgC,IAAP,EAAgB,EAAK,IAC9D,WAAW,EAAc,aA3DpB,CAAsB,KAClC,EAAM,iBACN,KAAK,uBAAuB,KAGpC,KAAK,oBAAuB,IACpB,KAAK,SAAgC,iBAAd,EAAM,MAC7B,KAAK,mBAAmB,EAAM,OAGtC,KAAK,SAAW,EAEpB,QACS,KAAK,UACN,KAAK,SAAU,EACf,iBAAiB,8BAA+B,KAAK,sBAAsB,IAGnF,OACQ,KAAK,UACL,KAAK,SAAU,EACf,oBAAoB,8BAA+B,KAAK,sBAAsB,IAGtF,oBAAoB,GACX,KAAK,wBAAwB,KAC9B,KAAK,QAAQ,IAAI,GACjB,EAAO,iBAAiB,UAAW,KAAK,qBAAqB,IAGrE,uBAAuB,GACf,KAAK,wBAAwB,KAC7B,KAAK,QAAQ,OAAO,GACpB,EAAO,oBAAoB,UAAW,KAAK,qBAAqB,IAGxE,wBAAwB,GACpB,OAAO,KAAK,QAAQ,IAAI,GAE5B,6BAA6B,GACzB,MAAM,QAAa,EAAS,aACxB,GACA,KAAK,mBAAmB,GAGhC,mBAAmB,GACf,KAAK,SAAS,0BAA0B,IAAI,EAAc,KAgBlE,MAAM,WAAsB,EACxB,eACI,KAAK,qBACL,KAAK,yBAET,qBACI,MAAM,gBAAE,EAAe,KAAE,EAAI,KAAE,GAAS,SACxC,EAAgB,aAAa,KAAK,QAAS,GAC3C,EAAgB,aAAa,KAAK,WAAY,GAElD,yBACI,IAAK,MAAM,KAAsB,KAAK,eAAgB,CAClD,MAAM,EAAa,EAAmB,WACtC,GAAI,EAAY,CACZ,MAAM,EAAU,KAAK,oBAAoB,GACzC,EAAW,aAAa,EAAS,KAIzC,cACA,OAAO,KAAK,YAAY,aAAa,QAErC,qBACA,MAAO,IAAI,SAAS,gBAAgB,iBAAiB,YAI7D,MAAM,WAAqB,EACnB,mBACA,OAAO,KAAK,YAAY,aAAe,KAAK,4BAEhD,kBACI,KAAK,YAET,eACQ,KAAK,YACL,KAAK,cAGb,kBACI,MAAM,kBACD,KAAK,WACN,KAAK,iCAGT,0BACA,OAAO,KAAK,gBAAgB,aAE5B,sBACA,OAAO,KAAK,YAAY,aAExB,iBACA,OAAO,KAAK,YAAY,QAE5B,YACI,KAAK,gCACL,KAAK,4BACL,KAAK,uCACL,KAAK,iCAET,cACI,KAAK,6BAA4B,KAC7B,KAAK,kBACL,KAAK,mBAGT,kCACA,OAAO,KAAK,oBAAoB,yBAA2B,KAAK,gBAAgB,wBAEpF,gCACI,IAAK,MAAM,KAAW,KAAK,0BACvB,SAAS,KAAK,YAAY,GAGlC,4BACI,IAAK,MAAM,KAAW,KAAK,sBACvB,SAAS,KAAK,YAAY,KAAK,oBAAoB,IAG3D,uCACI,IAAK,MAAM,KAAW,KAAK,+BACvB,SAAS,KAAK,YAAY,GAGlC,iCACI,IAAK,MAAM,KAAW,KAAK,2BACvB,SAAS,KAAK,YAAY,GAGlC,kBACI,SAAS,UAAU,KAAK,YACxB,KAAK,gCAET,gCACI,IAAK,MAAM,KAAsB,KAAK,sBAAuB,CACzD,MAAM,EAAyB,KAAK,oBAAoB,GACxD,EAAmB,YAAY,IAGvC,gBACQ,SAAS,MAAQ,KAAK,sBAAsB,gBAC5C,SAAS,KAAK,YAAY,KAAK,YAG/B,SAAS,gBAAgB,YAAY,KAAK,YAG9C,gCACA,OAAO,KAAK,gBAAgB,mCAAmC,KAAK,qBAEpE,4BACA,OAAO,KAAK,gBAAgB,+BAA+B,KAAK,qBAEhE,qCACA,OAAO,KAAK,oBAAoB,oBAEhC,iCACA,OAAO,KAAK,gBAAgB,oBAE5B,4BACA,OAAO,KAAK,WAAW,iBAAiB,WAIhD,MAAM,GACF,YAAY,GACR,KAAK,KAAO,GACZ,KAAK,UAAY,GACjB,KAAK,KAAO,EAEhB,IAAI,GACA,OAAO,EAAW,KAAa,KAAK,UAExC,IAAI,GACA,GAAI,KAAK,IAAI,GAAW,CACpB,MAAM,EAAW,KAAK,KAAK,GAE3B,OADA,KAAK,MAAM,GACJ,GAGf,IAAI,EAAU,GAGV,OAFA,KAAK,MAAM,EAAU,GACrB,KAAK,MAAM,GACJ,EAEX,QACI,KAAK,UAAY,GAErB,KAAK,GACD,OAAO,KAAK,UAAU,EAAW,IAErC,MAAM,EAAU,GACZ,KAAK,UAAU,EAAW,IAAa,EAE3C,MAAM,GACF,MAAM,EAAM,EAAW,GACjB,EAAQ,KAAK,KAAK,QAAQ,GAC5B,GAAS,GACT,KAAK,KAAK,OAAO,EAAO,GAC5B,KAAK,KAAK,QAAQ,GAClB,KAAK,OAET,OACI,IAAK,MAAM,KAAO,KAAK,KAAK,OAAO,KAAK,aAC7B,KAAK,UAAU,IAKlC,MAAM,WAAiB,EACnB,cACI,SAAS,WACT,KAAK,cAAgB,IAAI,GAAc,IACvC,KAAK,qBAAuB,IAAI,IAAI,SAAS,MAEjD,WAAW,EAAU,GAAY,EAAO,GAAa,GACjD,MAAM,EAAW,IAAI,GAAa,KAAK,SAAU,EAAU,EAAW,GACtE,OAAO,KAAK,OAAO,GAEvB,YAAY,GACR,MAAM,EAAW,IAAI,GAAc,KAAK,SAAU,GAAU,GAC5D,OAAO,KAAK,OAAO,GAEvB,qBACI,KAAK,cAAc,QAEvB,sBACI,GAAI,KAAK,oBAAqB,CAC1B,KAAK,SAAS,wBACd,MAAM,SAAE,EAAU,qBAAsB,GAAa,WA5nEtD,IAAI,SAAQ,GAAW,YAAW,IAAM,KAAW,KA8nElD,MAAM,EAAiB,EAAS,QAEhC,OADA,KAAK,cAAc,IAAI,EAAU,GAC1B,GAGf,6BAA6B,GACzB,OAAO,KAAK,cAAc,IAAI,GAE9B,eACA,OAAO,EAAa,YAAY,KAAK,SAErC,0BACA,OAAO,KAAK,SAAS,aA8Q7B,SAAS,GAAkC,GACvC,OAAO,iBAAiB,EAAK,IAEjC,MAAM,GAAwC,CAC1C,YAAa,CACT,MACI,OAAO,KAAK,cAKlB,GAAU,IArRhB,MACI,cACI,KAAK,UAAY,IAAI,GAAU,MAC/B,KAAK,QAAU,IAAI,EAAQ,MAC3B,KAAK,KAAO,IAAI,GAAS,KAAM,SAAS,iBACxC,KAAK,QAAU,IAAI,EAAe,MAClC,KAAK,aAAe,IAAI,GAAa,MACrC,KAAK,cAAgB,IAAI,EACzB,KAAK,kBAAoB,IAAI,GAAkB,MAC/C,KAAK,mBAAqB,IAAI,EAAmB,MACjD,KAAK,eAAiB,IAAI,GAAe,MACzC,KAAK,eAAiB,IAAI,GAAe,MACzC,KAAK,gBAAkB,IAAI,EAAgB,SAAS,iBACpD,KAAK,OAAQ,EACb,KAAK,SAAU,EACf,KAAK,iBAAmB,IACxB,KAAK,SAAU,EAEnB,QACS,KAAK,UACN,KAAK,aAAa,QAClB,KAAK,cAAc,QACnB,KAAK,kBAAkB,QACvB,KAAK,mBAAmB,QACxB,KAAK,eAAe,QACpB,KAAK,eAAe,QACpB,KAAK,gBAAgB,QACrB,KAAK,QAAQ,QACb,KAAK,SAAU,EACf,KAAK,SAAU,GAGvB,UACI,KAAK,SAAU,EAEnB,OACQ,KAAK,UACL,KAAK,aAAa,OAClB,KAAK,cAAc,OACnB,KAAK,kBAAkB,OACvB,KAAK,mBAAmB,OACxB,KAAK,eAAe,OACpB,KAAK,eAAe,OACpB,KAAK,gBAAgB,OACrB,KAAK,QAAQ,OACb,KAAK,SAAU,GAGvB,gBAAgB,GACZ,KAAK,QAAU,EAEnB,MAAM,EAAU,EAAU,IACtB,KAAK,UAAU,aAAa,EAAU,GAAW,GAErD,oBAAoB,GAChB,KAAK,eAAe,oBAAoB,GAE5C,uBAAuB,GACnB,KAAK,eAAe,uBAAuB,GAE/C,oBAAoB,GAChB,SAAS,gBAAgB,YAAY,EAAc,KAAK,GAAS,UAErE,aACI,KAAK,KAAK,qBAEd,oBAAoB,GAChB,KAAK,iBAAmB,EAExB,eACA,OAAO,KAAK,QAAQ,SAEpB,4BACA,OAAO,KAAK,QAAQ,sBAExB,iDAAiD,EAAU,GACnD,KAAK,QACL,KAAK,UAAU,WAAW,EAAU,EAAuB,CAAE,OAAQ,UAAW,gBAAgB,IAGhG,KAAK,QAAQ,kBAGrB,sBAAsB,GAClB,KAAK,QAAQ,sBAAsB,CAAE,eAAgB,IAEzD,yBAAyB,EAAM,GAC3B,OAAO,KAAK,oBAAoB,IACzB,EAAoB,EAAU,KAAK,SAAS,eAC5C,KAAK,yCAAyC,EAAM,GAE/D,uBAAuB,EAAM,GACzB,MAAM,EAAS,KAAK,iBAAiB,GACrC,KAAK,2CAA2C,IAAS,KAAK,MAAM,EAAS,KAAM,CAAE,OAAA,IAEzF,2CAA2C,GACvC,MAAM,EAAa,EAAK,aAAa,qBACrC,GAAI,EAAY,CACZ,MAAM,EAAO,SAAS,cAAc,QACpC,EAAK,OAAS,EACd,EAAK,OAAS,EAAK,aAAa,SAAW,YAC3C,EAAK,QAAS,EACV,EAAK,aAAa,uBAClB,EAAK,aAAa,qBAAsB,EAAK,aAAa,uBAE9D,MAAM,EAAQ,KAAK,sBAAsB,GASzC,OARI,GACA,EAAK,aAAa,mBAAoB,GACtC,EAAK,iBAAiB,sBAAsB,IAAM,EAAK,YAGvD,EAAK,iBAAiB,UAAU,IAAM,EAAK,WAE/C,SAAS,KAAK,YAAY,GACnB,EAAS,SAAU,CAAE,YAAY,EAAM,OAAQ,IAGtD,OAAO,EAGf,iCAAiC,EAAU,GACvC,OAAO,KAAK,6BAA6B,EAAU,IAAW,KAAK,kCAAkC,GAEzG,wBAAwB,EAAU,GAC9B,GAAkC,GAClC,KAAK,QAAQ,wBAAwB,EAAU,GAEnD,aAAa,GACT,GAAkC,EAAM,UACnC,EAAM,QACP,KAAK,uCAAuC,EAAM,SAAU,EAAM,QAG1E,eAAe,GACX,KAAK,+BAA+B,EAAM,oBAE9C,6BAA6B,EAAU,GACnC,OAAO,KAAK,UAAU,6BAA6B,EAAU,GAEjE,gCAAgC,EAAQ,GACpC,KAAK,+CAA+C,EAAQ,GAEhE,eAAe,EAAM,GACjB,MAAM,EAAS,EAAU,EAAM,GAC/B,OAAO,KAAK,oBAAoB,MACvB,GAAa,KAAK,oBAAoB,KACxC,EAAoB,EAAU,GAAS,KAAK,SAAS,cAEhE,cAAc,EAAM,GAChB,KAAK,UAAU,WAAW,EAAM,GAEpC,wBACI,KAAK,KAAK,qBAAuB,KAAK,SACtC,KAAK,iCAET,aACI,KAAK,QAAQ,mCAEjB,iBACI,KAAK,QAAQ,uCAEjB,0BAA0B,GACtB,KAAK,oBAAoB,GAE7B,wBACI,IAAI,GACyC,QAAtC,EAAK,KAAK,UAAU,oBAAiC,IAAP,OAAgB,EAAS,EAAG,SAC7E,KAAK,yCAGb,uBAAsB,QAAE,GAAW,GAE/B,OADc,KAAK,8BAA8B,EAAS,GAC5C,iBAElB,qBAAqB,EAAU,GAC3B,KAAK,KAAK,qBAAuB,KAAK,QAAQ,SAC9C,KAAK,+BAET,kBACI,KAAK,QAAQ,kBAEjB,YAAY,GACR,KAAK,gCAAgC,GAEzC,cAAc,EAAe,GACzB,KAAK,kCAAkC,EAAe,GAE1D,yCAAyC,EAAM,GAE3C,OADc,KAAK,6CAA6C,EAAM,GACxD,iBAElB,kCAAkC,GAE9B,OADc,KAAK,wCAAwC,GAC7C,iBAElB,6CAA6C,EAAM,GAC/C,OAAO,EAAS,cAAe,CAAE,OAAQ,EAAM,OAAQ,CAAE,IAAK,EAAS,MAAQ,YAAY,IAE/F,wCAAwC,GACpC,OAAO,EAAS,qBAAsB,CAAE,OAAQ,CAAE,IAAK,EAAS,MAAQ,YAAY,IAExF,uCAAuC,EAAU,GAE7C,OADA,EAAW,SAAS,iBACb,EAAS,cAAe,CAAE,OAAQ,CAAE,IAAK,EAAS,KAAM,OAAA,KAEnE,yCACI,OAAO,EAAS,sBAEpB,8BAA8B,EAAS,GACnC,OAAO,EAAS,sBAAuB,CAAE,OAAQ,CAAE,QAAA,EAAS,OAAA,GAAU,YAAY,IAEtF,+BACI,OAAO,EAAS,gBAEpB,+BAA+B,EAAS,IAEpC,OADA,EAAe,SAAS,iBACjB,EAAS,aAAc,CAAE,OAAQ,CAAE,IAAK,KAAK,SAAS,KAAM,OAAA,KAEvE,+CAA+C,EAAQ,GACnD,cAAc,IAAI,gBAAgB,aAAc,CAAE,OAAQ,EAAO,WAAY,OAAQ,EAAO,cAEhG,gCAAgC,GAC5B,OAAO,EAAS,mBAAoB,CAAE,OAAQ,IAElD,kCAAkC,EAAe,GAC7C,OAAO,EAAS,qBAAsB,CAAE,OAAQ,CAAE,cAAA,GAAiB,OAAQ,EAAO,YAAY,IAElG,oBAAoB,GAChB,MAAM,EAAY,MAAA,OAAyC,EAAS,EAAQ,QAAQ,gBACpF,OAAI,KAAK,OACD,GAC+C,SAAxC,EAAU,aAAa,gBAO9B,GAC+C,QAAxC,EAAU,aAAa,cAO1C,iBAAiB,GACb,MAAM,EAAS,EAAK,aAAa,qBACjC,OAAO,GAAS,GAAU,EAAS,UAEvC,sBAAsB,GAClB,MAAM,EAAQ,EAAK,aAAa,oBAChC,GAAI,EACA,OAAO,EAEN,CACD,MAAM,EAAY,EAAK,QAAQ,eAC/B,GAAI,EACA,OAAO,EAAU,IAIzB,eACA,OAAO,KAAK,KAAK,YAejB,UAAW,IAAgB,GACnC,SAAS,KACL,GAAQ,QAEZ,SAAS,GAAgB,GACrB,GAAQ,gBAAgB,GAE5B,SAAS,GAAM,EAAU,GACrB,GAAQ,MAAM,EAAU,GAE5B,SAAS,GAAoB,GACzB,GAAQ,oBAAoB,GAEhC,SAAS,GAAuB,GAC5B,GAAQ,uBAAuB,GAEnC,SAAS,GAAoB,GACzB,GAAQ,oBAAoB,GAEhC,SAAS,KACL,GAAQ,aAEZ,SAAS,GAAoB,GACzB,GAAQ,oBAAoB,GAEhC,SAAS,GAAiB,GACtB,EAAe,cAAgB,EAGnC,IAAI,GAAqB,OAAO,OAAO,CACnC,UAAW,KACX,UAAW,GACX,QAAS,GACT,aAAc,GACd,aAAc,EACd,MAAO,GACP,gBAAiB,GACjB,MAAO,GACP,oBAAqB,GACrB,uBAAwB,GACxB,oBAAqB,GACrB,WAAY,GACZ,oBAAqB,GACrB,iBAAkB,KAiTtB,MAAM,GACF,YAAY,GACR,KAAK,oBAAsB,EAAG,QAAA,MAC1B,IAAI,EACJ,MAAM,GAAE,EAAE,MAAE,GAAU,KACqB,QAA1C,EAAK,EAAQ,cAAc,IAAM,UAAwB,IAAP,GAAyB,EAAG,YAAY,IAE/F,KAAK,MAAQ,EAAQ,WAAU,GAC/B,KAAK,GAAK,EAAQ,IAG1B,SAAS,GAAoB,GACzB,GAAU,MAAN,EAAY,CACZ,MAAM,EAAU,SAAS,eAAe,GACxC,GAAI,aAAmB,EACnB,OAAO,GAInB,SAAS,GAAgB,EAAS,GAC9B,GAAI,EAAS,CACT,MAAM,EAAM,EAAQ,aAAa,OACjC,GAAW,MAAP,GAA6B,MAAd,IAn2FC,EAm2FuC,EAl2FxD,EAk2FmD,GAl2FnC,MAAQ,EAAU,GAAO,MAm2FxC,MAAM,IAAI,MAAM,6BAA6B,EAAQ,yDAKzD,GAHI,EAAQ,gBAAkB,WAC1B,EAAU,SAAS,WAAW,GAAS,IAEvC,aAAmB,EAGnB,OAFA,EAAQ,oBACR,EAAQ,uBACD,EA52FnB,IAA4B,EAi3F5B,MAAM,GAAgB,CAClB,QACI,KAAK,eAAe,SAAQ,IAAO,IAAI,EAAI,OAAkC,QAA1B,EAAK,EAAE,qBAAkC,IAAP,OAAgB,EAAS,EAAG,aAAa,KAAK,gBAAiB,EAAE,iBAE1J,SACI,KAAK,gCACL,KAAK,eAAe,SAAQ,GAAK,EAAE,OAAO,KAAK,oBAEnD,SACI,KAAK,eAAe,SAAQ,IAAO,IAAI,EAAI,OAAkC,QAA1B,EAAK,EAAE,qBAAkC,IAAP,OAAgB,EAAS,EAAG,aAAa,KAAK,gBAAiB,OAExJ,UACI,KAAK,gCACL,KAAK,eAAe,SAAQ,GAAK,EAAE,QAAQ,KAAK,oBAEpD,SACI,KAAK,eAAe,SAAQ,GAAK,EAAE,YAEvC,UACI,KAAK,eAAe,SAAQ,GAAK,EAAE,YAAY,KAAK,oBAExD,SACI,KAAK,eAAe,SAAQ,IACxB,EAAE,UAAY,GACd,EAAE,OAAO,KAAK,sBAK1B,MAAM,WAAsB,YACxB,0BACI,UACU,KAAK,SAEf,MAAO,GACH,QAAQ,MAAM,GAElB,QACI,KAAK,cAGb,eACI,IAAI,EACJ,OAAqC,QAA7B,EAAK,KAAK,qBAAkC,IAAP,EAAgB,EAAM,KAAK,cAAgB,WAChF,KAAK,cAAc,KAAK,2BAClB,IACN,KAAK,kBAH2E,GAO5F,aACI,IACI,KAAK,SAET,MAAO,KAEX,gCACI,KAAK,kBAAkB,SAAQ,GAAK,EAAE,WAEtC,wBACA,IAAI,EACJ,MAAM,EAAmB,KAAK,eAAe,SAAQ,GAAK,IAAI,EAAE,YAAW,QAAO,KAAO,EAAE,KACrF,EAAiB,IAAoC,QAA/B,EAAK,KAAK,uBAAoC,IAAP,OAAgB,EAAS,EAAG,UAAU,QAAO,KAAO,EAAE,KAAI,KAAI,GAAK,EAAE,KACxI,OAAO,EAAiB,QAAO,GAAK,EAAe,SAAS,EAAE,MAE9D,oBACA,GAAI,KAAK,OAAQ,CACb,MAAM,EAAiB,GAAc,KAAK,QAC1C,GAAI,EACA,OAAO,EAEX,KAAK,MAAM,kBAEf,KAAK,MAAM,+BAEX,qBACA,OAAI,KAAK,OACE,KAAK,mBAEP,KAAK,QACH,KAAK,2BAGZ,KAAK,MAAM,0CAGf,sBACA,OAAO,KAAK,gBAAgB,QAAQ,WAAU,GAE9C,sBACA,GAAI,KAAK,6BAA6B,oBAClC,OAAO,KAAK,kBAEhB,KAAK,MAAM,oDAEX,aACA,OAAO,KAAK,aAAa,UAEzB,aACA,OAAO,KAAK,aAAa,UAEzB,cACA,OAAO,KAAK,aAAa,WAE7B,MAAM,GACF,MAAM,IAAI,MAAM,GAAG,KAAK,gBAAgB,KAExC,kBACA,IAAI,EAAI,EACR,OAAkG,QAA1F,GAAiD,QAA1C,EAAK,KAAK,UAAU,MAAM,kBAA+B,IAAP,EAAgB,EAAK,IAAI,UAAuB,IAAP,EAAgB,EAAK,iBAE/H,wBACA,OAAO,IAAI,YAAY,6BAA8B,CAAE,SAAS,EAAM,YAAY,IAElF,yBACA,IAAI,EACJ,MAAM,EAAwC,QAA7B,EAAK,KAAK,qBAAkC,IAAP,OAAgB,EAAS,EAAG,eAAe,KAAK,QACtG,OAAgB,OAAZ,EACO,CAAC,GAGD,GAGX,4BACA,IAAI,EACJ,MAAM,EAAyC,QAA7B,EAAK,KAAK,qBAAkC,IAAP,OAAgB,EAAS,EAAG,iBAAiB,KAAK,SACzG,OAAwB,IAApB,EAAS,OACF,MAAM,UAAU,MAAM,KAAK,GAG3B,IAKnB,EAAa,oBA1db,MACI,YAAY,GACR,KAAK,oBAAuB,MAC5B,KAAK,oBAAsB,KAC3B,KAAK,oBAAsB,OAC3B,KAAK,WAAY,EACjB,KAAK,eAAgB,EACrB,KAAK,kBAAmB,EACxB,KAAK,QAAU,EACf,KAAK,KAAO,IAAI,EAAU,KAAM,KAAK,SACrC,KAAK,mBAAqB,IAAI,EAAmB,KAAM,KAAK,SAC5D,KAAK,gBAAkB,IAAI,EAAgB,KAAM,KAAK,SACtD,KAAK,gBAAkB,IAAI,EAAgB,KAAM,KAAK,SAE1D,UACS,KAAK,YACN,KAAK,WAAY,EACjB,KAAK,YAAa,EACd,KAAK,cAAgB,EAAkB,MACvC,KAAK,mBAAmB,QAE5B,KAAK,gBAAgB,QACrB,KAAK,gBAAgB,QACrB,KAAK,oBAGb,aACQ,KAAK,YACL,KAAK,WAAY,EACjB,KAAK,mBAAmB,OACxB,KAAK,gBAAgB,OACrB,KAAK,gBAAgB,QAG7B,kBACQ,KAAK,cAAgB,EAAkB,OACvC,KAAK,gBAGb,oBACQ,KAAK,cAAgB,EAAkB,OAAS,KAAK,gBACrD,KAAK,gBAGb,sBACQ,KAAK,cAAgB,EAAkB,KACvC,KAAK,mBAAmB,SAGxB,KAAK,mBAAmB,OACxB,KAAK,iBAGb,sBACI,IAAK,KAAK,kBAAoB,KAAK,SAAW,KAAK,WAAa,KAAK,YAAc,KAAK,WAAa,KAAK,YAAa,CACnH,MAAM,EAAc,KAAK,WAEzB,GADA,KAAK,WAAa,KAAK,UACnB,KAAK,UACL,IACI,KAAK,QAAQ,OAAS,KAAK,MAAM,EAAU,KAAK,YAChD,KAAK,mBAAmB,aAClB,KAAK,QAAQ,OACnB,KAAK,eAAgB,EAEzB,MAAO,GAEH,MADA,KAAK,WAAa,EACZ,IAKtB,mBAAmB,IACX,EAAc,YAAe,EAAc,WAAa,EAAc,UACtE,KAAK,UAAY,EAAc,SAAS,KAE5C,IACI,MAAM,QAAa,EAAc,aACjC,GAAI,EAAM,CACN,MAAM,KAAE,GAAS,EAAkB,GAC7B,EAAW,IAAI,QAAe,KAAK,2BAA2B,IAC9D,EAAW,IAAI,EAAc,KAAK,KAAK,SAAU,GAAU,GAAO,GACpE,KAAK,KAAK,qBACJ,KAAK,KAAK,oBACd,KAAK,KAAK,OAAO,GACvB,GAAQ,cAAc,EAAe,KAAK,SAC1C,GAAQ,YAAY,KAAK,SACzB,KAAK,oBAAoB,IAGjC,MAAO,GACH,QAAQ,MAAM,GACd,KAAK,KAAK,aAEd,QACI,KAAK,oBAAsB,QAGnC,0BAA0B,GACtB,KAAK,gBAET,yBAAyB,EAAS,GAC9B,OAAI,EAAQ,aAAa,sBAId,KAAK,0BAA0B,GAG9C,qBAAqB,EAAS,GAC1B,KAAK,YAAa,EAClB,KAAK,cAAc,EAAS,GAEhC,8BAA8B,EAAS,GACnC,OAAO,KAAK,0BAA0B,EAAS,GAEnD,0BAA0B,EAAS,GAC3B,KAAK,gBACL,KAAK,eAAe,OAExB,KAAK,YAAa,EAClB,KAAK,eAAiB,IAAI,EAAe,KAAM,EAAS,GACxD,MAAM,aAAE,GAAiB,KAAK,eAC9B,KAAK,yBAAyB,EAAa,QAAS,GACpD,KAAK,eAAe,QAExB,yBAAyB,EAAS,GAC9B,EAAQ,eAAiB,KAAK,GAElC,eAAe,GACX,EAAW,KAAK,SAEpB,iCAAiC,EAAS,GACtC,KAAK,sBAET,mCAAmC,EAAS,SAClC,KAAK,aAAa,GACxB,KAAK,sBAET,0BAA0B,EAAS,GAC/B,QAAQ,MAAM,GACd,KAAK,sBAET,eAAe,EAAS,GACpB,QAAQ,MAAM,GACd,KAAK,sBAET,gBAAgB,GACZ,EAAe,KAAK,SAExB,uBAAsB,YAAE,IACpB,EAAW,EAAa,KAAK,iBAAiB,IAElD,oCAAoC,EAAgB,GAChD,MAAM,EAAQ,KAAK,iBAAiB,EAAe,YAAa,EAAe,WAC/E,KAAK,kCAAkC,EAAO,EAAe,YAAa,EAAe,WACzF,EAAM,SAAS,aAAa,GAEhC,iCAAiC,EAAgB,GAC7C,KAAK,QAAQ,SAAS,aAAa,GAEvC,sBAAsB,EAAgB,GAClC,QAAQ,MAAM,GAElB,wBAAuB,YAAE,IACrB,EAAe,EAAa,KAAK,iBAAiB,IAEtD,sBAAsB,EAAU,GAC5B,OAAO,EAEX,qBAAqB,EAAU,IAE/B,mBAEA,YAAY,GACR,IAAI,EACJ,MAAM,EAAU,IAAI,EAAa,KAAM,EAAY,IAAK,EAAK,IAAI,gBAAiB,KAAK,SAGvF,OAFoC,QAAnC,EAAK,KAAK,2BAAwC,IAAP,GAAyB,EAAG,SACxE,KAAK,oBAAsB,EACpB,IAAI,SAAQ,IACf,KAAK,oBAAsB,KACvB,KAAK,oBAAsB,OAC3B,KAAK,oBAAsB,KAC3B,KAEJ,EAAQ,aAGhB,cAAc,EAAS,EAAK,GACxB,MAAM,EAAQ,KAAK,iBAAiB,EAAS,GAC7C,KAAK,kCAAkC,EAAO,EAAS,GACvD,EAAM,aAAa,aAAc,IACjC,EAAM,IAAM,EAEhB,kCAAkC,EAAO,EAAS,GAC9C,MAAM,EAAS,EAAa,oBAAqB,EAAW,EAAS,GACrE,GAAI,GAAS,GAAS,CAClB,MAAM,oBAAE,GAAwB,IAAI,GAAqB,GACzD,EAAM,SAAS,oBAAuB,IAClC,GAAI,EAAM,IAAK,CACX,MAAM,WAAE,EAAU,WAAE,GAAe,EAE7B,EAAW,CAAE,WAAA,EAAY,WAAA,EAAY,aADtB,EAAM,cAAc,gBAAgB,WAEzD,GAAQ,MAAM,EAAM,IAAK,CAAE,OAAA,EAAQ,SAAA,EAAU,oBAAA,EAAqB,YAAY,OAK9F,iBAAiB,EAAS,GACtB,IAAI,EAEJ,OAA0C,QAAlC,EAAK,GADF,EAAa,mBAAoB,EAAW,IAAY,KAAK,QAAQ,aAAa,kBACpC,IAAP,EAAgB,EAAK,KAAK,QAEhF,iCAAiC,GAC7B,IAAI,EACJ,MAAM,EAAK,IAAI,OAAO,KAAK,IAC3B,IACI,GAAI,EAAU,GAAgB,EAAU,cAAc,eAAe,KAAO,KAAK,YAC7E,OAAO,EAEX,GAAI,EAAU,GAAgB,EAAU,cAAc,6BAA6B,MAAQ,KAAK,YAE5F,aADM,EAAQ,aACD,KAAK,2BAA2B,GAEjD,QAAQ,MAAM,6CAA6C,eAE/D,MAAO,GACH,QAAQ,MAAM,GAElB,OAAO,IAAI,EAEf,sBAAsB,EAAM,GAExB,OAAO,EAAoB,EADZ,EAAU,EAAM,IACe,KAAK,cAEvD,0BAA0B,EAAS,GAC/B,MAAM,EAAK,EAAa,mBAAoB,EAAW,IAAY,KAAK,QAAQ,aAAa,UAC7F,GAAI,aAAmB,kBAAoB,KAAK,sBAAsB,EAAS,GAC3E,OAAO,EAEX,IAAK,KAAK,SAAiB,QAAN,EACjB,OAAO,EAEX,GAAI,EAAI,CACJ,MAAM,EAAe,GAAoB,GACzC,GAAI,EACA,OAAQ,EAAa,SAG7B,QAAK,GAAQ,oBAAoB,MAG7B,IAAc,GAAQ,oBAAoB,IAK9C,SACA,OAAO,KAAK,QAAQ,GAEpB,cACA,OAAQ,KAAK,QAAQ,SAErB,gBACA,GAAI,KAAK,QAAQ,IACb,OAAO,KAAK,QAAQ,IAGxB,iBAEA,OADc,KAAK,iBAAiB,KAAK,SAC5B,aAAa,cAE1B,eAAW,GACX,MAAM,EAAQ,KAAK,iBAAiB,KAAK,SACrC,EACA,EAAM,aAAa,aAAc,IAGjC,EAAM,gBAAgB,cAG1B,cAAU,GACV,KAAK,kBAAmB,EACxB,KAAK,QAAQ,IAAM,MAAA,EAA6C,EAAY,KAC5E,KAAK,WAAa,KAAK,QAAQ,IAC/B,KAAK,kBAAmB,EAExB,mBACA,OAAO,KAAK,QAAQ,QAEpB,gBACA,YAA+B,IAAxB,KAAK,qBAA+D,IAA/B,KAAK,sBAEjD,eACA,OAAO,KAAK,QAAQ,UAAY,KAAK,UAErC,mBACA,IAAI,EACJ,MAAM,EAAO,KAAK,QAAQ,cAAc,cAAc,2BAEtD,OAAO,EAD0E,QAAnE,EAAK,MAAA,OAAmC,EAAS,EAAK,eAA4B,IAAP,EAAgB,EAAK,OAiLtH,eAAe,OAAO,cAAe,GACrC,eAAe,OAAO,eAAgB,IAEtC,MACI,IAAI,EAAU,SAAS,cACvB,GAAK,IAED,EAAQ,aAAa,+BAEzB,KAAO,EAAU,EAAQ,eACrB,GAAI,GAAW,SAAS,KACpB,OAAO,QAAQ,KAAK,CAAS;;;;;;;;;QASpC,EAAQ,YAjBb,GAsBA,OAAO,MAAQ,GACf,KAEA,EAAQ,aAAe,GACvB,EAAQ,aAAe,EACvB,EAAQ,WAAa,GACrB,EAAQ,oBAAsB,GAC9B,EAAQ,uBAAyB,GACjC,EAAQ,UAAY,GACpB,EAAQ,gBAAkB,GAC1B,EAAQ,oBAAsB,GAC9B,EAAQ,QAAU,GAClB,EAAQ,iBAAmB,GAC3B,EAAQ,oBAAsB,GAC9B,EAAQ,MAAQ,GAChB,EAAQ,MAAQ,GAEhB,OAAO,eAAe,EAAS,aAAc,CAAE,OAAO","file":"/npm/@hotwired/turbo@7.1.0/dist/turbo.es2017-umd.js","sourceRoot":"","sourcesContent":["/**\n * Minified by jsDelivr using Terser v5.9.0.\n * Original file: /npm/@hotwired/turbo@7.1.0/dist/turbo.es2017-umd.js\n *\n * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files\n */\n","/*\nTurbo 7.1.0\nCopyright © 2021 Basecamp, LLC\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Turbo = {}));\n}(this, (function (exports) { 'use strict';\n\n    (function () {\n        if (window.Reflect === undefined || window.customElements === undefined ||\n            window.customElements.polyfillWrapFlushCallback) {\n            return;\n        }\n        const BuiltInHTMLElement = HTMLElement;\n        const wrapperForTheName = {\n            'HTMLElement': function HTMLElement() {\n                return Reflect.construct(BuiltInHTMLElement, [], this.constructor);\n            }\n        };\n        window.HTMLElement =\n            wrapperForTheName['HTMLElement'];\n        HTMLElement.prototype = BuiltInHTMLElement.prototype;\n        HTMLElement.prototype.constructor = HTMLElement;\n        Object.setPrototypeOf(HTMLElement, BuiltInHTMLElement);\n    })();\n\n    /**\n     * The MIT License (MIT)\n     * \n     * Copyright (c) 2019 Javan Makhmali\n     * \n     * Permission is hereby granted, free of charge, to any person obtaining a copy\n     * of this software and associated documentation files (the \"Software\"), to deal\n     * in the Software without restriction, including without limitation the rights\n     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n     * copies of the Software, and to permit persons to whom the Software is\n     * furnished to do so, subject to the following conditions:\n     * \n     * The above copyright notice and this permission notice shall be included in\n     * all copies or substantial portions of the Software.\n     * \n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n     * THE SOFTWARE.\n     */\n\n    (function(prototype) {\n      if (typeof prototype.requestSubmit == \"function\") return\n\n      prototype.requestSubmit = function(submitter) {\n        if (submitter) {\n          validateSubmitter(submitter, this);\n          submitter.click();\n        } else {\n          submitter = document.createElement(\"input\");\n          submitter.type = \"submit\";\n          submitter.hidden = true;\n          this.appendChild(submitter);\n          submitter.click();\n          this.removeChild(submitter);\n        }\n      };\n\n      function validateSubmitter(submitter, form) {\n        submitter instanceof HTMLElement || raise(TypeError, \"parameter 1 is not of type 'HTMLElement'\");\n        submitter.type == \"submit\" || raise(TypeError, \"The specified element is not a submit button\");\n        submitter.form == form || raise(DOMException, \"The specified element is not owned by this form element\", \"NotFoundError\");\n      }\n\n      function raise(errorConstructor, message, name) {\n        throw new errorConstructor(\"Failed to execute 'requestSubmit' on 'HTMLFormElement': \" + message + \".\", name)\n      }\n    })(HTMLFormElement.prototype);\n\n    const submittersByForm = new WeakMap;\n    function findSubmitterFromClickTarget(target) {\n        const element = target instanceof Element ? target : target instanceof Node ? target.parentElement : null;\n        const candidate = element ? element.closest(\"input, button\") : null;\n        return (candidate === null || candidate === void 0 ? void 0 : candidate.type) == \"submit\" ? candidate : null;\n    }\n    function clickCaptured(event) {\n        const submitter = findSubmitterFromClickTarget(event.target);\n        if (submitter && submitter.form) {\n            submittersByForm.set(submitter.form, submitter);\n        }\n    }\n    (function () {\n        if (\"submitter\" in Event.prototype)\n            return;\n        let prototype;\n        if (\"SubmitEvent\" in window && /Apple Computer/.test(navigator.vendor)) {\n            prototype = window.SubmitEvent.prototype;\n        }\n        else if (\"SubmitEvent\" in window) {\n            return;\n        }\n        else {\n            prototype = window.Event.prototype;\n        }\n        addEventListener(\"click\", clickCaptured, true);\n        Object.defineProperty(prototype, \"submitter\", {\n            get() {\n                if (this.type == \"submit\" && this.target instanceof HTMLFormElement) {\n                    return submittersByForm.get(this.target);\n                }\n            }\n        });\n    })();\n\n    var FrameLoadingStyle;\n    (function (FrameLoadingStyle) {\n        FrameLoadingStyle[\"eager\"] = \"eager\";\n        FrameLoadingStyle[\"lazy\"] = \"lazy\";\n    })(FrameLoadingStyle || (FrameLoadingStyle = {}));\n    class FrameElement extends HTMLElement {\n        constructor() {\n            super();\n            this.loaded = Promise.resolve();\n            this.delegate = new FrameElement.delegateConstructor(this);\n        }\n        static get observedAttributes() {\n            return [\"disabled\", \"loading\", \"src\"];\n        }\n        connectedCallback() {\n            this.delegate.connect();\n        }\n        disconnectedCallback() {\n            this.delegate.disconnect();\n        }\n        reload() {\n            const { src } = this;\n            this.src = null;\n            this.src = src;\n        }\n        attributeChangedCallback(name) {\n            if (name == \"loading\") {\n                this.delegate.loadingStyleChanged();\n            }\n            else if (name == \"src\") {\n                this.delegate.sourceURLChanged();\n            }\n            else {\n                this.delegate.disabledChanged();\n            }\n        }\n        get src() {\n            return this.getAttribute(\"src\");\n        }\n        set src(value) {\n            if (value) {\n                this.setAttribute(\"src\", value);\n            }\n            else {\n                this.removeAttribute(\"src\");\n            }\n        }\n        get loading() {\n            return frameLoadingStyleFromString(this.getAttribute(\"loading\") || \"\");\n        }\n        set loading(value) {\n            if (value) {\n                this.setAttribute(\"loading\", value);\n            }\n            else {\n                this.removeAttribute(\"loading\");\n            }\n        }\n        get disabled() {\n            return this.hasAttribute(\"disabled\");\n        }\n        set disabled(value) {\n            if (value) {\n                this.setAttribute(\"disabled\", \"\");\n            }\n            else {\n                this.removeAttribute(\"disabled\");\n            }\n        }\n        get autoscroll() {\n            return this.hasAttribute(\"autoscroll\");\n        }\n        set autoscroll(value) {\n            if (value) {\n                this.setAttribute(\"autoscroll\", \"\");\n            }\n            else {\n                this.removeAttribute(\"autoscroll\");\n            }\n        }\n        get complete() {\n            return !this.delegate.isLoading;\n        }\n        get isActive() {\n            return this.ownerDocument === document && !this.isPreview;\n        }\n        get isPreview() {\n            var _a, _b;\n            return (_b = (_a = this.ownerDocument) === null || _a === void 0 ? void 0 : _a.documentElement) === null || _b === void 0 ? void 0 : _b.hasAttribute(\"data-turbo-preview\");\n        }\n    }\n    function frameLoadingStyleFromString(style) {\n        switch (style.toLowerCase()) {\n            case \"lazy\": return FrameLoadingStyle.lazy;\n            default: return FrameLoadingStyle.eager;\n        }\n    }\n\n    function expandURL(locatable) {\n        return new URL(locatable.toString(), document.baseURI);\n    }\n    function getAnchor(url) {\n        let anchorMatch;\n        if (url.hash) {\n            return url.hash.slice(1);\n        }\n        else if (anchorMatch = url.href.match(/#(.*)$/)) {\n            return anchorMatch[1];\n        }\n    }\n    function getAction(form, submitter) {\n        const action = (submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute(\"formaction\")) || form.getAttribute(\"action\") || form.action;\n        return expandURL(action);\n    }\n    function getExtension(url) {\n        return (getLastPathComponent(url).match(/\\.[^.]*$/) || [])[0] || \"\";\n    }\n    function isHTML(url) {\n        return !!getExtension(url).match(/^(?:|\\.(?:htm|html|xhtml))$/);\n    }\n    function isPrefixedBy(baseURL, url) {\n        const prefix = getPrefix(url);\n        return baseURL.href === expandURL(prefix).href || baseURL.href.startsWith(prefix);\n    }\n    function locationIsVisitable(location, rootLocation) {\n        return isPrefixedBy(location, rootLocation) && isHTML(location);\n    }\n    function getRequestURL(url) {\n        const anchor = getAnchor(url);\n        return anchor != null\n            ? url.href.slice(0, -(anchor.length + 1))\n            : url.href;\n    }\n    function toCacheKey(url) {\n        return getRequestURL(url);\n    }\n    function urlsAreEqual(left, right) {\n        return expandURL(left).href == expandURL(right).href;\n    }\n    function getPathComponents(url) {\n        return url.pathname.split(\"/\").slice(1);\n    }\n    function getLastPathComponent(url) {\n        return getPathComponents(url).slice(-1)[0];\n    }\n    function getPrefix(url) {\n        return addTrailingSlash(url.origin + url.pathname);\n    }\n    function addTrailingSlash(value) {\n        return value.endsWith(\"/\") ? value : value + \"/\";\n    }\n\n    class FetchResponse {\n        constructor(response) {\n            this.response = response;\n        }\n        get succeeded() {\n            return this.response.ok;\n        }\n        get failed() {\n            return !this.succeeded;\n        }\n        get clientError() {\n            return this.statusCode >= 400 && this.statusCode <= 499;\n        }\n        get serverError() {\n            return this.statusCode >= 500 && this.statusCode <= 599;\n        }\n        get redirected() {\n            return this.response.redirected;\n        }\n        get location() {\n            return expandURL(this.response.url);\n        }\n        get isHTML() {\n            return this.contentType && this.contentType.match(/^(?:text\\/([^\\s;,]+\\b)?html|application\\/xhtml\\+xml)\\b/);\n        }\n        get statusCode() {\n            return this.response.status;\n        }\n        get contentType() {\n            return this.header(\"Content-Type\");\n        }\n        get responseText() {\n            return this.response.clone().text();\n        }\n        get responseHTML() {\n            if (this.isHTML) {\n                return this.response.clone().text();\n            }\n            else {\n                return Promise.resolve(undefined);\n            }\n        }\n        header(name) {\n            return this.response.headers.get(name);\n        }\n    }\n\n    function dispatch(eventName, { target, cancelable, detail } = {}) {\n        const event = new CustomEvent(eventName, { cancelable, bubbles: true, detail });\n        if (target && target.isConnected) {\n            target.dispatchEvent(event);\n        }\n        else {\n            document.documentElement.dispatchEvent(event);\n        }\n        return event;\n    }\n    function nextAnimationFrame() {\n        return new Promise(resolve => requestAnimationFrame(() => resolve()));\n    }\n    function nextEventLoopTick() {\n        return new Promise(resolve => setTimeout(() => resolve(), 0));\n    }\n    function nextMicrotask() {\n        return Promise.resolve();\n    }\n    function parseHTMLDocument(html = \"\") {\n        return new DOMParser().parseFromString(html, \"text/html\");\n    }\n    function unindent(strings, ...values) {\n        const lines = interpolate(strings, values).replace(/^\\n/, \"\").split(\"\\n\");\n        const match = lines[0].match(/^\\s+/);\n        const indent = match ? match[0].length : 0;\n        return lines.map(line => line.slice(indent)).join(\"\\n\");\n    }\n    function interpolate(strings, values) {\n        return strings.reduce((result, string, i) => {\n            const value = values[i] == undefined ? \"\" : values[i];\n            return result + string + value;\n        }, \"\");\n    }\n    function uuid() {\n        return Array.apply(null, { length: 36 }).map((_, i) => {\n            if (i == 8 || i == 13 || i == 18 || i == 23) {\n                return \"-\";\n            }\n            else if (i == 14) {\n                return \"4\";\n            }\n            else if (i == 19) {\n                return (Math.floor(Math.random() * 4) + 8).toString(16);\n            }\n            else {\n                return Math.floor(Math.random() * 15).toString(16);\n            }\n        }).join(\"\");\n    }\n    function getAttribute(attributeName, ...elements) {\n        for (const value of elements.map(element => element === null || element === void 0 ? void 0 : element.getAttribute(attributeName))) {\n            if (typeof value == \"string\")\n                return value;\n        }\n        return null;\n    }\n    function markAsBusy(...elements) {\n        for (const element of elements) {\n            if (element.localName == \"turbo-frame\") {\n                element.setAttribute(\"busy\", \"\");\n            }\n            element.setAttribute(\"aria-busy\", \"true\");\n        }\n    }\n    function clearBusyState(...elements) {\n        for (const element of elements) {\n            if (element.localName == \"turbo-frame\") {\n                element.removeAttribute(\"busy\");\n            }\n            element.removeAttribute(\"aria-busy\");\n        }\n    }\n\n    var FetchMethod;\n    (function (FetchMethod) {\n        FetchMethod[FetchMethod[\"get\"] = 0] = \"get\";\n        FetchMethod[FetchMethod[\"post\"] = 1] = \"post\";\n        FetchMethod[FetchMethod[\"put\"] = 2] = \"put\";\n        FetchMethod[FetchMethod[\"patch\"] = 3] = \"patch\";\n        FetchMethod[FetchMethod[\"delete\"] = 4] = \"delete\";\n    })(FetchMethod || (FetchMethod = {}));\n    function fetchMethodFromString(method) {\n        switch (method.toLowerCase()) {\n            case \"get\": return FetchMethod.get;\n            case \"post\": return FetchMethod.post;\n            case \"put\": return FetchMethod.put;\n            case \"patch\": return FetchMethod.patch;\n            case \"delete\": return FetchMethod.delete;\n        }\n    }\n    class FetchRequest {\n        constructor(delegate, method, location, body = new URLSearchParams, target = null) {\n            this.abortController = new AbortController;\n            this.resolveRequestPromise = (value) => { };\n            this.delegate = delegate;\n            this.method = method;\n            this.headers = this.defaultHeaders;\n            this.body = body;\n            this.url = location;\n            this.target = target;\n        }\n        get location() {\n            return this.url;\n        }\n        get params() {\n            return this.url.searchParams;\n        }\n        get entries() {\n            return this.body ? Array.from(this.body.entries()) : [];\n        }\n        cancel() {\n            this.abortController.abort();\n        }\n        async perform() {\n            var _a, _b;\n            const { fetchOptions } = this;\n            (_b = (_a = this.delegate).prepareHeadersForRequest) === null || _b === void 0 ? void 0 : _b.call(_a, this.headers, this);\n            await this.allowRequestToBeIntercepted(fetchOptions);\n            try {\n                this.delegate.requestStarted(this);\n                const response = await fetch(this.url.href, fetchOptions);\n                return await this.receive(response);\n            }\n            catch (error) {\n                if (error.name !== 'AbortError') {\n                    this.delegate.requestErrored(this, error);\n                    throw error;\n                }\n            }\n            finally {\n                this.delegate.requestFinished(this);\n            }\n        }\n        async receive(response) {\n            const fetchResponse = new FetchResponse(response);\n            const event = dispatch(\"turbo:before-fetch-response\", { cancelable: true, detail: { fetchResponse }, target: this.target });\n            if (event.defaultPrevented) {\n                this.delegate.requestPreventedHandlingResponse(this, fetchResponse);\n            }\n            else if (fetchResponse.succeeded) {\n                this.delegate.requestSucceededWithResponse(this, fetchResponse);\n            }\n            else {\n                this.delegate.requestFailedWithResponse(this, fetchResponse);\n            }\n            return fetchResponse;\n        }\n        get fetchOptions() {\n            var _a;\n            return {\n                method: FetchMethod[this.method].toUpperCase(),\n                credentials: \"same-origin\",\n                headers: this.headers,\n                redirect: \"follow\",\n                body: this.isIdempotent ? null : this.body,\n                signal: this.abortSignal,\n                referrer: (_a = this.delegate.referrer) === null || _a === void 0 ? void 0 : _a.href\n            };\n        }\n        get defaultHeaders() {\n            return {\n                \"Accept\": \"text/html, application/xhtml+xml\"\n            };\n        }\n        get isIdempotent() {\n            return this.method == FetchMethod.get;\n        }\n        get abortSignal() {\n            return this.abortController.signal;\n        }\n        async allowRequestToBeIntercepted(fetchOptions) {\n            const requestInterception = new Promise(resolve => this.resolveRequestPromise = resolve);\n            const event = dispatch(\"turbo:before-fetch-request\", {\n                cancelable: true,\n                detail: {\n                    fetchOptions,\n                    url: this.url,\n                    resume: this.resolveRequestPromise\n                },\n                target: this.target\n            });\n            if (event.defaultPrevented)\n                await requestInterception;\n        }\n    }\n\n    class AppearanceObserver {\n        constructor(delegate, element) {\n            this.started = false;\n            this.intersect = entries => {\n                const lastEntry = entries.slice(-1)[0];\n                if (lastEntry === null || lastEntry === void 0 ? void 0 : lastEntry.isIntersecting) {\n                    this.delegate.elementAppearedInViewport(this.element);\n                }\n            };\n            this.delegate = delegate;\n            this.element = element;\n            this.intersectionObserver = new IntersectionObserver(this.intersect);\n        }\n        start() {\n            if (!this.started) {\n                this.started = true;\n                this.intersectionObserver.observe(this.element);\n            }\n        }\n        stop() {\n            if (this.started) {\n                this.started = false;\n                this.intersectionObserver.unobserve(this.element);\n            }\n        }\n    }\n\n    class StreamMessage {\n        constructor(html) {\n            this.templateElement = document.createElement(\"template\");\n            this.templateElement.innerHTML = html;\n        }\n        static wrap(message) {\n            if (typeof message == \"string\") {\n                return new this(message);\n            }\n            else {\n                return message;\n            }\n        }\n        get fragment() {\n            const fragment = document.createDocumentFragment();\n            for (const element of this.foreignElements) {\n                fragment.appendChild(document.importNode(element, true));\n            }\n            return fragment;\n        }\n        get foreignElements() {\n            return this.templateChildren.reduce((streamElements, child) => {\n                if (child.tagName.toLowerCase() == \"turbo-stream\") {\n                    return [...streamElements, child];\n                }\n                else {\n                    return streamElements;\n                }\n            }, []);\n        }\n        get templateChildren() {\n            return Array.from(this.templateElement.content.children);\n        }\n    }\n    StreamMessage.contentType = \"text/vnd.turbo-stream.html\";\n\n    var FormSubmissionState;\n    (function (FormSubmissionState) {\n        FormSubmissionState[FormSubmissionState[\"initialized\"] = 0] = \"initialized\";\n        FormSubmissionState[FormSubmissionState[\"requesting\"] = 1] = \"requesting\";\n        FormSubmissionState[FormSubmissionState[\"waiting\"] = 2] = \"waiting\";\n        FormSubmissionState[FormSubmissionState[\"receiving\"] = 3] = \"receiving\";\n        FormSubmissionState[FormSubmissionState[\"stopping\"] = 4] = \"stopping\";\n        FormSubmissionState[FormSubmissionState[\"stopped\"] = 5] = \"stopped\";\n    })(FormSubmissionState || (FormSubmissionState = {}));\n    var FormEnctype;\n    (function (FormEnctype) {\n        FormEnctype[\"urlEncoded\"] = \"application/x-www-form-urlencoded\";\n        FormEnctype[\"multipart\"] = \"multipart/form-data\";\n        FormEnctype[\"plain\"] = \"text/plain\";\n    })(FormEnctype || (FormEnctype = {}));\n    function formEnctypeFromString(encoding) {\n        switch (encoding.toLowerCase()) {\n            case FormEnctype.multipart: return FormEnctype.multipart;\n            case FormEnctype.plain: return FormEnctype.plain;\n            default: return FormEnctype.urlEncoded;\n        }\n    }\n    class FormSubmission {\n        constructor(delegate, formElement, submitter, mustRedirect = false) {\n            this.state = FormSubmissionState.initialized;\n            this.delegate = delegate;\n            this.formElement = formElement;\n            this.submitter = submitter;\n            this.formData = buildFormData(formElement, submitter);\n            this.location = expandURL(this.action);\n            if (this.method == FetchMethod.get) {\n                mergeFormDataEntries(this.location, [...this.body.entries()]);\n            }\n            this.fetchRequest = new FetchRequest(this, this.method, this.location, this.body, this.formElement);\n            this.mustRedirect = mustRedirect;\n        }\n        static confirmMethod(message, element) {\n            return confirm(message);\n        }\n        get method() {\n            var _a;\n            const method = ((_a = this.submitter) === null || _a === void 0 ? void 0 : _a.getAttribute(\"formmethod\")) || this.formElement.getAttribute(\"method\") || \"\";\n            return fetchMethodFromString(method.toLowerCase()) || FetchMethod.get;\n        }\n        get action() {\n            var _a;\n            const formElementAction = typeof this.formElement.action === 'string' ? this.formElement.action : null;\n            return ((_a = this.submitter) === null || _a === void 0 ? void 0 : _a.getAttribute(\"formaction\")) || this.formElement.getAttribute(\"action\") || formElementAction || \"\";\n        }\n        get body() {\n            if (this.enctype == FormEnctype.urlEncoded || this.method == FetchMethod.get) {\n                return new URLSearchParams(this.stringFormData);\n            }\n            else {\n                return this.formData;\n            }\n        }\n        get enctype() {\n            var _a;\n            return formEnctypeFromString(((_a = this.submitter) === null || _a === void 0 ? void 0 : _a.getAttribute(\"formenctype\")) || this.formElement.enctype);\n        }\n        get isIdempotent() {\n            return this.fetchRequest.isIdempotent;\n        }\n        get stringFormData() {\n            return [...this.formData].reduce((entries, [name, value]) => {\n                return entries.concat(typeof value == \"string\" ? [[name, value]] : []);\n            }, []);\n        }\n        get confirmationMessage() {\n            return this.formElement.getAttribute(\"data-turbo-confirm\");\n        }\n        get needsConfirmation() {\n            return this.confirmationMessage !== null;\n        }\n        async start() {\n            const { initialized, requesting } = FormSubmissionState;\n            if (this.needsConfirmation) {\n                const answer = FormSubmission.confirmMethod(this.confirmationMessage, this.formElement);\n                if (!answer) {\n                    return;\n                }\n            }\n            if (this.state == initialized) {\n                this.state = requesting;\n                return this.fetchRequest.perform();\n            }\n        }\n        stop() {\n            const { stopping, stopped } = FormSubmissionState;\n            if (this.state != stopping && this.state != stopped) {\n                this.state = stopping;\n                this.fetchRequest.cancel();\n                return true;\n            }\n        }\n        prepareHeadersForRequest(headers, request) {\n            if (!request.isIdempotent) {\n                const token = getCookieValue(getMetaContent(\"csrf-param\")) || getMetaContent(\"csrf-token\");\n                if (token) {\n                    headers[\"X-CSRF-Token\"] = token;\n                }\n                headers[\"Accept\"] = [StreamMessage.contentType, headers[\"Accept\"]].join(\", \");\n            }\n        }\n        requestStarted(request) {\n            var _a;\n            this.state = FormSubmissionState.waiting;\n            (_a = this.submitter) === null || _a === void 0 ? void 0 : _a.setAttribute(\"disabled\", \"\");\n            dispatch(\"turbo:submit-start\", { target: this.formElement, detail: { formSubmission: this } });\n            this.delegate.formSubmissionStarted(this);\n        }\n        requestPreventedHandlingResponse(request, response) {\n            this.result = { success: response.succeeded, fetchResponse: response };\n        }\n        requestSucceededWithResponse(request, response) {\n            if (response.clientError || response.serverError) {\n                this.delegate.formSubmissionFailedWithResponse(this, response);\n            }\n            else if (this.requestMustRedirect(request) && responseSucceededWithoutRedirect(response)) {\n                const error = new Error(\"Form responses must redirect to another location\");\n                this.delegate.formSubmissionErrored(this, error);\n            }\n            else {\n                this.state = FormSubmissionState.receiving;\n                this.result = { success: true, fetchResponse: response };\n                this.delegate.formSubmissionSucceededWithResponse(this, response);\n            }\n        }\n        requestFailedWithResponse(request, response) {\n            this.result = { success: false, fetchResponse: response };\n            this.delegate.formSubmissionFailedWithResponse(this, response);\n        }\n        requestErrored(request, error) {\n            this.result = { success: false, error };\n            this.delegate.formSubmissionErrored(this, error);\n        }\n        requestFinished(request) {\n            var _a;\n            this.state = FormSubmissionState.stopped;\n            (_a = this.submitter) === null || _a === void 0 ? void 0 : _a.removeAttribute(\"disabled\");\n            dispatch(\"turbo:submit-end\", { target: this.formElement, detail: Object.assign({ formSubmission: this }, this.result) });\n            this.delegate.formSubmissionFinished(this);\n        }\n        requestMustRedirect(request) {\n            return !request.isIdempotent && this.mustRedirect;\n        }\n    }\n    function buildFormData(formElement, submitter) {\n        const formData = new FormData(formElement);\n        const name = submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute(\"name\");\n        const value = submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute(\"value\");\n        if (name && value != null && formData.get(name) != value) {\n            formData.append(name, value);\n        }\n        return formData;\n    }\n    function getCookieValue(cookieName) {\n        if (cookieName != null) {\n            const cookies = document.cookie ? document.cookie.split(\"; \") : [];\n            const cookie = cookies.find((cookie) => cookie.startsWith(cookieName));\n            if (cookie) {\n                const value = cookie.split(\"=\").slice(1).join(\"=\");\n                return value ? decodeURIComponent(value) : undefined;\n            }\n        }\n    }\n    function getMetaContent(name) {\n        const element = document.querySelector(`meta[name=\"${name}\"]`);\n        return element && element.content;\n    }\n    function responseSucceededWithoutRedirect(response) {\n        return response.statusCode == 200 && !response.redirected;\n    }\n    function mergeFormDataEntries(url, entries) {\n        const searchParams = new URLSearchParams;\n        for (const [name, value] of entries) {\n            if (value instanceof File)\n                continue;\n            searchParams.append(name, value);\n        }\n        url.search = searchParams.toString();\n        return url;\n    }\n\n    class Snapshot {\n        constructor(element) {\n            this.element = element;\n        }\n        get children() {\n            return [...this.element.children];\n        }\n        hasAnchor(anchor) {\n            return this.getElementForAnchor(anchor) != null;\n        }\n        getElementForAnchor(anchor) {\n            return anchor ? this.element.querySelector(`[id='${anchor}'], a[name='${anchor}']`) : null;\n        }\n        get isConnected() {\n            return this.element.isConnected;\n        }\n        get firstAutofocusableElement() {\n            return this.element.querySelector(\"[autofocus]\");\n        }\n        get permanentElements() {\n            return [...this.element.querySelectorAll(\"[id][data-turbo-permanent]\")];\n        }\n        getPermanentElementById(id) {\n            return this.element.querySelector(`#${id}[data-turbo-permanent]`);\n        }\n        getPermanentElementMapForSnapshot(snapshot) {\n            const permanentElementMap = {};\n            for (const currentPermanentElement of this.permanentElements) {\n                const { id } = currentPermanentElement;\n                const newPermanentElement = snapshot.getPermanentElementById(id);\n                if (newPermanentElement) {\n                    permanentElementMap[id] = [currentPermanentElement, newPermanentElement];\n                }\n            }\n            return permanentElementMap;\n        }\n    }\n\n    class FormInterceptor {\n        constructor(delegate, element) {\n            this.submitBubbled = ((event) => {\n                const form = event.target;\n                if (!event.defaultPrevented && form instanceof HTMLFormElement && form.closest(\"turbo-frame, html\") == this.element) {\n                    const submitter = event.submitter || undefined;\n                    const method = (submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute(\"formmethod\")) || form.method;\n                    if (method != \"dialog\" && this.delegate.shouldInterceptFormSubmission(form, submitter)) {\n                        event.preventDefault();\n                        event.stopImmediatePropagation();\n                        this.delegate.formSubmissionIntercepted(form, submitter);\n                    }\n                }\n            });\n            this.delegate = delegate;\n            this.element = element;\n        }\n        start() {\n            this.element.addEventListener(\"submit\", this.submitBubbled);\n        }\n        stop() {\n            this.element.removeEventListener(\"submit\", this.submitBubbled);\n        }\n    }\n\n    class View {\n        constructor(delegate, element) {\n            this.resolveRenderPromise = (value) => { };\n            this.resolveInterceptionPromise = (value) => { };\n            this.delegate = delegate;\n            this.element = element;\n        }\n        scrollToAnchor(anchor) {\n            const element = this.snapshot.getElementForAnchor(anchor);\n            if (element) {\n                this.scrollToElement(element);\n                this.focusElement(element);\n            }\n            else {\n                this.scrollToPosition({ x: 0, y: 0 });\n            }\n        }\n        scrollToAnchorFromLocation(location) {\n            this.scrollToAnchor(getAnchor(location));\n        }\n        scrollToElement(element) {\n            element.scrollIntoView();\n        }\n        focusElement(element) {\n            if (element instanceof HTMLElement) {\n                if (element.hasAttribute(\"tabindex\")) {\n                    element.focus();\n                }\n                else {\n                    element.setAttribute(\"tabindex\", \"-1\");\n                    element.focus();\n                    element.removeAttribute(\"tabindex\");\n                }\n            }\n        }\n        scrollToPosition({ x, y }) {\n            this.scrollRoot.scrollTo(x, y);\n        }\n        scrollToTop() {\n            this.scrollToPosition({ x: 0, y: 0 });\n        }\n        get scrollRoot() {\n            return window;\n        }\n        async render(renderer) {\n            const { isPreview, shouldRender, newSnapshot: snapshot } = renderer;\n            if (shouldRender) {\n                try {\n                    this.renderPromise = new Promise(resolve => this.resolveRenderPromise = resolve);\n                    this.renderer = renderer;\n                    this.prepareToRenderSnapshot(renderer);\n                    const renderInterception = new Promise(resolve => this.resolveInterceptionPromise = resolve);\n                    const immediateRender = this.delegate.allowsImmediateRender(snapshot, this.resolveInterceptionPromise);\n                    if (!immediateRender)\n                        await renderInterception;\n                    await this.renderSnapshot(renderer);\n                    this.delegate.viewRenderedSnapshot(snapshot, isPreview);\n                    this.finishRenderingSnapshot(renderer);\n                }\n                finally {\n                    delete this.renderer;\n                    this.resolveRenderPromise(undefined);\n                    delete this.renderPromise;\n                }\n            }\n            else {\n                this.invalidate();\n            }\n        }\n        invalidate() {\n            this.delegate.viewInvalidated();\n        }\n        prepareToRenderSnapshot(renderer) {\n            this.markAsPreview(renderer.isPreview);\n            renderer.prepareToRender();\n        }\n        markAsPreview(isPreview) {\n            if (isPreview) {\n                this.element.setAttribute(\"data-turbo-preview\", \"\");\n            }\n            else {\n                this.element.removeAttribute(\"data-turbo-preview\");\n            }\n        }\n        async renderSnapshot(renderer) {\n            await renderer.render();\n        }\n        finishRenderingSnapshot(renderer) {\n            renderer.finishRendering();\n        }\n    }\n\n    class FrameView extends View {\n        invalidate() {\n            this.element.innerHTML = \"\";\n        }\n        get snapshot() {\n            return new Snapshot(this.element);\n        }\n    }\n\n    class LinkInterceptor {\n        constructor(delegate, element) {\n            this.clickBubbled = (event) => {\n                if (this.respondsToEventTarget(event.target)) {\n                    this.clickEvent = event;\n                }\n                else {\n                    delete this.clickEvent;\n                }\n            };\n            this.linkClicked = ((event) => {\n                if (this.clickEvent && this.respondsToEventTarget(event.target) && event.target instanceof Element) {\n                    if (this.delegate.shouldInterceptLinkClick(event.target, event.detail.url)) {\n                        this.clickEvent.preventDefault();\n                        event.preventDefault();\n                        this.delegate.linkClickIntercepted(event.target, event.detail.url);\n                    }\n                }\n                delete this.clickEvent;\n            });\n            this.willVisit = () => {\n                delete this.clickEvent;\n            };\n            this.delegate = delegate;\n            this.element = element;\n        }\n        start() {\n            this.element.addEventListener(\"click\", this.clickBubbled);\n            document.addEventListener(\"turbo:click\", this.linkClicked);\n            document.addEventListener(\"turbo:before-visit\", this.willVisit);\n        }\n        stop() {\n            this.element.removeEventListener(\"click\", this.clickBubbled);\n            document.removeEventListener(\"turbo:click\", this.linkClicked);\n            document.removeEventListener(\"turbo:before-visit\", this.willVisit);\n        }\n        respondsToEventTarget(target) {\n            const element = target instanceof Element\n                ? target\n                : target instanceof Node\n                    ? target.parentElement\n                    : null;\n            return element && element.closest(\"turbo-frame, html\") == this.element;\n        }\n    }\n\n    class Bardo {\n        constructor(permanentElementMap) {\n            this.permanentElementMap = permanentElementMap;\n        }\n        static preservingPermanentElements(permanentElementMap, callback) {\n            const bardo = new this(permanentElementMap);\n            bardo.enter();\n            callback();\n            bardo.leave();\n        }\n        enter() {\n            for (const id in this.permanentElementMap) {\n                const [, newPermanentElement] = this.permanentElementMap[id];\n                this.replaceNewPermanentElementWithPlaceholder(newPermanentElement);\n            }\n        }\n        leave() {\n            for (const id in this.permanentElementMap) {\n                const [currentPermanentElement] = this.permanentElementMap[id];\n                this.replaceCurrentPermanentElementWithClone(currentPermanentElement);\n                this.replacePlaceholderWithPermanentElement(currentPermanentElement);\n            }\n        }\n        replaceNewPermanentElementWithPlaceholder(permanentElement) {\n            const placeholder = createPlaceholderForPermanentElement(permanentElement);\n            permanentElement.replaceWith(placeholder);\n        }\n        replaceCurrentPermanentElementWithClone(permanentElement) {\n            const clone = permanentElement.cloneNode(true);\n            permanentElement.replaceWith(clone);\n        }\n        replacePlaceholderWithPermanentElement(permanentElement) {\n            const placeholder = this.getPlaceholderById(permanentElement.id);\n            placeholder === null || placeholder === void 0 ? void 0 : placeholder.replaceWith(permanentElement);\n        }\n        getPlaceholderById(id) {\n            return this.placeholders.find(element => element.content == id);\n        }\n        get placeholders() {\n            return [...document.querySelectorAll(\"meta[name=turbo-permanent-placeholder][content]\")];\n        }\n    }\n    function createPlaceholderForPermanentElement(permanentElement) {\n        const element = document.createElement(\"meta\");\n        element.setAttribute(\"name\", \"turbo-permanent-placeholder\");\n        element.setAttribute(\"content\", permanentElement.id);\n        return element;\n    }\n\n    class Renderer {\n        constructor(currentSnapshot, newSnapshot, isPreview, willRender = true) {\n            this.currentSnapshot = currentSnapshot;\n            this.newSnapshot = newSnapshot;\n            this.isPreview = isPreview;\n            this.willRender = willRender;\n            this.promise = new Promise((resolve, reject) => this.resolvingFunctions = { resolve, reject });\n        }\n        get shouldRender() {\n            return true;\n        }\n        prepareToRender() {\n            return;\n        }\n        finishRendering() {\n            if (this.resolvingFunctions) {\n                this.resolvingFunctions.resolve();\n                delete this.resolvingFunctions;\n            }\n        }\n        createScriptElement(element) {\n            if (element.getAttribute(\"data-turbo-eval\") == \"false\") {\n                return element;\n            }\n            else {\n                const createdScriptElement = document.createElement(\"script\");\n                if (this.cspNonce) {\n                    createdScriptElement.nonce = this.cspNonce;\n                }\n                createdScriptElement.textContent = element.textContent;\n                createdScriptElement.async = false;\n                copyElementAttributes(createdScriptElement, element);\n                return createdScriptElement;\n            }\n        }\n        preservingPermanentElements(callback) {\n            Bardo.preservingPermanentElements(this.permanentElementMap, callback);\n        }\n        focusFirstAutofocusableElement() {\n            const element = this.connectedSnapshot.firstAutofocusableElement;\n            if (elementIsFocusable(element)) {\n                element.focus();\n            }\n        }\n        get connectedSnapshot() {\n            return this.newSnapshot.isConnected ? this.newSnapshot : this.currentSnapshot;\n        }\n        get currentElement() {\n            return this.currentSnapshot.element;\n        }\n        get newElement() {\n            return this.newSnapshot.element;\n        }\n        get permanentElementMap() {\n            return this.currentSnapshot.getPermanentElementMapForSnapshot(this.newSnapshot);\n        }\n        get cspNonce() {\n            var _a;\n            return (_a = document.head.querySelector('meta[name=\"csp-nonce\"]')) === null || _a === void 0 ? void 0 : _a.getAttribute(\"content\");\n        }\n    }\n    function copyElementAttributes(destinationElement, sourceElement) {\n        for (const { name, value } of [...sourceElement.attributes]) {\n            destinationElement.setAttribute(name, value);\n        }\n    }\n    function elementIsFocusable(element) {\n        return element && typeof element.focus == \"function\";\n    }\n\n    class FrameRenderer extends Renderer {\n        get shouldRender() {\n            return true;\n        }\n        async render() {\n            await nextAnimationFrame();\n            this.preservingPermanentElements(() => {\n                this.loadFrameElement();\n            });\n            this.scrollFrameIntoView();\n            await nextAnimationFrame();\n            this.focusFirstAutofocusableElement();\n            await nextAnimationFrame();\n            this.activateScriptElements();\n        }\n        loadFrameElement() {\n            var _a;\n            const destinationRange = document.createRange();\n            destinationRange.selectNodeContents(this.currentElement);\n            destinationRange.deleteContents();\n            const frameElement = this.newElement;\n            const sourceRange = (_a = frameElement.ownerDocument) === null || _a === void 0 ? void 0 : _a.createRange();\n            if (sourceRange) {\n                sourceRange.selectNodeContents(frameElement);\n                this.currentElement.appendChild(sourceRange.extractContents());\n            }\n        }\n        scrollFrameIntoView() {\n            if (this.currentElement.autoscroll || this.newElement.autoscroll) {\n                const element = this.currentElement.firstElementChild;\n                const block = readScrollLogicalPosition(this.currentElement.getAttribute(\"data-autoscroll-block\"), \"end\");\n                if (element) {\n                    element.scrollIntoView({ block });\n                    return true;\n                }\n            }\n            return false;\n        }\n        activateScriptElements() {\n            for (const inertScriptElement of this.newScriptElements) {\n                const activatedScriptElement = this.createScriptElement(inertScriptElement);\n                inertScriptElement.replaceWith(activatedScriptElement);\n            }\n        }\n        get newScriptElements() {\n            return this.currentElement.querySelectorAll(\"script\");\n        }\n    }\n    function readScrollLogicalPosition(value, defaultValue) {\n        if (value == \"end\" || value == \"start\" || value == \"center\" || value == \"nearest\") {\n            return value;\n        }\n        else {\n            return defaultValue;\n        }\n    }\n\n    class ProgressBar {\n        constructor() {\n            this.hiding = false;\n            this.value = 0;\n            this.visible = false;\n            this.trickle = () => {\n                this.setValue(this.value + Math.random() / 100);\n            };\n            this.stylesheetElement = this.createStylesheetElement();\n            this.progressElement = this.createProgressElement();\n            this.installStylesheetElement();\n            this.setValue(0);\n        }\n        static get defaultCSS() {\n            return unindent `\n      .turbo-progress-bar {\n        position: fixed;\n        display: block;\n        top: 0;\n        left: 0;\n        height: 3px;\n        background: #0076ff;\n        z-index: 9999;\n        transition:\n          width ${ProgressBar.animationDuration}ms ease-out,\n          opacity ${ProgressBar.animationDuration / 2}ms ${ProgressBar.animationDuration / 2}ms ease-in;\n        transform: translate3d(0, 0, 0);\n      }\n    `;\n        }\n        show() {\n            if (!this.visible) {\n                this.visible = true;\n                this.installProgressElement();\n                this.startTrickling();\n            }\n        }\n        hide() {\n            if (this.visible && !this.hiding) {\n                this.hiding = true;\n                this.fadeProgressElement(() => {\n                    this.uninstallProgressElement();\n                    this.stopTrickling();\n                    this.visible = false;\n                    this.hiding = false;\n                });\n            }\n        }\n        setValue(value) {\n            this.value = value;\n            this.refresh();\n        }\n        installStylesheetElement() {\n            document.head.insertBefore(this.stylesheetElement, document.head.firstChild);\n        }\n        installProgressElement() {\n            this.progressElement.style.width = \"0\";\n            this.progressElement.style.opacity = \"1\";\n            document.documentElement.insertBefore(this.progressElement, document.body);\n            this.refresh();\n        }\n        fadeProgressElement(callback) {\n            this.progressElement.style.opacity = \"0\";\n            setTimeout(callback, ProgressBar.animationDuration * 1.5);\n        }\n        uninstallProgressElement() {\n            if (this.progressElement.parentNode) {\n                document.documentElement.removeChild(this.progressElement);\n            }\n        }\n        startTrickling() {\n            if (!this.trickleInterval) {\n                this.trickleInterval = window.setInterval(this.trickle, ProgressBar.animationDuration);\n            }\n        }\n        stopTrickling() {\n            window.clearInterval(this.trickleInterval);\n            delete this.trickleInterval;\n        }\n        refresh() {\n            requestAnimationFrame(() => {\n                this.progressElement.style.width = `${10 + (this.value * 90)}%`;\n            });\n        }\n        createStylesheetElement() {\n            const element = document.createElement(\"style\");\n            element.type = \"text/css\";\n            element.textContent = ProgressBar.defaultCSS;\n            return element;\n        }\n        createProgressElement() {\n            const element = document.createElement(\"div\");\n            element.className = \"turbo-progress-bar\";\n            return element;\n        }\n    }\n    ProgressBar.animationDuration = 300;\n\n    class HeadSnapshot extends Snapshot {\n        constructor() {\n            super(...arguments);\n            this.detailsByOuterHTML = this.children\n                .filter((element) => !elementIsNoscript(element))\n                .map((element) => elementWithoutNonce(element))\n                .reduce((result, element) => {\n                const { outerHTML } = element;\n                const details = outerHTML in result\n                    ? result[outerHTML]\n                    : {\n                        type: elementType(element),\n                        tracked: elementIsTracked(element),\n                        elements: []\n                    };\n                return Object.assign(Object.assign({}, result), { [outerHTML]: Object.assign(Object.assign({}, details), { elements: [...details.elements, element] }) });\n            }, {});\n        }\n        get trackedElementSignature() {\n            return Object.keys(this.detailsByOuterHTML)\n                .filter(outerHTML => this.detailsByOuterHTML[outerHTML].tracked)\n                .join(\"\");\n        }\n        getScriptElementsNotInSnapshot(snapshot) {\n            return this.getElementsMatchingTypeNotInSnapshot(\"script\", snapshot);\n        }\n        getStylesheetElementsNotInSnapshot(snapshot) {\n            return this.getElementsMatchingTypeNotInSnapshot(\"stylesheet\", snapshot);\n        }\n        getElementsMatchingTypeNotInSnapshot(matchedType, snapshot) {\n            return Object.keys(this.detailsByOuterHTML)\n                .filter(outerHTML => !(outerHTML in snapshot.detailsByOuterHTML))\n                .map(outerHTML => this.detailsByOuterHTML[outerHTML])\n                .filter(({ type }) => type == matchedType)\n                .map(({ elements: [element] }) => element);\n        }\n        get provisionalElements() {\n            return Object.keys(this.detailsByOuterHTML).reduce((result, outerHTML) => {\n                const { type, tracked, elements } = this.detailsByOuterHTML[outerHTML];\n                if (type == null && !tracked) {\n                    return [...result, ...elements];\n                }\n                else if (elements.length > 1) {\n                    return [...result, ...elements.slice(1)];\n                }\n                else {\n                    return result;\n                }\n            }, []);\n        }\n        getMetaValue(name) {\n            const element = this.findMetaElementByName(name);\n            return element\n                ? element.getAttribute(\"content\")\n                : null;\n        }\n        findMetaElementByName(name) {\n            return Object.keys(this.detailsByOuterHTML).reduce((result, outerHTML) => {\n                const { elements: [element] } = this.detailsByOuterHTML[outerHTML];\n                return elementIsMetaElementWithName(element, name) ? element : result;\n            }, undefined);\n        }\n    }\n    function elementType(element) {\n        if (elementIsScript(element)) {\n            return \"script\";\n        }\n        else if (elementIsStylesheet(element)) {\n            return \"stylesheet\";\n        }\n    }\n    function elementIsTracked(element) {\n        return element.getAttribute(\"data-turbo-track\") == \"reload\";\n    }\n    function elementIsScript(element) {\n        const tagName = element.tagName.toLowerCase();\n        return tagName == \"script\";\n    }\n    function elementIsNoscript(element) {\n        const tagName = element.tagName.toLowerCase();\n        return tagName == \"noscript\";\n    }\n    function elementIsStylesheet(element) {\n        const tagName = element.tagName.toLowerCase();\n        return tagName == \"style\" || (tagName == \"link\" && element.getAttribute(\"rel\") == \"stylesheet\");\n    }\n    function elementIsMetaElementWithName(element, name) {\n        const tagName = element.tagName.toLowerCase();\n        return tagName == \"meta\" && element.getAttribute(\"name\") == name;\n    }\n    function elementWithoutNonce(element) {\n        if (element.hasAttribute(\"nonce\")) {\n            element.setAttribute(\"nonce\", \"\");\n        }\n        return element;\n    }\n\n    class PageSnapshot extends Snapshot {\n        constructor(element, headSnapshot) {\n            super(element);\n            this.headSnapshot = headSnapshot;\n        }\n        static fromHTMLString(html = \"\") {\n            return this.fromDocument(parseHTMLDocument(html));\n        }\n        static fromElement(element) {\n            return this.fromDocument(element.ownerDocument);\n        }\n        static fromDocument({ head, body }) {\n            return new this(body, new HeadSnapshot(head));\n        }\n        clone() {\n            return new PageSnapshot(this.element.cloneNode(true), this.headSnapshot);\n        }\n        get headElement() {\n            return this.headSnapshot.element;\n        }\n        get rootLocation() {\n            var _a;\n            const root = (_a = this.getSetting(\"root\")) !== null && _a !== void 0 ? _a : \"/\";\n            return expandURL(root);\n        }\n        get cacheControlValue() {\n            return this.getSetting(\"cache-control\");\n        }\n        get isPreviewable() {\n            return this.cacheControlValue != \"no-preview\";\n        }\n        get isCacheable() {\n            return this.cacheControlValue != \"no-cache\";\n        }\n        get isVisitable() {\n            return this.getSetting(\"visit-control\") != \"reload\";\n        }\n        getSetting(name) {\n            return this.headSnapshot.getMetaValue(`turbo-${name}`);\n        }\n    }\n\n    var TimingMetric;\n    (function (TimingMetric) {\n        TimingMetric[\"visitStart\"] = \"visitStart\";\n        TimingMetric[\"requestStart\"] = \"requestStart\";\n        TimingMetric[\"requestEnd\"] = \"requestEnd\";\n        TimingMetric[\"visitEnd\"] = \"visitEnd\";\n    })(TimingMetric || (TimingMetric = {}));\n    var VisitState;\n    (function (VisitState) {\n        VisitState[\"initialized\"] = \"initialized\";\n        VisitState[\"started\"] = \"started\";\n        VisitState[\"canceled\"] = \"canceled\";\n        VisitState[\"failed\"] = \"failed\";\n        VisitState[\"completed\"] = \"completed\";\n    })(VisitState || (VisitState = {}));\n    const defaultOptions = {\n        action: \"advance\",\n        historyChanged: false,\n        visitCachedSnapshot: () => { },\n        willRender: true,\n    };\n    var SystemStatusCode;\n    (function (SystemStatusCode) {\n        SystemStatusCode[SystemStatusCode[\"networkFailure\"] = 0] = \"networkFailure\";\n        SystemStatusCode[SystemStatusCode[\"timeoutFailure\"] = -1] = \"timeoutFailure\";\n        SystemStatusCode[SystemStatusCode[\"contentTypeMismatch\"] = -2] = \"contentTypeMismatch\";\n    })(SystemStatusCode || (SystemStatusCode = {}));\n    class Visit {\n        constructor(delegate, location, restorationIdentifier, options = {}) {\n            this.identifier = uuid();\n            this.timingMetrics = {};\n            this.followedRedirect = false;\n            this.historyChanged = false;\n            this.scrolled = false;\n            this.snapshotCached = false;\n            this.state = VisitState.initialized;\n            this.delegate = delegate;\n            this.location = location;\n            this.restorationIdentifier = restorationIdentifier || uuid();\n            const { action, historyChanged, referrer, snapshotHTML, response, visitCachedSnapshot, willRender } = Object.assign(Object.assign({}, defaultOptions), options);\n            this.action = action;\n            this.historyChanged = historyChanged;\n            this.referrer = referrer;\n            this.snapshotHTML = snapshotHTML;\n            this.response = response;\n            this.isSamePage = this.delegate.locationWithActionIsSamePage(this.location, this.action);\n            this.visitCachedSnapshot = visitCachedSnapshot;\n            this.willRender = willRender;\n            this.scrolled = !willRender;\n        }\n        get adapter() {\n            return this.delegate.adapter;\n        }\n        get view() {\n            return this.delegate.view;\n        }\n        get history() {\n            return this.delegate.history;\n        }\n        get restorationData() {\n            return this.history.getRestorationDataForIdentifier(this.restorationIdentifier);\n        }\n        get silent() {\n            return this.isSamePage;\n        }\n        start() {\n            if (this.state == VisitState.initialized) {\n                this.recordTimingMetric(TimingMetric.visitStart);\n                this.state = VisitState.started;\n                this.adapter.visitStarted(this);\n                this.delegate.visitStarted(this);\n            }\n        }\n        cancel() {\n            if (this.state == VisitState.started) {\n                if (this.request) {\n                    this.request.cancel();\n                }\n                this.cancelRender();\n                this.state = VisitState.canceled;\n            }\n        }\n        complete() {\n            if (this.state == VisitState.started) {\n                this.recordTimingMetric(TimingMetric.visitEnd);\n                this.state = VisitState.completed;\n                this.adapter.visitCompleted(this);\n                this.delegate.visitCompleted(this);\n                this.followRedirect();\n            }\n        }\n        fail() {\n            if (this.state == VisitState.started) {\n                this.state = VisitState.failed;\n                this.adapter.visitFailed(this);\n            }\n        }\n        changeHistory() {\n            var _a;\n            if (!this.historyChanged) {\n                const actionForHistory = this.location.href === ((_a = this.referrer) === null || _a === void 0 ? void 0 : _a.href) ? \"replace\" : this.action;\n                const method = this.getHistoryMethodForAction(actionForHistory);\n                this.history.update(method, this.location, this.restorationIdentifier);\n                this.historyChanged = true;\n            }\n        }\n        issueRequest() {\n            if (this.hasPreloadedResponse()) {\n                this.simulateRequest();\n            }\n            else if (this.shouldIssueRequest() && !this.request) {\n                this.request = new FetchRequest(this, FetchMethod.get, this.location);\n                this.request.perform();\n            }\n        }\n        simulateRequest() {\n            if (this.response) {\n                this.startRequest();\n                this.recordResponse();\n                this.finishRequest();\n            }\n        }\n        startRequest() {\n            this.recordTimingMetric(TimingMetric.requestStart);\n            this.adapter.visitRequestStarted(this);\n        }\n        recordResponse(response = this.response) {\n            this.response = response;\n            if (response) {\n                const { statusCode } = response;\n                if (isSuccessful(statusCode)) {\n                    this.adapter.visitRequestCompleted(this);\n                }\n                else {\n                    this.adapter.visitRequestFailedWithStatusCode(this, statusCode);\n                }\n            }\n        }\n        finishRequest() {\n            this.recordTimingMetric(TimingMetric.requestEnd);\n            this.adapter.visitRequestFinished(this);\n        }\n        loadResponse() {\n            if (this.response) {\n                const { statusCode, responseHTML } = this.response;\n                this.render(async () => {\n                    this.cacheSnapshot();\n                    if (this.view.renderPromise)\n                        await this.view.renderPromise;\n                    if (isSuccessful(statusCode) && responseHTML != null) {\n                        await this.view.renderPage(PageSnapshot.fromHTMLString(responseHTML), false, this.willRender);\n                        this.adapter.visitRendered(this);\n                        this.complete();\n                    }\n                    else {\n                        await this.view.renderError(PageSnapshot.fromHTMLString(responseHTML));\n                        this.adapter.visitRendered(this);\n                        this.fail();\n                    }\n                });\n            }\n        }\n        getCachedSnapshot() {\n            const snapshot = this.view.getCachedSnapshotForLocation(this.location) || this.getPreloadedSnapshot();\n            if (snapshot && (!getAnchor(this.location) || snapshot.hasAnchor(getAnchor(this.location)))) {\n                if (this.action == \"restore\" || snapshot.isPreviewable) {\n                    return snapshot;\n                }\n            }\n        }\n        getPreloadedSnapshot() {\n            if (this.snapshotHTML) {\n                return PageSnapshot.fromHTMLString(this.snapshotHTML);\n            }\n        }\n        hasCachedSnapshot() {\n            return this.getCachedSnapshot() != null;\n        }\n        loadCachedSnapshot() {\n            const snapshot = this.getCachedSnapshot();\n            if (snapshot) {\n                const isPreview = this.shouldIssueRequest();\n                this.render(async () => {\n                    this.cacheSnapshot();\n                    if (this.isSamePage) {\n                        this.adapter.visitRendered(this);\n                    }\n                    else {\n                        if (this.view.renderPromise)\n                            await this.view.renderPromise;\n                        await this.view.renderPage(snapshot, isPreview, this.willRender);\n                        this.adapter.visitRendered(this);\n                        if (!isPreview) {\n                            this.complete();\n                        }\n                    }\n                });\n            }\n        }\n        followRedirect() {\n            var _a;\n            if (this.redirectedToLocation && !this.followedRedirect && ((_a = this.response) === null || _a === void 0 ? void 0 : _a.redirected)) {\n                this.adapter.visitProposedToLocation(this.redirectedToLocation, {\n                    action: 'replace',\n                    response: this.response\n                });\n                this.followedRedirect = true;\n            }\n        }\n        goToSamePageAnchor() {\n            if (this.isSamePage) {\n                this.render(async () => {\n                    this.cacheSnapshot();\n                    this.adapter.visitRendered(this);\n                });\n            }\n        }\n        requestStarted() {\n            this.startRequest();\n        }\n        requestPreventedHandlingResponse(request, response) {\n        }\n        async requestSucceededWithResponse(request, response) {\n            const responseHTML = await response.responseHTML;\n            const { redirected, statusCode } = response;\n            if (responseHTML == undefined) {\n                this.recordResponse({ statusCode: SystemStatusCode.contentTypeMismatch, redirected });\n            }\n            else {\n                this.redirectedToLocation = response.redirected ? response.location : undefined;\n                this.recordResponse({ statusCode: statusCode, responseHTML, redirected });\n            }\n        }\n        async requestFailedWithResponse(request, response) {\n            const responseHTML = await response.responseHTML;\n            const { redirected, statusCode } = response;\n            if (responseHTML == undefined) {\n                this.recordResponse({ statusCode: SystemStatusCode.contentTypeMismatch, redirected });\n            }\n            else {\n                this.recordResponse({ statusCode: statusCode, responseHTML, redirected });\n            }\n        }\n        requestErrored(request, error) {\n            this.recordResponse({ statusCode: SystemStatusCode.networkFailure, redirected: false });\n        }\n        requestFinished() {\n            this.finishRequest();\n        }\n        performScroll() {\n            if (!this.scrolled) {\n                if (this.action == \"restore\") {\n                    this.scrollToRestoredPosition() || this.scrollToAnchor() || this.view.scrollToTop();\n                }\n                else {\n                    this.scrollToAnchor() || this.view.scrollToTop();\n                }\n                if (this.isSamePage) {\n                    this.delegate.visitScrolledToSamePageLocation(this.view.lastRenderedLocation, this.location);\n                }\n                this.scrolled = true;\n            }\n        }\n        scrollToRestoredPosition() {\n            const { scrollPosition } = this.restorationData;\n            if (scrollPosition) {\n                this.view.scrollToPosition(scrollPosition);\n                return true;\n            }\n        }\n        scrollToAnchor() {\n            const anchor = getAnchor(this.location);\n            if (anchor != null) {\n                this.view.scrollToAnchor(anchor);\n                return true;\n            }\n        }\n        recordTimingMetric(metric) {\n            this.timingMetrics[metric] = new Date().getTime();\n        }\n        getTimingMetrics() {\n            return Object.assign({}, this.timingMetrics);\n        }\n        getHistoryMethodForAction(action) {\n            switch (action) {\n                case \"replace\": return history.replaceState;\n                case \"advance\":\n                case \"restore\": return history.pushState;\n            }\n        }\n        hasPreloadedResponse() {\n            return typeof this.response == \"object\";\n        }\n        shouldIssueRequest() {\n            if (this.isSamePage) {\n                return false;\n            }\n            else if (this.action == \"restore\") {\n                return !this.hasCachedSnapshot();\n            }\n            else {\n                return this.willRender;\n            }\n        }\n        cacheSnapshot() {\n            if (!this.snapshotCached) {\n                this.view.cacheSnapshot().then(snapshot => snapshot && this.visitCachedSnapshot(snapshot));\n                this.snapshotCached = true;\n            }\n        }\n        async render(callback) {\n            this.cancelRender();\n            await new Promise(resolve => {\n                this.frame = requestAnimationFrame(() => resolve());\n            });\n            await callback();\n            delete this.frame;\n            this.performScroll();\n        }\n        cancelRender() {\n            if (this.frame) {\n                cancelAnimationFrame(this.frame);\n                delete this.frame;\n            }\n        }\n    }\n    function isSuccessful(statusCode) {\n        return statusCode >= 200 && statusCode < 300;\n    }\n\n    class BrowserAdapter {\n        constructor(session) {\n            this.progressBar = new ProgressBar;\n            this.showProgressBar = () => {\n                this.progressBar.show();\n            };\n            this.session = session;\n        }\n        visitProposedToLocation(location, options) {\n            this.navigator.startVisit(location, uuid(), options);\n        }\n        visitStarted(visit) {\n            visit.loadCachedSnapshot();\n            visit.issueRequest();\n            visit.changeHistory();\n            visit.goToSamePageAnchor();\n        }\n        visitRequestStarted(visit) {\n            this.progressBar.setValue(0);\n            if (visit.hasCachedSnapshot() || visit.action != \"restore\") {\n                this.showVisitProgressBarAfterDelay();\n            }\n            else {\n                this.showProgressBar();\n            }\n        }\n        visitRequestCompleted(visit) {\n            visit.loadResponse();\n        }\n        visitRequestFailedWithStatusCode(visit, statusCode) {\n            switch (statusCode) {\n                case SystemStatusCode.networkFailure:\n                case SystemStatusCode.timeoutFailure:\n                case SystemStatusCode.contentTypeMismatch:\n                    return this.reload();\n                default:\n                    return visit.loadResponse();\n            }\n        }\n        visitRequestFinished(visit) {\n            this.progressBar.setValue(1);\n            this.hideVisitProgressBar();\n        }\n        visitCompleted(visit) {\n        }\n        pageInvalidated() {\n            this.reload();\n        }\n        visitFailed(visit) {\n        }\n        visitRendered(visit) {\n        }\n        formSubmissionStarted(formSubmission) {\n            this.progressBar.setValue(0);\n            this.showFormProgressBarAfterDelay();\n        }\n        formSubmissionFinished(formSubmission) {\n            this.progressBar.setValue(1);\n            this.hideFormProgressBar();\n        }\n        showVisitProgressBarAfterDelay() {\n            this.visitProgressBarTimeout = window.setTimeout(this.showProgressBar, this.session.progressBarDelay);\n        }\n        hideVisitProgressBar() {\n            this.progressBar.hide();\n            if (this.visitProgressBarTimeout != null) {\n                window.clearTimeout(this.visitProgressBarTimeout);\n                delete this.visitProgressBarTimeout;\n            }\n        }\n        showFormProgressBarAfterDelay() {\n            if (this.formProgressBarTimeout == null) {\n                this.formProgressBarTimeout = window.setTimeout(this.showProgressBar, this.session.progressBarDelay);\n            }\n        }\n        hideFormProgressBar() {\n            this.progressBar.hide();\n            if (this.formProgressBarTimeout != null) {\n                window.clearTimeout(this.formProgressBarTimeout);\n                delete this.formProgressBarTimeout;\n            }\n        }\n        reload() {\n            window.location.reload();\n        }\n        get navigator() {\n            return this.session.navigator;\n        }\n    }\n\n    class CacheObserver {\n        constructor() {\n            this.started = false;\n        }\n        start() {\n            if (!this.started) {\n                this.started = true;\n                addEventListener(\"turbo:before-cache\", this.removeStaleElements, false);\n            }\n        }\n        stop() {\n            if (this.started) {\n                this.started = false;\n                removeEventListener(\"turbo:before-cache\", this.removeStaleElements, false);\n            }\n        }\n        removeStaleElements() {\n            const staleElements = [...document.querySelectorAll('[data-turbo-cache=\"false\"]')];\n            for (const element of staleElements) {\n                element.remove();\n            }\n        }\n    }\n\n    class FormSubmitObserver {\n        constructor(delegate) {\n            this.started = false;\n            this.submitCaptured = () => {\n                removeEventListener(\"submit\", this.submitBubbled, false);\n                addEventListener(\"submit\", this.submitBubbled, false);\n            };\n            this.submitBubbled = ((event) => {\n                if (!event.defaultPrevented) {\n                    const form = event.target instanceof HTMLFormElement ? event.target : undefined;\n                    const submitter = event.submitter || undefined;\n                    if (form) {\n                        const method = (submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute(\"formmethod\")) || form.getAttribute(\"method\");\n                        if (method != \"dialog\" && this.delegate.willSubmitForm(form, submitter)) {\n                            event.preventDefault();\n                            this.delegate.formSubmitted(form, submitter);\n                        }\n                    }\n                }\n            });\n            this.delegate = delegate;\n        }\n        start() {\n            if (!this.started) {\n                addEventListener(\"submit\", this.submitCaptured, true);\n                this.started = true;\n            }\n        }\n        stop() {\n            if (this.started) {\n                removeEventListener(\"submit\", this.submitCaptured, true);\n                this.started = false;\n            }\n        }\n    }\n\n    class FrameRedirector {\n        constructor(element) {\n            this.element = element;\n            this.linkInterceptor = new LinkInterceptor(this, element);\n            this.formInterceptor = new FormInterceptor(this, element);\n        }\n        start() {\n            this.linkInterceptor.start();\n            this.formInterceptor.start();\n        }\n        stop() {\n            this.linkInterceptor.stop();\n            this.formInterceptor.stop();\n        }\n        shouldInterceptLinkClick(element, url) {\n            return this.shouldRedirect(element);\n        }\n        linkClickIntercepted(element, url) {\n            const frame = this.findFrameElement(element);\n            if (frame) {\n                frame.delegate.linkClickIntercepted(element, url);\n            }\n        }\n        shouldInterceptFormSubmission(element, submitter) {\n            return this.shouldSubmit(element, submitter);\n        }\n        formSubmissionIntercepted(element, submitter) {\n            const frame = this.findFrameElement(element, submitter);\n            if (frame) {\n                frame.removeAttribute(\"reloadable\");\n                frame.delegate.formSubmissionIntercepted(element, submitter);\n            }\n        }\n        shouldSubmit(form, submitter) {\n            var _a;\n            const action = getAction(form, submitter);\n            const meta = this.element.ownerDocument.querySelector(`meta[name=\"turbo-root\"]`);\n            const rootLocation = expandURL((_a = meta === null || meta === void 0 ? void 0 : meta.content) !== null && _a !== void 0 ? _a : \"/\");\n            return this.shouldRedirect(form, submitter) && locationIsVisitable(action, rootLocation);\n        }\n        shouldRedirect(element, submitter) {\n            const frame = this.findFrameElement(element, submitter);\n            return frame ? frame != element.closest(\"turbo-frame\") : false;\n        }\n        findFrameElement(element, submitter) {\n            const id = (submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute(\"data-turbo-frame\")) || element.getAttribute(\"data-turbo-frame\");\n            if (id && id != \"_top\") {\n                const frame = this.element.querySelector(`#${id}:not([disabled])`);\n                if (frame instanceof FrameElement) {\n                    return frame;\n                }\n            }\n        }\n    }\n\n    class History {\n        constructor(delegate) {\n            this.restorationIdentifier = uuid();\n            this.restorationData = {};\n            this.started = false;\n            this.pageLoaded = false;\n            this.onPopState = (event) => {\n                if (this.shouldHandlePopState()) {\n                    const { turbo } = event.state || {};\n                    if (turbo) {\n                        this.location = new URL(window.location.href);\n                        const { restorationIdentifier } = turbo;\n                        this.restorationIdentifier = restorationIdentifier;\n                        this.delegate.historyPoppedToLocationWithRestorationIdentifier(this.location, restorationIdentifier);\n                    }\n                }\n            };\n            this.onPageLoad = async (event) => {\n                await nextMicrotask();\n                this.pageLoaded = true;\n            };\n            this.delegate = delegate;\n        }\n        start() {\n            if (!this.started) {\n                addEventListener(\"popstate\", this.onPopState, false);\n                addEventListener(\"load\", this.onPageLoad, false);\n                this.started = true;\n                this.replace(new URL(window.location.href));\n            }\n        }\n        stop() {\n            if (this.started) {\n                removeEventListener(\"popstate\", this.onPopState, false);\n                removeEventListener(\"load\", this.onPageLoad, false);\n                this.started = false;\n            }\n        }\n        push(location, restorationIdentifier) {\n            this.update(history.pushState, location, restorationIdentifier);\n        }\n        replace(location, restorationIdentifier) {\n            this.update(history.replaceState, location, restorationIdentifier);\n        }\n        update(method, location, restorationIdentifier = uuid()) {\n            const state = { turbo: { restorationIdentifier } };\n            method.call(history, state, \"\", location.href);\n            this.location = location;\n            this.restorationIdentifier = restorationIdentifier;\n        }\n        getRestorationDataForIdentifier(restorationIdentifier) {\n            return this.restorationData[restorationIdentifier] || {};\n        }\n        updateRestorationData(additionalData) {\n            const { restorationIdentifier } = this;\n            const restorationData = this.restorationData[restorationIdentifier];\n            this.restorationData[restorationIdentifier] = Object.assign(Object.assign({}, restorationData), additionalData);\n        }\n        assumeControlOfScrollRestoration() {\n            var _a;\n            if (!this.previousScrollRestoration) {\n                this.previousScrollRestoration = (_a = history.scrollRestoration) !== null && _a !== void 0 ? _a : \"auto\";\n                history.scrollRestoration = \"manual\";\n            }\n        }\n        relinquishControlOfScrollRestoration() {\n            if (this.previousScrollRestoration) {\n                history.scrollRestoration = this.previousScrollRestoration;\n                delete this.previousScrollRestoration;\n            }\n        }\n        shouldHandlePopState() {\n            return this.pageIsLoaded();\n        }\n        pageIsLoaded() {\n            return this.pageLoaded || document.readyState == \"complete\";\n        }\n    }\n\n    class LinkClickObserver {\n        constructor(delegate) {\n            this.started = false;\n            this.clickCaptured = () => {\n                removeEventListener(\"click\", this.clickBubbled, false);\n                addEventListener(\"click\", this.clickBubbled, false);\n            };\n            this.clickBubbled = (event) => {\n                if (this.clickEventIsSignificant(event)) {\n                    const target = (event.composedPath && event.composedPath()[0]) || event.target;\n                    const link = this.findLinkFromClickTarget(target);\n                    if (link) {\n                        const location = this.getLocationForLink(link);\n                        if (this.delegate.willFollowLinkToLocation(link, location)) {\n                            event.preventDefault();\n                            this.delegate.followedLinkToLocation(link, location);\n                        }\n                    }\n                }\n            };\n            this.delegate = delegate;\n        }\n        start() {\n            if (!this.started) {\n                addEventListener(\"click\", this.clickCaptured, true);\n                this.started = true;\n            }\n        }\n        stop() {\n            if (this.started) {\n                removeEventListener(\"click\", this.clickCaptured, true);\n                this.started = false;\n            }\n        }\n        clickEventIsSignificant(event) {\n            return !((event.target && event.target.isContentEditable)\n                || event.defaultPrevented\n                || event.which > 1\n                || event.altKey\n                || event.ctrlKey\n                || event.metaKey\n                || event.shiftKey);\n        }\n        findLinkFromClickTarget(target) {\n            if (target instanceof Element) {\n                return target.closest(\"a[href]:not([target^=_]):not([download])\");\n            }\n        }\n        getLocationForLink(link) {\n            return expandURL(link.getAttribute(\"href\") || \"\");\n        }\n    }\n\n    function isAction(action) {\n        return action == \"advance\" || action == \"replace\" || action == \"restore\";\n    }\n\n    class Navigator {\n        constructor(delegate) {\n            this.delegate = delegate;\n        }\n        proposeVisit(location, options = {}) {\n            if (this.delegate.allowsVisitingLocationWithAction(location, options.action)) {\n                if (locationIsVisitable(location, this.view.snapshot.rootLocation)) {\n                    this.delegate.visitProposedToLocation(location, options);\n                }\n                else {\n                    window.location.href = location.toString();\n                }\n            }\n        }\n        startVisit(locatable, restorationIdentifier, options = {}) {\n            this.stop();\n            this.currentVisit = new Visit(this, expandURL(locatable), restorationIdentifier, Object.assign({ referrer: this.location }, options));\n            this.currentVisit.start();\n        }\n        submitForm(form, submitter) {\n            this.stop();\n            this.formSubmission = new FormSubmission(this, form, submitter, true);\n            this.formSubmission.start();\n        }\n        stop() {\n            if (this.formSubmission) {\n                this.formSubmission.stop();\n                delete this.formSubmission;\n            }\n            if (this.currentVisit) {\n                this.currentVisit.cancel();\n                delete this.currentVisit;\n            }\n        }\n        get adapter() {\n            return this.delegate.adapter;\n        }\n        get view() {\n            return this.delegate.view;\n        }\n        get history() {\n            return this.delegate.history;\n        }\n        formSubmissionStarted(formSubmission) {\n            if (typeof this.adapter.formSubmissionStarted === 'function') {\n                this.adapter.formSubmissionStarted(formSubmission);\n            }\n        }\n        async formSubmissionSucceededWithResponse(formSubmission, fetchResponse) {\n            if (formSubmission == this.formSubmission) {\n                const responseHTML = await fetchResponse.responseHTML;\n                if (responseHTML) {\n                    if (formSubmission.method != FetchMethod.get) {\n                        this.view.clearSnapshotCache();\n                    }\n                    const { statusCode, redirected } = fetchResponse;\n                    const action = this.getActionForFormSubmission(formSubmission);\n                    const visitOptions = { action, response: { statusCode, responseHTML, redirected } };\n                    this.proposeVisit(fetchResponse.location, visitOptions);\n                }\n            }\n        }\n        async formSubmissionFailedWithResponse(formSubmission, fetchResponse) {\n            const responseHTML = await fetchResponse.responseHTML;\n            if (responseHTML) {\n                const snapshot = PageSnapshot.fromHTMLString(responseHTML);\n                if (fetchResponse.serverError) {\n                    await this.view.renderError(snapshot);\n                }\n                else {\n                    await this.view.renderPage(snapshot);\n                }\n                this.view.scrollToTop();\n                this.view.clearSnapshotCache();\n            }\n        }\n        formSubmissionErrored(formSubmission, error) {\n            console.error(error);\n        }\n        formSubmissionFinished(formSubmission) {\n            if (typeof this.adapter.formSubmissionFinished === 'function') {\n                this.adapter.formSubmissionFinished(formSubmission);\n            }\n        }\n        visitStarted(visit) {\n            this.delegate.visitStarted(visit);\n        }\n        visitCompleted(visit) {\n            this.delegate.visitCompleted(visit);\n        }\n        locationWithActionIsSamePage(location, action) {\n            const anchor = getAnchor(location);\n            const currentAnchor = getAnchor(this.view.lastRenderedLocation);\n            const isRestorationToTop = action === 'restore' && typeof anchor === 'undefined';\n            return action !== \"replace\" &&\n                getRequestURL(location) === getRequestURL(this.view.lastRenderedLocation) &&\n                (isRestorationToTop || (anchor != null && anchor !== currentAnchor));\n        }\n        visitScrolledToSamePageLocation(oldURL, newURL) {\n            this.delegate.visitScrolledToSamePageLocation(oldURL, newURL);\n        }\n        get location() {\n            return this.history.location;\n        }\n        get restorationIdentifier() {\n            return this.history.restorationIdentifier;\n        }\n        getActionForFormSubmission(formSubmission) {\n            const { formElement, submitter } = formSubmission;\n            const action = getAttribute(\"data-turbo-action\", submitter, formElement);\n            return isAction(action) ? action : \"advance\";\n        }\n    }\n\n    var PageStage;\n    (function (PageStage) {\n        PageStage[PageStage[\"initial\"] = 0] = \"initial\";\n        PageStage[PageStage[\"loading\"] = 1] = \"loading\";\n        PageStage[PageStage[\"interactive\"] = 2] = \"interactive\";\n        PageStage[PageStage[\"complete\"] = 3] = \"complete\";\n    })(PageStage || (PageStage = {}));\n    class PageObserver {\n        constructor(delegate) {\n            this.stage = PageStage.initial;\n            this.started = false;\n            this.interpretReadyState = () => {\n                const { readyState } = this;\n                if (readyState == \"interactive\") {\n                    this.pageIsInteractive();\n                }\n                else if (readyState == \"complete\") {\n                    this.pageIsComplete();\n                }\n            };\n            this.pageWillUnload = () => {\n                this.delegate.pageWillUnload();\n            };\n            this.delegate = delegate;\n        }\n        start() {\n            if (!this.started) {\n                if (this.stage == PageStage.initial) {\n                    this.stage = PageStage.loading;\n                }\n                document.addEventListener(\"readystatechange\", this.interpretReadyState, false);\n                addEventListener(\"pagehide\", this.pageWillUnload, false);\n                this.started = true;\n            }\n        }\n        stop() {\n            if (this.started) {\n                document.removeEventListener(\"readystatechange\", this.interpretReadyState, false);\n                removeEventListener(\"pagehide\", this.pageWillUnload, false);\n                this.started = false;\n            }\n        }\n        pageIsInteractive() {\n            if (this.stage == PageStage.loading) {\n                this.stage = PageStage.interactive;\n                this.delegate.pageBecameInteractive();\n            }\n        }\n        pageIsComplete() {\n            this.pageIsInteractive();\n            if (this.stage == PageStage.interactive) {\n                this.stage = PageStage.complete;\n                this.delegate.pageLoaded();\n            }\n        }\n        get readyState() {\n            return document.readyState;\n        }\n    }\n\n    class ScrollObserver {\n        constructor(delegate) {\n            this.started = false;\n            this.onScroll = () => {\n                this.updatePosition({ x: window.pageXOffset, y: window.pageYOffset });\n            };\n            this.delegate = delegate;\n        }\n        start() {\n            if (!this.started) {\n                addEventListener(\"scroll\", this.onScroll, false);\n                this.onScroll();\n                this.started = true;\n            }\n        }\n        stop() {\n            if (this.started) {\n                removeEventListener(\"scroll\", this.onScroll, false);\n                this.started = false;\n            }\n        }\n        updatePosition(position) {\n            this.delegate.scrollPositionChanged(position);\n        }\n    }\n\n    class StreamObserver {\n        constructor(delegate) {\n            this.sources = new Set;\n            this.started = false;\n            this.inspectFetchResponse = ((event) => {\n                const response = fetchResponseFromEvent(event);\n                if (response && fetchResponseIsStream(response)) {\n                    event.preventDefault();\n                    this.receiveMessageResponse(response);\n                }\n            });\n            this.receiveMessageEvent = (event) => {\n                if (this.started && typeof event.data == \"string\") {\n                    this.receiveMessageHTML(event.data);\n                }\n            };\n            this.delegate = delegate;\n        }\n        start() {\n            if (!this.started) {\n                this.started = true;\n                addEventListener(\"turbo:before-fetch-response\", this.inspectFetchResponse, false);\n            }\n        }\n        stop() {\n            if (this.started) {\n                this.started = false;\n                removeEventListener(\"turbo:before-fetch-response\", this.inspectFetchResponse, false);\n            }\n        }\n        connectStreamSource(source) {\n            if (!this.streamSourceIsConnected(source)) {\n                this.sources.add(source);\n                source.addEventListener(\"message\", this.receiveMessageEvent, false);\n            }\n        }\n        disconnectStreamSource(source) {\n            if (this.streamSourceIsConnected(source)) {\n                this.sources.delete(source);\n                source.removeEventListener(\"message\", this.receiveMessageEvent, false);\n            }\n        }\n        streamSourceIsConnected(source) {\n            return this.sources.has(source);\n        }\n        async receiveMessageResponse(response) {\n            const html = await response.responseHTML;\n            if (html) {\n                this.receiveMessageHTML(html);\n            }\n        }\n        receiveMessageHTML(html) {\n            this.delegate.receivedMessageFromStream(new StreamMessage(html));\n        }\n    }\n    function fetchResponseFromEvent(event) {\n        var _a;\n        const fetchResponse = (_a = event.detail) === null || _a === void 0 ? void 0 : _a.fetchResponse;\n        if (fetchResponse instanceof FetchResponse) {\n            return fetchResponse;\n        }\n    }\n    function fetchResponseIsStream(response) {\n        var _a;\n        const contentType = (_a = response.contentType) !== null && _a !== void 0 ? _a : \"\";\n        return contentType.startsWith(StreamMessage.contentType);\n    }\n\n    class ErrorRenderer extends Renderer {\n        async render() {\n            this.replaceHeadAndBody();\n            this.activateScriptElements();\n        }\n        replaceHeadAndBody() {\n            const { documentElement, head, body } = document;\n            documentElement.replaceChild(this.newHead, head);\n            documentElement.replaceChild(this.newElement, body);\n        }\n        activateScriptElements() {\n            for (const replaceableElement of this.scriptElements) {\n                const parentNode = replaceableElement.parentNode;\n                if (parentNode) {\n                    const element = this.createScriptElement(replaceableElement);\n                    parentNode.replaceChild(element, replaceableElement);\n                }\n            }\n        }\n        get newHead() {\n            return this.newSnapshot.headSnapshot.element;\n        }\n        get scriptElements() {\n            return [...document.documentElement.querySelectorAll(\"script\")];\n        }\n    }\n\n    class PageRenderer extends Renderer {\n        get shouldRender() {\n            return this.newSnapshot.isVisitable && this.trackedElementsAreIdentical;\n        }\n        prepareToRender() {\n            this.mergeHead();\n        }\n        async render() {\n            if (this.willRender) {\n                this.replaceBody();\n            }\n        }\n        finishRendering() {\n            super.finishRendering();\n            if (!this.isPreview) {\n                this.focusFirstAutofocusableElement();\n            }\n        }\n        get currentHeadSnapshot() {\n            return this.currentSnapshot.headSnapshot;\n        }\n        get newHeadSnapshot() {\n            return this.newSnapshot.headSnapshot;\n        }\n        get newElement() {\n            return this.newSnapshot.element;\n        }\n        mergeHead() {\n            this.copyNewHeadStylesheetElements();\n            this.copyNewHeadScriptElements();\n            this.removeCurrentHeadProvisionalElements();\n            this.copyNewHeadProvisionalElements();\n        }\n        replaceBody() {\n            this.preservingPermanentElements(() => {\n                this.activateNewBody();\n                this.assignNewBody();\n            });\n        }\n        get trackedElementsAreIdentical() {\n            return this.currentHeadSnapshot.trackedElementSignature == this.newHeadSnapshot.trackedElementSignature;\n        }\n        copyNewHeadStylesheetElements() {\n            for (const element of this.newHeadStylesheetElements) {\n                document.head.appendChild(element);\n            }\n        }\n        copyNewHeadScriptElements() {\n            for (const element of this.newHeadScriptElements) {\n                document.head.appendChild(this.createScriptElement(element));\n            }\n        }\n        removeCurrentHeadProvisionalElements() {\n            for (const element of this.currentHeadProvisionalElements) {\n                document.head.removeChild(element);\n            }\n        }\n        copyNewHeadProvisionalElements() {\n            for (const element of this.newHeadProvisionalElements) {\n                document.head.appendChild(element);\n            }\n        }\n        activateNewBody() {\n            document.adoptNode(this.newElement);\n            this.activateNewBodyScriptElements();\n        }\n        activateNewBodyScriptElements() {\n            for (const inertScriptElement of this.newBodyScriptElements) {\n                const activatedScriptElement = this.createScriptElement(inertScriptElement);\n                inertScriptElement.replaceWith(activatedScriptElement);\n            }\n        }\n        assignNewBody() {\n            if (document.body && this.newElement instanceof HTMLBodyElement) {\n                document.body.replaceWith(this.newElement);\n            }\n            else {\n                document.documentElement.appendChild(this.newElement);\n            }\n        }\n        get newHeadStylesheetElements() {\n            return this.newHeadSnapshot.getStylesheetElementsNotInSnapshot(this.currentHeadSnapshot);\n        }\n        get newHeadScriptElements() {\n            return this.newHeadSnapshot.getScriptElementsNotInSnapshot(this.currentHeadSnapshot);\n        }\n        get currentHeadProvisionalElements() {\n            return this.currentHeadSnapshot.provisionalElements;\n        }\n        get newHeadProvisionalElements() {\n            return this.newHeadSnapshot.provisionalElements;\n        }\n        get newBodyScriptElements() {\n            return this.newElement.querySelectorAll(\"script\");\n        }\n    }\n\n    class SnapshotCache {\n        constructor(size) {\n            this.keys = [];\n            this.snapshots = {};\n            this.size = size;\n        }\n        has(location) {\n            return toCacheKey(location) in this.snapshots;\n        }\n        get(location) {\n            if (this.has(location)) {\n                const snapshot = this.read(location);\n                this.touch(location);\n                return snapshot;\n            }\n        }\n        put(location, snapshot) {\n            this.write(location, snapshot);\n            this.touch(location);\n            return snapshot;\n        }\n        clear() {\n            this.snapshots = {};\n        }\n        read(location) {\n            return this.snapshots[toCacheKey(location)];\n        }\n        write(location, snapshot) {\n            this.snapshots[toCacheKey(location)] = snapshot;\n        }\n        touch(location) {\n            const key = toCacheKey(location);\n            const index = this.keys.indexOf(key);\n            if (index > -1)\n                this.keys.splice(index, 1);\n            this.keys.unshift(key);\n            this.trim();\n        }\n        trim() {\n            for (const key of this.keys.splice(this.size)) {\n                delete this.snapshots[key];\n            }\n        }\n    }\n\n    class PageView extends View {\n        constructor() {\n            super(...arguments);\n            this.snapshotCache = new SnapshotCache(10);\n            this.lastRenderedLocation = new URL(location.href);\n        }\n        renderPage(snapshot, isPreview = false, willRender = true) {\n            const renderer = new PageRenderer(this.snapshot, snapshot, isPreview, willRender);\n            return this.render(renderer);\n        }\n        renderError(snapshot) {\n            const renderer = new ErrorRenderer(this.snapshot, snapshot, false);\n            return this.render(renderer);\n        }\n        clearSnapshotCache() {\n            this.snapshotCache.clear();\n        }\n        async cacheSnapshot() {\n            if (this.shouldCacheSnapshot) {\n                this.delegate.viewWillCacheSnapshot();\n                const { snapshot, lastRenderedLocation: location } = this;\n                await nextEventLoopTick();\n                const cachedSnapshot = snapshot.clone();\n                this.snapshotCache.put(location, cachedSnapshot);\n                return cachedSnapshot;\n            }\n        }\n        getCachedSnapshotForLocation(location) {\n            return this.snapshotCache.get(location);\n        }\n        get snapshot() {\n            return PageSnapshot.fromElement(this.element);\n        }\n        get shouldCacheSnapshot() {\n            return this.snapshot.isCacheable;\n        }\n    }\n\n    class Session {\n        constructor() {\n            this.navigator = new Navigator(this);\n            this.history = new History(this);\n            this.view = new PageView(this, document.documentElement);\n            this.adapter = new BrowserAdapter(this);\n            this.pageObserver = new PageObserver(this);\n            this.cacheObserver = new CacheObserver();\n            this.linkClickObserver = new LinkClickObserver(this);\n            this.formSubmitObserver = new FormSubmitObserver(this);\n            this.scrollObserver = new ScrollObserver(this);\n            this.streamObserver = new StreamObserver(this);\n            this.frameRedirector = new FrameRedirector(document.documentElement);\n            this.drive = true;\n            this.enabled = true;\n            this.progressBarDelay = 500;\n            this.started = false;\n        }\n        start() {\n            if (!this.started) {\n                this.pageObserver.start();\n                this.cacheObserver.start();\n                this.linkClickObserver.start();\n                this.formSubmitObserver.start();\n                this.scrollObserver.start();\n                this.streamObserver.start();\n                this.frameRedirector.start();\n                this.history.start();\n                this.started = true;\n                this.enabled = true;\n            }\n        }\n        disable() {\n            this.enabled = false;\n        }\n        stop() {\n            if (this.started) {\n                this.pageObserver.stop();\n                this.cacheObserver.stop();\n                this.linkClickObserver.stop();\n                this.formSubmitObserver.stop();\n                this.scrollObserver.stop();\n                this.streamObserver.stop();\n                this.frameRedirector.stop();\n                this.history.stop();\n                this.started = false;\n            }\n        }\n        registerAdapter(adapter) {\n            this.adapter = adapter;\n        }\n        visit(location, options = {}) {\n            this.navigator.proposeVisit(expandURL(location), options);\n        }\n        connectStreamSource(source) {\n            this.streamObserver.connectStreamSource(source);\n        }\n        disconnectStreamSource(source) {\n            this.streamObserver.disconnectStreamSource(source);\n        }\n        renderStreamMessage(message) {\n            document.documentElement.appendChild(StreamMessage.wrap(message).fragment);\n        }\n        clearCache() {\n            this.view.clearSnapshotCache();\n        }\n        setProgressBarDelay(delay) {\n            this.progressBarDelay = delay;\n        }\n        get location() {\n            return this.history.location;\n        }\n        get restorationIdentifier() {\n            return this.history.restorationIdentifier;\n        }\n        historyPoppedToLocationWithRestorationIdentifier(location, restorationIdentifier) {\n            if (this.enabled) {\n                this.navigator.startVisit(location, restorationIdentifier, { action: \"restore\", historyChanged: true });\n            }\n            else {\n                this.adapter.pageInvalidated();\n            }\n        }\n        scrollPositionChanged(position) {\n            this.history.updateRestorationData({ scrollPosition: position });\n        }\n        willFollowLinkToLocation(link, location) {\n            return this.elementDriveEnabled(link)\n                && locationIsVisitable(location, this.snapshot.rootLocation)\n                && this.applicationAllowsFollowingLinkToLocation(link, location);\n        }\n        followedLinkToLocation(link, location) {\n            const action = this.getActionForLink(link);\n            this.convertLinkWithMethodClickToFormSubmission(link) || this.visit(location.href, { action });\n        }\n        convertLinkWithMethodClickToFormSubmission(link) {\n            const linkMethod = link.getAttribute(\"data-turbo-method\");\n            if (linkMethod) {\n                const form = document.createElement(\"form\");\n                form.method = linkMethod;\n                form.action = link.getAttribute(\"href\") || \"undefined\";\n                form.hidden = true;\n                if (link.hasAttribute(\"data-turbo-confirm\")) {\n                    form.setAttribute(\"data-turbo-confirm\", link.getAttribute(\"data-turbo-confirm\"));\n                }\n                const frame = this.getTargetFrameForLink(link);\n                if (frame) {\n                    form.setAttribute(\"data-turbo-frame\", frame);\n                    form.addEventListener(\"turbo:submit-start\", () => form.remove());\n                }\n                else {\n                    form.addEventListener(\"submit\", () => form.remove());\n                }\n                document.body.appendChild(form);\n                return dispatch(\"submit\", { cancelable: true, target: form });\n            }\n            else {\n                return false;\n            }\n        }\n        allowsVisitingLocationWithAction(location, action) {\n            return this.locationWithActionIsSamePage(location, action) || this.applicationAllowsVisitingLocation(location);\n        }\n        visitProposedToLocation(location, options) {\n            extendURLWithDeprecatedProperties(location);\n            this.adapter.visitProposedToLocation(location, options);\n        }\n        visitStarted(visit) {\n            extendURLWithDeprecatedProperties(visit.location);\n            if (!visit.silent) {\n                this.notifyApplicationAfterVisitingLocation(visit.location, visit.action);\n            }\n        }\n        visitCompleted(visit) {\n            this.notifyApplicationAfterPageLoad(visit.getTimingMetrics());\n        }\n        locationWithActionIsSamePage(location, action) {\n            return this.navigator.locationWithActionIsSamePage(location, action);\n        }\n        visitScrolledToSamePageLocation(oldURL, newURL) {\n            this.notifyApplicationAfterVisitingSamePageLocation(oldURL, newURL);\n        }\n        willSubmitForm(form, submitter) {\n            const action = getAction(form, submitter);\n            return this.elementDriveEnabled(form)\n                && (!submitter || this.elementDriveEnabled(submitter))\n                && locationIsVisitable(expandURL(action), this.snapshot.rootLocation);\n        }\n        formSubmitted(form, submitter) {\n            this.navigator.submitForm(form, submitter);\n        }\n        pageBecameInteractive() {\n            this.view.lastRenderedLocation = this.location;\n            this.notifyApplicationAfterPageLoad();\n        }\n        pageLoaded() {\n            this.history.assumeControlOfScrollRestoration();\n        }\n        pageWillUnload() {\n            this.history.relinquishControlOfScrollRestoration();\n        }\n        receivedMessageFromStream(message) {\n            this.renderStreamMessage(message);\n        }\n        viewWillCacheSnapshot() {\n            var _a;\n            if (!((_a = this.navigator.currentVisit) === null || _a === void 0 ? void 0 : _a.silent)) {\n                this.notifyApplicationBeforeCachingSnapshot();\n            }\n        }\n        allowsImmediateRender({ element }, resume) {\n            const event = this.notifyApplicationBeforeRender(element, resume);\n            return !event.defaultPrevented;\n        }\n        viewRenderedSnapshot(snapshot, isPreview) {\n            this.view.lastRenderedLocation = this.history.location;\n            this.notifyApplicationAfterRender();\n        }\n        viewInvalidated() {\n            this.adapter.pageInvalidated();\n        }\n        frameLoaded(frame) {\n            this.notifyApplicationAfterFrameLoad(frame);\n        }\n        frameRendered(fetchResponse, frame) {\n            this.notifyApplicationAfterFrameRender(fetchResponse, frame);\n        }\n        applicationAllowsFollowingLinkToLocation(link, location) {\n            const event = this.notifyApplicationAfterClickingLinkToLocation(link, location);\n            return !event.defaultPrevented;\n        }\n        applicationAllowsVisitingLocation(location) {\n            const event = this.notifyApplicationBeforeVisitingLocation(location);\n            return !event.defaultPrevented;\n        }\n        notifyApplicationAfterClickingLinkToLocation(link, location) {\n            return dispatch(\"turbo:click\", { target: link, detail: { url: location.href }, cancelable: true });\n        }\n        notifyApplicationBeforeVisitingLocation(location) {\n            return dispatch(\"turbo:before-visit\", { detail: { url: location.href }, cancelable: true });\n        }\n        notifyApplicationAfterVisitingLocation(location, action) {\n            markAsBusy(document.documentElement);\n            return dispatch(\"turbo:visit\", { detail: { url: location.href, action } });\n        }\n        notifyApplicationBeforeCachingSnapshot() {\n            return dispatch(\"turbo:before-cache\");\n        }\n        notifyApplicationBeforeRender(newBody, resume) {\n            return dispatch(\"turbo:before-render\", { detail: { newBody, resume }, cancelable: true });\n        }\n        notifyApplicationAfterRender() {\n            return dispatch(\"turbo:render\");\n        }\n        notifyApplicationAfterPageLoad(timing = {}) {\n            clearBusyState(document.documentElement);\n            return dispatch(\"turbo:load\", { detail: { url: this.location.href, timing } });\n        }\n        notifyApplicationAfterVisitingSamePageLocation(oldURL, newURL) {\n            dispatchEvent(new HashChangeEvent(\"hashchange\", { oldURL: oldURL.toString(), newURL: newURL.toString() }));\n        }\n        notifyApplicationAfterFrameLoad(frame) {\n            return dispatch(\"turbo:frame-load\", { target: frame });\n        }\n        notifyApplicationAfterFrameRender(fetchResponse, frame) {\n            return dispatch(\"turbo:frame-render\", { detail: { fetchResponse }, target: frame, cancelable: true });\n        }\n        elementDriveEnabled(element) {\n            const container = element === null || element === void 0 ? void 0 : element.closest(\"[data-turbo]\");\n            if (this.drive) {\n                if (container) {\n                    return container.getAttribute(\"data-turbo\") != \"false\";\n                }\n                else {\n                    return true;\n                }\n            }\n            else {\n                if (container) {\n                    return container.getAttribute(\"data-turbo\") == \"true\";\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n        getActionForLink(link) {\n            const action = link.getAttribute(\"data-turbo-action\");\n            return isAction(action) ? action : \"advance\";\n        }\n        getTargetFrameForLink(link) {\n            const frame = link.getAttribute(\"data-turbo-frame\");\n            if (frame) {\n                return frame;\n            }\n            else {\n                const container = link.closest(\"turbo-frame\");\n                if (container) {\n                    return container.id;\n                }\n            }\n        }\n        get snapshot() {\n            return this.view.snapshot;\n        }\n    }\n    function extendURLWithDeprecatedProperties(url) {\n        Object.defineProperties(url, deprecatedLocationPropertyDescriptors);\n    }\n    const deprecatedLocationPropertyDescriptors = {\n        absoluteURL: {\n            get() {\n                return this.toString();\n            }\n        }\n    };\n\n    const session = new Session;\n    const { navigator: navigator$1 } = session;\n    function start() {\n        session.start();\n    }\n    function registerAdapter(adapter) {\n        session.registerAdapter(adapter);\n    }\n    function visit(location, options) {\n        session.visit(location, options);\n    }\n    function connectStreamSource(source) {\n        session.connectStreamSource(source);\n    }\n    function disconnectStreamSource(source) {\n        session.disconnectStreamSource(source);\n    }\n    function renderStreamMessage(message) {\n        session.renderStreamMessage(message);\n    }\n    function clearCache() {\n        session.clearCache();\n    }\n    function setProgressBarDelay(delay) {\n        session.setProgressBarDelay(delay);\n    }\n    function setConfirmMethod(confirmMethod) {\n        FormSubmission.confirmMethod = confirmMethod;\n    }\n\n    var Turbo = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        navigator: navigator$1,\n        session: session,\n        PageRenderer: PageRenderer,\n        PageSnapshot: PageSnapshot,\n        start: start,\n        registerAdapter: registerAdapter,\n        visit: visit,\n        connectStreamSource: connectStreamSource,\n        disconnectStreamSource: disconnectStreamSource,\n        renderStreamMessage: renderStreamMessage,\n        clearCache: clearCache,\n        setProgressBarDelay: setProgressBarDelay,\n        setConfirmMethod: setConfirmMethod\n    });\n\n    class FrameController {\n        constructor(element) {\n            this.fetchResponseLoaded = (fetchResponse) => { };\n            this.currentFetchRequest = null;\n            this.resolveVisitPromise = () => { };\n            this.connected = false;\n            this.hasBeenLoaded = false;\n            this.settingSourceURL = false;\n            this.element = element;\n            this.view = new FrameView(this, this.element);\n            this.appearanceObserver = new AppearanceObserver(this, this.element);\n            this.linkInterceptor = new LinkInterceptor(this, this.element);\n            this.formInterceptor = new FormInterceptor(this, this.element);\n        }\n        connect() {\n            if (!this.connected) {\n                this.connected = true;\n                this.reloadable = false;\n                if (this.loadingStyle == FrameLoadingStyle.lazy) {\n                    this.appearanceObserver.start();\n                }\n                this.linkInterceptor.start();\n                this.formInterceptor.start();\n                this.sourceURLChanged();\n            }\n        }\n        disconnect() {\n            if (this.connected) {\n                this.connected = false;\n                this.appearanceObserver.stop();\n                this.linkInterceptor.stop();\n                this.formInterceptor.stop();\n            }\n        }\n        disabledChanged() {\n            if (this.loadingStyle == FrameLoadingStyle.eager) {\n                this.loadSourceURL();\n            }\n        }\n        sourceURLChanged() {\n            if (this.loadingStyle == FrameLoadingStyle.eager || this.hasBeenLoaded) {\n                this.loadSourceURL();\n            }\n        }\n        loadingStyleChanged() {\n            if (this.loadingStyle == FrameLoadingStyle.lazy) {\n                this.appearanceObserver.start();\n            }\n            else {\n                this.appearanceObserver.stop();\n                this.loadSourceURL();\n            }\n        }\n        async loadSourceURL() {\n            if (!this.settingSourceURL && this.enabled && this.isActive && (this.reloadable || this.sourceURL != this.currentURL)) {\n                const previousURL = this.currentURL;\n                this.currentURL = this.sourceURL;\n                if (this.sourceURL) {\n                    try {\n                        this.element.loaded = this.visit(expandURL(this.sourceURL));\n                        this.appearanceObserver.stop();\n                        await this.element.loaded;\n                        this.hasBeenLoaded = true;\n                    }\n                    catch (error) {\n                        this.currentURL = previousURL;\n                        throw error;\n                    }\n                }\n            }\n        }\n        async loadResponse(fetchResponse) {\n            if (fetchResponse.redirected || (fetchResponse.succeeded && fetchResponse.isHTML)) {\n                this.sourceURL = fetchResponse.response.url;\n            }\n            try {\n                const html = await fetchResponse.responseHTML;\n                if (html) {\n                    const { body } = parseHTMLDocument(html);\n                    const snapshot = new Snapshot(await this.extractForeignFrameElement(body));\n                    const renderer = new FrameRenderer(this.view.snapshot, snapshot, false, false);\n                    if (this.view.renderPromise)\n                        await this.view.renderPromise;\n                    await this.view.render(renderer);\n                    session.frameRendered(fetchResponse, this.element);\n                    session.frameLoaded(this.element);\n                    this.fetchResponseLoaded(fetchResponse);\n                }\n            }\n            catch (error) {\n                console.error(error);\n                this.view.invalidate();\n            }\n            finally {\n                this.fetchResponseLoaded = () => { };\n            }\n        }\n        elementAppearedInViewport(element) {\n            this.loadSourceURL();\n        }\n        shouldInterceptLinkClick(element, url) {\n            if (element.hasAttribute(\"data-turbo-method\")) {\n                return false;\n            }\n            else {\n                return this.shouldInterceptNavigation(element);\n            }\n        }\n        linkClickIntercepted(element, url) {\n            this.reloadable = true;\n            this.navigateFrame(element, url);\n        }\n        shouldInterceptFormSubmission(element, submitter) {\n            return this.shouldInterceptNavigation(element, submitter);\n        }\n        formSubmissionIntercepted(element, submitter) {\n            if (this.formSubmission) {\n                this.formSubmission.stop();\n            }\n            this.reloadable = false;\n            this.formSubmission = new FormSubmission(this, element, submitter);\n            const { fetchRequest } = this.formSubmission;\n            this.prepareHeadersForRequest(fetchRequest.headers, fetchRequest);\n            this.formSubmission.start();\n        }\n        prepareHeadersForRequest(headers, request) {\n            headers[\"Turbo-Frame\"] = this.id;\n        }\n        requestStarted(request) {\n            markAsBusy(this.element);\n        }\n        requestPreventedHandlingResponse(request, response) {\n            this.resolveVisitPromise();\n        }\n        async requestSucceededWithResponse(request, response) {\n            await this.loadResponse(response);\n            this.resolveVisitPromise();\n        }\n        requestFailedWithResponse(request, response) {\n            console.error(response);\n            this.resolveVisitPromise();\n        }\n        requestErrored(request, error) {\n            console.error(error);\n            this.resolveVisitPromise();\n        }\n        requestFinished(request) {\n            clearBusyState(this.element);\n        }\n        formSubmissionStarted({ formElement }) {\n            markAsBusy(formElement, this.findFrameElement(formElement));\n        }\n        formSubmissionSucceededWithResponse(formSubmission, response) {\n            const frame = this.findFrameElement(formSubmission.formElement, formSubmission.submitter);\n            this.proposeVisitIfNavigatedWithAction(frame, formSubmission.formElement, formSubmission.submitter);\n            frame.delegate.loadResponse(response);\n        }\n        formSubmissionFailedWithResponse(formSubmission, fetchResponse) {\n            this.element.delegate.loadResponse(fetchResponse);\n        }\n        formSubmissionErrored(formSubmission, error) {\n            console.error(error);\n        }\n        formSubmissionFinished({ formElement }) {\n            clearBusyState(formElement, this.findFrameElement(formElement));\n        }\n        allowsImmediateRender(snapshot, resume) {\n            return true;\n        }\n        viewRenderedSnapshot(snapshot, isPreview) {\n        }\n        viewInvalidated() {\n        }\n        async visit(url) {\n            var _a;\n            const request = new FetchRequest(this, FetchMethod.get, url, new URLSearchParams, this.element);\n            (_a = this.currentFetchRequest) === null || _a === void 0 ? void 0 : _a.cancel();\n            this.currentFetchRequest = request;\n            return new Promise(resolve => {\n                this.resolveVisitPromise = () => {\n                    this.resolveVisitPromise = () => { };\n                    this.currentFetchRequest = null;\n                    resolve();\n                };\n                request.perform();\n            });\n        }\n        navigateFrame(element, url, submitter) {\n            const frame = this.findFrameElement(element, submitter);\n            this.proposeVisitIfNavigatedWithAction(frame, element, submitter);\n            frame.setAttribute(\"reloadable\", \"\");\n            frame.src = url;\n        }\n        proposeVisitIfNavigatedWithAction(frame, element, submitter) {\n            const action = getAttribute(\"data-turbo-action\", submitter, element, frame);\n            if (isAction(action)) {\n                const { visitCachedSnapshot } = new SnapshotSubstitution(frame);\n                frame.delegate.fetchResponseLoaded = (fetchResponse) => {\n                    if (frame.src) {\n                        const { statusCode, redirected } = fetchResponse;\n                        const responseHTML = frame.ownerDocument.documentElement.outerHTML;\n                        const response = { statusCode, redirected, responseHTML };\n                        session.visit(frame.src, { action, response, visitCachedSnapshot, willRender: false });\n                    }\n                };\n            }\n        }\n        findFrameElement(element, submitter) {\n            var _a;\n            const id = getAttribute(\"data-turbo-frame\", submitter, element) || this.element.getAttribute(\"target\");\n            return (_a = getFrameElementById(id)) !== null && _a !== void 0 ? _a : this.element;\n        }\n        async extractForeignFrameElement(container) {\n            let element;\n            const id = CSS.escape(this.id);\n            try {\n                if (element = activateElement(container.querySelector(`turbo-frame#${id}`), this.currentURL)) {\n                    return element;\n                }\n                if (element = activateElement(container.querySelector(`turbo-frame[src][recurse~=${id}]`), this.currentURL)) {\n                    await element.loaded;\n                    return await this.extractForeignFrameElement(element);\n                }\n                console.error(`Response has no matching <turbo-frame id=\"${id}\"> element`);\n            }\n            catch (error) {\n                console.error(error);\n            }\n            return new FrameElement();\n        }\n        formActionIsVisitable(form, submitter) {\n            const action = getAction(form, submitter);\n            return locationIsVisitable(expandURL(action), this.rootLocation);\n        }\n        shouldInterceptNavigation(element, submitter) {\n            const id = getAttribute(\"data-turbo-frame\", submitter, element) || this.element.getAttribute(\"target\");\n            if (element instanceof HTMLFormElement && !this.formActionIsVisitable(element, submitter)) {\n                return false;\n            }\n            if (!this.enabled || id == \"_top\") {\n                return false;\n            }\n            if (id) {\n                const frameElement = getFrameElementById(id);\n                if (frameElement) {\n                    return !frameElement.disabled;\n                }\n            }\n            if (!session.elementDriveEnabled(element)) {\n                return false;\n            }\n            if (submitter && !session.elementDriveEnabled(submitter)) {\n                return false;\n            }\n            return true;\n        }\n        get id() {\n            return this.element.id;\n        }\n        get enabled() {\n            return !this.element.disabled;\n        }\n        get sourceURL() {\n            if (this.element.src) {\n                return this.element.src;\n            }\n        }\n        get reloadable() {\n            const frame = this.findFrameElement(this.element);\n            return frame.hasAttribute(\"reloadable\");\n        }\n        set reloadable(value) {\n            const frame = this.findFrameElement(this.element);\n            if (value) {\n                frame.setAttribute(\"reloadable\", \"\");\n            }\n            else {\n                frame.removeAttribute(\"reloadable\");\n            }\n        }\n        set sourceURL(sourceURL) {\n            this.settingSourceURL = true;\n            this.element.src = sourceURL !== null && sourceURL !== void 0 ? sourceURL : null;\n            this.currentURL = this.element.src;\n            this.settingSourceURL = false;\n        }\n        get loadingStyle() {\n            return this.element.loading;\n        }\n        get isLoading() {\n            return this.formSubmission !== undefined || this.resolveVisitPromise() !== undefined;\n        }\n        get isActive() {\n            return this.element.isActive && this.connected;\n        }\n        get rootLocation() {\n            var _a;\n            const meta = this.element.ownerDocument.querySelector(`meta[name=\"turbo-root\"]`);\n            const root = (_a = meta === null || meta === void 0 ? void 0 : meta.content) !== null && _a !== void 0 ? _a : \"/\";\n            return expandURL(root);\n        }\n    }\n    class SnapshotSubstitution {\n        constructor(element) {\n            this.visitCachedSnapshot = ({ element }) => {\n                var _a;\n                const { id, clone } = this;\n                (_a = element.querySelector(\"#\" + id)) === null || _a === void 0 ? void 0 : _a.replaceWith(clone);\n            };\n            this.clone = element.cloneNode(true);\n            this.id = element.id;\n        }\n    }\n    function getFrameElementById(id) {\n        if (id != null) {\n            const element = document.getElementById(id);\n            if (element instanceof FrameElement) {\n                return element;\n            }\n        }\n    }\n    function activateElement(element, currentURL) {\n        if (element) {\n            const src = element.getAttribute(\"src\");\n            if (src != null && currentURL != null && urlsAreEqual(src, currentURL)) {\n                throw new Error(`Matching <turbo-frame id=\"${element.id}\"> element has a source URL which references itself`);\n            }\n            if (element.ownerDocument !== document) {\n                element = document.importNode(element, true);\n            }\n            if (element instanceof FrameElement) {\n                element.connectedCallback();\n                element.disconnectedCallback();\n                return element;\n            }\n        }\n    }\n\n    const StreamActions = {\n        after() {\n            this.targetElements.forEach(e => { var _a; return (_a = e.parentElement) === null || _a === void 0 ? void 0 : _a.insertBefore(this.templateContent, e.nextSibling); });\n        },\n        append() {\n            this.removeDuplicateTargetChildren();\n            this.targetElements.forEach(e => e.append(this.templateContent));\n        },\n        before() {\n            this.targetElements.forEach(e => { var _a; return (_a = e.parentElement) === null || _a === void 0 ? void 0 : _a.insertBefore(this.templateContent, e); });\n        },\n        prepend() {\n            this.removeDuplicateTargetChildren();\n            this.targetElements.forEach(e => e.prepend(this.templateContent));\n        },\n        remove() {\n            this.targetElements.forEach(e => e.remove());\n        },\n        replace() {\n            this.targetElements.forEach(e => e.replaceWith(this.templateContent));\n        },\n        update() {\n            this.targetElements.forEach(e => {\n                e.innerHTML = \"\";\n                e.append(this.templateContent);\n            });\n        }\n    };\n\n    class StreamElement extends HTMLElement {\n        async connectedCallback() {\n            try {\n                await this.render();\n            }\n            catch (error) {\n                console.error(error);\n            }\n            finally {\n                this.disconnect();\n            }\n        }\n        async render() {\n            var _a;\n            return (_a = this.renderPromise) !== null && _a !== void 0 ? _a : (this.renderPromise = (async () => {\n                if (this.dispatchEvent(this.beforeRenderEvent)) {\n                    await nextAnimationFrame();\n                    this.performAction();\n                }\n            })());\n        }\n        disconnect() {\n            try {\n                this.remove();\n            }\n            catch (_a) { }\n        }\n        removeDuplicateTargetChildren() {\n            this.duplicateChildren.forEach(c => c.remove());\n        }\n        get duplicateChildren() {\n            var _a;\n            const existingChildren = this.targetElements.flatMap(e => [...e.children]).filter(c => !!c.id);\n            const newChildrenIds = [...(_a = this.templateContent) === null || _a === void 0 ? void 0 : _a.children].filter(c => !!c.id).map(c => c.id);\n            return existingChildren.filter(c => newChildrenIds.includes(c.id));\n        }\n        get performAction() {\n            if (this.action) {\n                const actionFunction = StreamActions[this.action];\n                if (actionFunction) {\n                    return actionFunction;\n                }\n                this.raise(\"unknown action\");\n            }\n            this.raise(\"action attribute is missing\");\n        }\n        get targetElements() {\n            if (this.target) {\n                return this.targetElementsById;\n            }\n            else if (this.targets) {\n                return this.targetElementsByQuery;\n            }\n            else {\n                this.raise(\"target or targets attribute is missing\");\n            }\n        }\n        get templateContent() {\n            return this.templateElement.content.cloneNode(true);\n        }\n        get templateElement() {\n            if (this.firstElementChild instanceof HTMLTemplateElement) {\n                return this.firstElementChild;\n            }\n            this.raise(\"first child element must be a <template> element\");\n        }\n        get action() {\n            return this.getAttribute(\"action\");\n        }\n        get target() {\n            return this.getAttribute(\"target\");\n        }\n        get targets() {\n            return this.getAttribute(\"targets\");\n        }\n        raise(message) {\n            throw new Error(`${this.description}: ${message}`);\n        }\n        get description() {\n            var _a, _b;\n            return (_b = ((_a = this.outerHTML.match(/<[^>]+>/)) !== null && _a !== void 0 ? _a : [])[0]) !== null && _b !== void 0 ? _b : \"<turbo-stream>\";\n        }\n        get beforeRenderEvent() {\n            return new CustomEvent(\"turbo:before-stream-render\", { bubbles: true, cancelable: true });\n        }\n        get targetElementsById() {\n            var _a;\n            const element = (_a = this.ownerDocument) === null || _a === void 0 ? void 0 : _a.getElementById(this.target);\n            if (element !== null) {\n                return [element];\n            }\n            else {\n                return [];\n            }\n        }\n        get targetElementsByQuery() {\n            var _a;\n            const elements = (_a = this.ownerDocument) === null || _a === void 0 ? void 0 : _a.querySelectorAll(this.targets);\n            if (elements.length !== 0) {\n                return Array.prototype.slice.call(elements);\n            }\n            else {\n                return [];\n            }\n        }\n    }\n\n    FrameElement.delegateConstructor = FrameController;\n    customElements.define(\"turbo-frame\", FrameElement);\n    customElements.define(\"turbo-stream\", StreamElement);\n\n    (() => {\n        let element = document.currentScript;\n        if (!element)\n            return;\n        if (element.hasAttribute(\"data-turbo-suppress-warning\"))\n            return;\n        while (element = element.parentElement) {\n            if (element == document.body) {\n                return console.warn(unindent `\n        You are loading Turbo from a <script> element inside the <body> element. This is probably not what you meant to do!\n\n        Load your application’s JavaScript bundle inside the <head> element instead. <script> elements in <body> are evaluated with each page change.\n\n        For more information, see: https://turbo.hotwired.dev/handbook/building#working-with-script-elements\n\n        ——\n        Suppress this warning by adding a \"data-turbo-suppress-warning\" attribute to: %s\n      `, element.outerHTML);\n            }\n        }\n    })();\n\n    window.Turbo = Turbo;\n    start();\n\n    exports.PageRenderer = PageRenderer;\n    exports.PageSnapshot = PageSnapshot;\n    exports.clearCache = clearCache;\n    exports.connectStreamSource = connectStreamSource;\n    exports.disconnectStreamSource = disconnectStreamSource;\n    exports.navigator = navigator$1;\n    exports.registerAdapter = registerAdapter;\n    exports.renderStreamMessage = renderStreamMessage;\n    exports.session = session;\n    exports.setConfirmMethod = setConfirmMethod;\n    exports.setProgressBarDelay = setProgressBarDelay;\n    exports.start = start;\n    exports.visit = visit;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]}
