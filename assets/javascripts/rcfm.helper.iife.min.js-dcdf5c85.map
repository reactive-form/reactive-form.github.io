{
  "version": 3,
  "sources": ["../../scripts/injections/helper.js", "../../src/ui/helper/installer/helpers/store.js", "../../src/ui/helper/installer/installer.js", "../../src/ui/helper/installer/has.js", "../../src/ui/helper/installer/install.js", "../../src/ui/helper/installer/use.js", "../../src/ui/helper/installer/try.js", "../../src/ui/helper/base/get-prop.js", "../../src/ui/helper/base/join-class.js", "../../src/ui/helper/components/locales/index.js", "../../src/ui/helper/components/locales/en.js", "../../src/ui/helper/components/locales/zh.js", "../../src/ui/helper/components/button.js", "../../src/ui/helper/components/tabs.js", "../../src/ui/helper/components/form/field.js", "../../src/ui/helper/components/form/forms.js", "../../src/ui/helper/components/form/data-types.js", "../../src/ui/helper/components/form/index.js", "../../src/ui/helper/components/highlight.js", "../../src/ui/helper/sections/locales/index.js", "../../src/ui/helper/sections/locales/en.js", "../../src/ui/helper/sections/locales/zh.js", "../../src/ui/helper/sections/member/member.js", "../../src/ui/helper/sections/member/prop.js", "../../src/ui/helper/sections/member/condition.js", "../../src/ui/helper/sections/member/calculation.js", "../../src/ui/helper/sections/member/options.js", "../../src/ui/helper/sections/member/validation.js", "../../src/ui/helper/sections/member/index.js", "../../src/ui/helper/sections/field.js", "../../src/ui/helper/sections/subform.js", "../../src/ui/helper/index.js"],
  "sourcesContent": ["(() => {\n  const r = window.require\n  window.require = (pkg) => r && r(pkg) || ({\n    'rcfm': window.ReactiveForm,\n    'rcfm/helper': { UI: window.ReactiveForm.UI },\n  })[pkg]\n})()\n", "export default function store(installer = {}, options = {}) {\n  return installer._installer || (installer._installer = { ...options })\n}\n", "import store from './helpers/store'\n\n\n\nclass Installer {\n\n  static exceptions = {\n    CONFLICTED_NAME: 'UI_INSTALLER_CONFLICTED_NAME',\n    NOT_FOUND: 'UI_INSTALLER_TARGET_NOT_FOUND',\n  }\n\n  constructor() {\n    store(this, { installed: {} })\n  }\n\n  static create(...args) { return new Installer(...args) }\n\n}\n\n\n\nexport { Installer, Installer as default }\n", "import Installer from './installer'\nimport store from './helpers/store'\n\n\n\nInstaller.prototype.has = function(name = '') {\n  let installed = store(this).installed\n  return name in installed\n}\n", "import { Exception, Type } from 'rcfm'\nimport Installer from './installer'\nimport store from './helpers/store'\n\n\n\n// @param {Object} options\n// @prop {string} options.name - An unique name\n// @prop {Function} options.C(c)omponent | options.render - The render function.\n// @prop {boolean} [options.force = false] - If setted to true, replaces existed\n// component/section instead of raising an `CONFLICTED_NAME` exception.\n// @returns {undefined}\nInstaller.prototype.install = function(options = {}) {\n  let name = options.name\n  let render = options.Component || options.component || options.render\n  let force = 'force' in options ? options.force : false\n  Type.mustbe.nonblankString(name, 'UI installer name')\n  Type.mustbe.boolean(force, 'UI installer force option')\n  // [TODO] Update doc & test specs\n  // Type.mustbe.function(render, 'UI installer component')\n  Type.mustWithin({ type: Type.get(render), types: ['Function', 'Object'] })\n  let installed = store(this).installed\n  !force && name in installed && Exception.raise({\n    type: Installer.exceptions.CONFLICTED_NAME,\n    message: `Componet '${name}' has been occupied.\n             Please set 'force' to true if the existed\n             component should be replaced.`,\n  })\n  installed[name] = { name, force, render }\n}\n", "import { Exception } from 'rcfm'\nimport Installer from './installer'\nimport store from './helpers/store'\n\n\n\nInstaller.prototype.use = function(name = '') {\n  let installed = store(this).installed\n  if (name in installed) { return installed[name].render }\n  Exception.raise({\n    type: Installer.exceptions.NOT_FOUND,\n    message: `Component '${name}' is not installed.`,\n  })\n}\n", "import { Type, Exception } from 'rcfm'\nimport Installer from './installer'\nimport './use'\n\n\n\nInstaller.prototype.try = function(names = []) {\n  Type.isnt.array(names) && (names = [names])\n  let matched = null\n  if (!names.length) { return matched = null }\n  names.some((name) => {\n    try {\n      matched = this.use(name)\n      return true\n    } catch (e) {\n      matched = null\n      return false\n    }\n  })\n  if (matched) { return matched }\n  let msg = `None of Component '${JSON.stringify(names)}' is installed.`\n  Exception.raise({ type: Installer.exceptions.NOT_FOUND, message: msg })\n}\n", "import { Context, Type, Struct, Exception } from 'rcfm'\n\n\n\nfunction validateReactive(prop) {\n  Context.mustbeContext(prop)\n}\n\nfunction validateMember(prop) {\n  Type.mustbe.object(prop)\n  Type.mustbe.nonblankString(prop.id)\n}\n\nfunction validateException(prop) {\n  Exception.mustbeException(prop)\n}\n\n\n\nfunction getProp(props = {}, name = '', options = {}) {\n  const UNDEFINED = [undefined, null]\n  let defaultVal = 'default' in options ? options.default : undefined\n  let dataType = 'dataType' in options ? options.dataType : null\n  let required = 'required' in options ? options.required : false\n  let customValidate = 'validate' in options ? options.validate : null\n  let transform = 'transform' in options ? options.transform : null\n  // Gets prop value [TODO] test\n  let prop = (() => {\n    let types = Type.is.array(dataType) ? dataType : [dataType]\n    if (types.every((t) => t === 'Boolean')) {\n      return name in props ? props[name] !== false : defaultVal\n    }\n    return UNDEFINED.includes(props[name]) ? defaultVal : props[name]\n  })()\n  // Executes custom transformer [TODO] test\n  transform && (prop = (() => {\n    if (Type.is.function(transform)) { return transform(prop) }\n    return prop in transform ? transform[prop] : prop\n  })())\n  // Raises a required exception\n  if (required && UNDEFINED.includes(prop)) {\n    Exception.raise(`${name} is required.`)\n  }\n  // Doesn't validate prop value if it's not defined.\n  if (UNDEFINED.includes(prop)) { return prop }\n  // Validates prop value if defined\n  if (dataType) {\n    Type.mustWithin({\n      type: Type.get(prop), types: dataType\n    }, `Data type of \"${name}\" must be within ${JSON.stringify(dataType)}`)\n  }\n  if (name === 'reactive') { validateReactive(prop) }\n  if (name === 'member') { validateMember(prop) }\n  if (name === 'exception') { validateException(prop) }\n  if (customValidate) { customValidate(prop) }\n  return prop\n}\n\nfunction getProps(props = {}, pairs = {}) {\n  let names = Object.keys(pairs)\n  return Object.assign({\n    customProps: Struct.object.exclude(props, names),\n  }, Struct.object.from(\n    names.map((name) => [name, getProp(props, name, pairs[name])])\n  ))\n}\n\n\n\nexport {\n  getProp,\n  getProp as default,\n  getProps,\n}\n", "import { Type } from 'rcfm'\n\n\n\nexport default function joinClass(...definations) {\n  return definations.map((def) => {\n    let rootClass = Type.is.object(def) ? def.root || '' : ''\n    let classes = Type.is.object(def) ? [def.klass] : [def]\n    classes = classes.flat(Infinity).filter((klass) => klass)\n    return classes.map((klass) => rootClass ? `${rootClass}-${klass}` : klass)\n  }).flat(Infinity).join(' ')\n}\n", "import { I18n } from 'rcfm'\nimport EN from './en'\nimport ZH from './zh'\n\n\nI18n.global.define({\n  en: { component: EN },\n  zh: { component: ZH },\n})\n\n\n\nexport default I18n.global\n", "const EN = {\n\n  form: {\n    boolean: {\n      option: {\n        true: 'Yes',\n        false: 'No',\n      },\n    },\n  },\n\n}\n\n\n\nexport default EN\n", "const ZH = {\n\n  form: {\n    boolean: {\n      option: {\n        true: '\u662F',\n        false: '\u5426',\n      },\n    },\n  },\n\n}\n\n\n\nexport default ZH\n", "import { Type } from 'rcfm'\nimport { getProps } from '../base/get-prop'\nimport joinClass from '../base/join-class'\n\n\n\nconst ButtonHelper = (() => {\n\n  function collectProps(props = {}) {\n    let properties = getProps(props, {\n      type: { dataType: 'String', default: 'button' },\n      variant: { dataType: 'String', default: '' },\n      color: { dataType: 'String', default: 'primary' },\n      size: { dataType: 'String', default: '' },\n      tabindex: { dataType: 'String', default: ''},\n      onClick: { dataType: 'Function', default: null },\n      fluid: { dataType: 'Boolean', default: false },\n      circle: { dataType: 'Boolean', default: false },\n      active: { dataType: 'Boolean', default: false },\n      disabled: { dataType: 'Boolean', default: false },\n      icon: { dataType: ['String', 'Boolean'], transform: { '': true } },\n      topIcon: { dataType: ['String', 'Boolean'], transform: { '': true } },\n      leftIcon: { dataType: ['String', 'Boolean'], transform: { '': true } },\n      rightIcon: { dataType: ['String', 'Boolean'], transform: { '': true } },\n    })\n    if (properties.disabled) { properties.onClick = null }\n    return properties\n  }\n\n  function joinWrapperClass(props = {}) {\n    let {\n      variant, color, size, circle, active, fluid,\n      icon, topIcon, leftIcon, rightIcon,\n    } = collectProps(props)\n    return joinClass({\n      root: 'rcfm-component-btn',\n      klass: [\n        variant ? `${variant}-${color}` : `${color}`,\n        size ? size : '', fluid ? 'fluid' : '',\n        circle ? 'circle' : '', active ? 'active' : '',\n      ],\n    }, {\n      root: 'rcfm-component-btn-ico',\n      klass: (() => {\n        if (icon) { return 'middle' }\n        if (topIcon) { return 'top' }\n        if (leftIcon) { return 'left' }\n        if (rightIcon) { return 'right' }\n      })(),\n    }, props.className)\n  }\n\n  return { joinWrapperClass, getProps: collectProps }\n\n})()\n\n\n\nconst ButtonGroupHelper = (() => {\n\n  function collectProps(props = {}) {\n    return getProps(props, {\n      fluid: { dataType: 'Boolean', default: false },\n      vertical: { dataType: 'Boolean', default: false },\n    })\n  }\n\n  function joinWrapperClass(props = {}) {\n    let { vertical, fluid } = collectProps(props)\n    return joinClass({\n      root: 'rcfm-component-btngroup',\n      klass: [\n        vertical ? 'y' : 'x',\n        fluid ? 'fluid' : '',\n      ],\n    }, props.className)\n  }\n\n  return { joinWrapperClass, getProps: collectProps }\n\n})()\n\n\n\nexport default {\n  ...ButtonHelper,\n  Group: ButtonGroupHelper,\n}\n", "import { Type, Struct } from 'rcfm'\nimport { getProps } from '../base/get-prop'\nimport joinClass from '../base/join-class'\n\n\n\nconst Helper = (() => {\n\n  function collectProps(props = {}) {\n    let properties = getProps(props, {\n      title: { dataType: 'String', default: '' },\n      labels: { dataType: 'Array', default: [] },\n      activeIndex: {\n        dataType: 'Number', default: 0,\n        validate(val) { Type.mustbe.integer(val) },\n      },\n      onSwitch: { dataType: 'Function', default: null },\n    })\n    let [minIndex, maxIndex] = [0, properties.labels.length - 1]\n    if (properties.activeIndex > maxIndex) { properties.activeIndex = maxIndex }\n    if (properties.activeIndex < minIndex) { properties.activeIndex = minIndex }\n    return properties\n  }\n\n  return { getProps: collectProps }\n\n})()\n\n\n\nexport default Helper\n", "import { Type } from 'rcfm'\nimport { getProps } from '../../base/get-prop'\nimport joinClass from '../../base/join-class'\n\n\n\nconst FieldHelper = (() => {\n\n  function collectProps(props = {}) {\n    let properties = getProps(props, {\n      required: { dataType: 'Boolean', default: false },\n      size: { dataType: 'String', default: '' },\n      label: { dataType: 'String', default: '' },\n      hint: { dataType: 'String', default: '' },\n      error: { dataType: ['String', 'Array'], default: '' },\n    })\n    properties.error = (() => {\n      let errors = properties.error\n      Type.isnt.array(errors) && (errors = [errors])\n      return errors.flat(Infinity).filter((e) => e)\n        .map((e) => e.message || e.name || e)\n    })()\n    return properties\n  }\n\n  function joinWrapperClass(props = {}) {\n    let { size } = collectProps(props)\n    return joinClass('rcfm-component-fmfield', {\n      root: 'rcfm-component-fmfield',\n      klass: [size ? size : ''],\n    }, 'rcfm-fmtag', props.className)\n  }\n\n\n  function joinLabelClass(props = {}) {\n    let { size, required } = collectProps(props)\n    return joinClass('rcfm-component-fmlabel', {\n      root: 'rcfm-component-fmlabel',\n      klass: [size ? size : '', required ? 'required' : ''],\n    }, 'rcfm-fmtag')\n  }\n\n  function joinHintClass(props = {}) {\n    let { size } = collectProps(props)\n    return joinClass('rcfm-component-fmhint',{\n      root: 'rcfm-component-fmhint',\n      klass: [size ? size : ''],\n    }, 'rcfm-fmtag')\n  }\n\n  function joinErrorClass(props = {}) {\n    let { size } = collectProps(props)\n    return joinClass('rcfm-component-fmerror',{\n      root: 'rcfm-component-fmerror',\n      klass: [size ? size : ''],\n    }, 'rcfm-fmtag')\n  }\n\n  return {\n    getProps: collectProps,\n    joinWrapperClass, joinLabelClass,\n    joinHintClass, joinErrorClass,\n  }\n\n})()\n\n\n\nexport default FieldHelper\n", "import { Type, Struct } from 'rcfm'\nimport { getProp, getProps } from '../../base/get-prop'\nimport joinClass from '../../base/join-class'\n\n\n\nconst COMMON_PROPS = {\n  id: { dataType: 'String', default: '' },\n  name: { dataType: 'String', default: '' },\n  invalid: { dataType: 'Boolean', default: false },\n  disabled: { dataType: 'Boolean', default: false },\n  readonly: { dataType: 'Boolean', default: false },\n  size: { dataType: 'String', default: '' },\n  onChange: { dataType: 'Function', default: null },\n}\n\nfunction joinModifierClass(props = {}) {\n  let { size, invalid } = getProps(props, COMMON_PROPS)\n  return joinClass({\n    root: 'rcfm-component-fm',\n    klass: [size ? size : '', invalid ? 'invalid' : ''],\n  }, 'rcfm-fmtag', props.className)\n}\n\n\n\nconst TextInputHelper = (() => {\n\n  function collectProps(props = {}) {\n    return getProps(props, {\n      ...COMMON_PROPS,\n      type: { dataType: 'String', default: '' },\n      value: { default: '' },\n      placeholder: { dataType: 'String', default: '' },\n      multiline: { dataType: 'Boolean', default: false },\n    })\n  }\n\n  return { getProps: collectProps, joinModifierClass }\n\n})()\n\n\n\nconst NumberInputHelper = (() => {\n\n  function collectProps(props = {}) {\n    return getProps(props, {\n      ...COMMON_PROPS,\n      value: { default: NaN },\n      placeholder: { dataType: 'String', default: '' },\n    })\n  }\n\n  return { getProps: collectProps, joinModifierClass }\n\n})()\n\n\n\nconst RadiosHelper = (() => {\n\n  function collectProps(props = {}) {\n    return getProps(props, {\n      ...COMMON_PROPS,\n      value: { default: '' },\n      options: { dataType: 'Array', required: true, validate(val) {\n        val.forEach((option) => {\n          Type.mustbe.object(option)\n        })\n      } },\n    })\n  }\n\n  return { getProps: collectProps, joinModifierClass }\n\n})()\n\n\n\nconst CheckboxesHelper = (() => {\n\n  function collectProps(props = {}) {\n    let properties = getProps(props, {\n      ...COMMON_PROPS,\n      value: { default: [] },\n      options: { dataType: 'Array', required: true, validate(val) {\n        val.forEach((option) => {\n          Type.mustbe.object(option)\n        })\n      } },\n    })\n    if (Type.isnt.array(properties.value)) { properties.value = [] }\n    return properties\n  }\n\n  function mutateValue(options = {}) {\n    let value = options.value.slice()\n    let action = 'insert' in options ? 'insert' : 'remove'\n    let target = options[action]\n    if (action === 'insert') { value.push(target) }\n    if (action === 'remove') { value = value.filter((v) => v !== target) }\n    return value\n  }\n\n  return { getProps: collectProps, joinModifierClass, mutateValue }\n\n})()\n\n\n\nconst SingleSelectHelper = (() => {\n\n  function collectProps(props = {}) {\n    return getProps(props, {\n      ...COMMON_PROPS,\n      value: { default: '' },\n      placeholder: { dataType: 'String', default: '' },\n      includeblank: { dataType: 'Boolean', default: false },\n      options: { dataType: 'Array', required: true, validate(val) {\n        val.forEach((option) => {\n          Type.mustbe.object(option)\n        })\n      } },\n    })\n  }\n\n  function findLabel(options = {}) {\n    return options.options.find((o) => o.value === options.value)?.label || ''\n  }\n\n  return { getProps: collectProps, joinModifierClass, findLabel }\n\n})()\n\n\n\nconst MultipleSelectHelper = (() => {\n\n  function collectProps(props = {}) {\n    let properties = getProps(props, {\n      ...COMMON_PROPS,\n      value: { default: [] },\n      options: { dataType: 'Array', required: true, validate(val) {\n        val.forEach((option) => {\n          Type.mustbe.object(option)\n        })\n      } },\n    })\n    if (Type.isnt.array(properties.value)) { properties.value = [] }\n    return properties\n  }\n\n  return { getProps: collectProps, joinModifierClass }\n\n})()\n\n\n\nexport {\n  TextInputHelper,\n  NumberInputHelper,\n  RadiosHelper,\n  CheckboxesHelper,\n  SingleSelectHelper,\n  MultipleSelectHelper,\n}\n", "import i18n from '../locales'\n\n\n\nconst BooleanHelper = (() => {\n\n    function getOptions() {\n      let i18nSegment = 'component.form.boolean.option'\n      return [\n        { value: true, label: i18n.t(`${i18nSegment}.true`) },\n        { value: false, label: i18n.t(`${i18nSegment}.false`) },\n      ]\n    }\n\n    return { getOptions }\n\n})()\n\n\n\nconst ObjectHelper = (() => {\n\n  function decorateValue(value) {\n    return stringify(value)\n  }\n\n  function decorateOnChange(onChange) {\n    return function (value) { onChange && onChange(parse(value)) }\n  }\n\n  function stringify(value) {\n    if ([null, undefined, NaN].includes(value)) { return '' }\n    if (typeof value === 'string') { return value }\n    try { return JSON.stringify(value) } catch (e) { return String(value) }\n  }\n\n  function parse(value) {\n    if (typeof value !== 'string') { return value }\n    if (value.match(/^\\s*$/)) { return null }\n    if (value === 'undefined') { return undefined }\n    if (value === 'NaN') { return NaN }\n    if (value.match(/-\\s*NaN/)) { return NaN }\n    if (value === 'Infinity') { return Infinity }\n    if (value.match(/-\\s*Infinity/)) { return -Infinity }\n    try { return JSON.parse(value) } catch (e) { return value }\n  }\n\n  return { decorateValue, decorateOnChange }\n\n})()\n\n\n\nexport {\n  BooleanHelper,\n  ObjectHelper,\n}\n", "import FieldHelper from './field'\nimport {\n  TextInputHelper,\n  NumberInputHelper,\n  RadiosHelper,\n  CheckboxesHelper,\n  SingleSelectHelper,\n  MultipleSelectHelper,\n} from './forms'\nimport {\n  BooleanHelper,\n  ObjectHelper,\n} from './data-types'\n\n\n\nconst Helper = {\n  Field: FieldHelper,\n  TextInput: TextInputHelper,\n  NumberInput: NumberInputHelper,\n  Radios: RadiosHelper,\n  Checkboxes: CheckboxesHelper,\n  SingleSelect: SingleSelectHelper,\n  MultipleSelect: MultipleSelectHelper,\n  String: TextInputHelper,\n  Number: NumberInputHelper,\n  Boolean: BooleanHelper,\n  Object: ObjectHelper,\n}\n\n\n\nexport default Helper\n", "import { Type } from 'rcfm'\nimport { getProps } from '../base/get-prop'\nimport joinClass from '../base/join-class'\n\n\n\nconst Helper = (() => {\n\n  function collectProps(props = {}) {\n    let properties = getProps(props, {\n      type: { dataType: 'String', default: 'info' },\n      hint: { dataType: ['String', 'Array'], default: [] },\n      hintPosition: { dataType: 'String', default: 'bottom' },\n      on: { dataType: 'Boolean', default: true },\n    })\n    properties.hint = (() => {\n      let hints = properties.hint\n      Type.isnt.array(hints) && (hints = [hints])\n      return hints.flat(Infinity).filter((e) => e)\n        .map((e) => e.message || e.name || e)\n    })()\n    return properties\n  }\n\n  function joinWrapperClass(props = {}) {\n    let { type, on } = collectProps(props)\n    return joinClass({\n      root: 'rcfm-component-highlight',\n      klass: [type, on ? '' : 'off'],\n    }, props.className)\n  }\n\n  return { joinWrapperClass, getProps: collectProps }\n\n})()\n\n\n\nexport default Helper\n", "import { I18n } from 'rcfm'\nimport EN from './en'\nimport ZH from './zh'\n\n\n\nI18n.global.define({\n  en: { section: EN },\n  zh: { section: ZH },\n})\n\n\n\nexport default I18n.global\n", "const EN = {\n  member: {\n    noProviders: 'No referenceable objects',\n    prop: {\n      always: 'Always',\n      conditional: 'Conditional',\n      condition: {\n        elseBranch: { resultTitle: 'Else' },\n        whenBranch: {\n          title: 'When',\n          resultTitle: 'Then',\n          delete: 'Delete Branch',\n          add: 'New Branch',\n          logics: { and: 'And', or: 'Or' },\n        },\n      },\n      options: {\n        each: {\n          labelLabel: 'Label',\n          valueLabel: 'Value',\n        },\n      },\n    },\n    type: {\n      fieldset: {\n        label: 'Fieldset',\n      },\n      textField: {\n        label: 'Text Field',\n      },\n      multilineTextField: {\n        label: 'Multiline Text',\n      },\n      numberField: {\n        label: 'Number Field',\n      },\n      radioField: {\n        label: 'Radio Field',\n      },\n      checkboxField: {\n        label: 'Checkbox Field',\n      },\n      singleSelectField: {\n        label: 'Single Select',\n      },\n      multipleSelectField: {\n        label: 'Multiple Select',\n      },\n      subform: {\n        label: 'Subform',\n      },\n      subformFieldset: {\n        label: 'Subform Fieldset',\n      },\n      subformTextField: {\n        label: 'Subform Text Field',\n      },\n      subformMultilineTextField: {\n        label: 'Subform Multiline Text',\n      },\n      subformNumberField: {\n        label: 'Subform Number Field',\n      },\n      subformRadioField: {\n        label: 'Subform Radio Field',\n      },\n      subformCheckboxField: {\n        label: 'Subform Checkbox Field',\n      },\n      subformSingleSelectField: {\n        label: 'Subform Single Select',\n      },\n      subformMultipleSelectField: {\n        label: 'Subform Multiple Select',\n      },\n    },\n  },\n  subform: {\n    fieldset: {\n      insert: 'Insert A New Set',\n      remove: 'Delete The Above Set',\n    },\n  },\n}\n\n\n\nexport default EN\n", "const ZH = {\n  member: {\n    noProviders: '\u6CA1\u6709\u53EF\u88AB\u5F15\u7528\u7684\u5BF9\u8C61',\n    prop: {\n      always: '\u603B\u662F',\n      conditional: '\u6309\u6761\u4EF6',\n      condition: {\n        elseBranch: { resultTitle: '\u5426\u5219' },\n        whenBranch: {\n          title: '\u5F53',\n          resultTitle: '\u5219',\n          delete: '\u5220\u9664\u5206\u652F',\n          add: '\u65B0\u589E\u5206\u652F',\n          logics: { and: '\u4E14', or: '\u6216' },\n        },\n      },\n      options: {\n        each: {\n          labelLabel: '\u9009\u9879\u6587\u5B57',\n          valueLabel: '\u9009\u9879\u503C',\n        },\n      },\n    },\n    type: {\n      fieldset: {\n        label: '\u8F93\u5165\u9879\u96C6\u5408',\n      },\n      textField: {\n        label: '\u5355\u884C\u6587\u672C',\n      },\n      multilineTextField: {\n        label: '\u591A\u884C\u6587\u672C',\n      },\n      numberField: {\n        label: '\u6570\u5B57\u8F93\u5165',\n      },\n      radioField: {\n        label: '\u5355\u9879\u9009\u62E9',\n      },\n      checkboxField: {\n        label: '\u591A\u9879\u9009\u62E9',\n      },\n      singleSelectField: {\n        label: '\u4E0B\u62C9\u5355\u9009',\n      },\n      multipleSelectField: {\n        label: '\u4E0B\u62C9\u591A\u9009',\n      },\n      subform: {\n        label: '\u5B50\u8868\u5355',\n      },\n      subformFieldset: {\n        label: '\u5B50\u8868\u5355\u8F93\u5165\u9879\u96C6\u5408',\n      },\n      subformTextField: {\n        label: '\u5B50\u8868\u5355\u5355\u884C\u6587\u672C',\n      },\n      subformMultilineTextField: {\n        label: '\u5B50\u8868\u5355\u591A\u884C\u6587\u672C',\n      },\n      subformNumberField: {\n        label: '\u5B50\u8868\u5355\u6570\u5B57\u8F93\u5165',\n      },\n      subformRadioField: {\n        label: '\u5B50\u8868\u5355\u5355\u9879\u9009\u62E9',\n      },\n      subformCheckboxField: {\n        label: '\u5B50\u8868\u5355\u591A\u9879\u9009\u62E9',\n      },\n      subformSingleSelectField: {\n        label: '\u5B50\u8868\u5355\u4E0B\u62C9\u5355\u9009',\n      },\n      subformMultipleSelectField: {\n        label: '\u5B50\u8868\u5355\u4E0B\u62C9\u591A\u9009',\n      },\n    },\n  },\n  subform: {\n    fieldset: {\n      insert: '\u63D2\u5165\u65B0\u7684\u4E00\u7EC4',\n      remove: '\u5220\u9664\u4E0A\u9762\u4E00\u7EC4',\n    },\n  },\n}\n\n\n\nexport default ZH\n", "import { Exception, Form } from 'rcfm'\nimport { getProps } from '../../base/get-prop'\nimport i18n from '../locales'\n\n\n\nconst MemberHelper = (() => {\n\n  function collectProps(props = {}) {\n    return getProps(props, {\n      reactive: { required: true }, member: { required: true },\n      onAction: { dataType: 'Function', default: onAction },\n    })\n  }\n\n  function errorMessages(props = {}) {\n    let { reactive, member, errors } = getProps(props, {\n      reactive: { required: true }, member: { required: true },\n      errors: { dataType: 'Object', default: {} },\n    })\n    return Object.keys(errors).map((prop) => {\n      let label = reactive.schema.for({ id: member.id, prop }).label\n      return errors[prop].map((e) => {\n        return label ? `${label}: ${e.message}` : e.message\n      })\n    })\n  }\n\n  function onAction(action = {}) {\n    if (action.action === 'delete') {\n      let { reactive, id } = getProps(action, {\n        reactive: { required: true }, id: { required: true },\n      })\n      return reactive.delete({ id })\n    } else if (action.action === 'update') {\n      let { reactive, id, prop, value } = getProps(action, {\n        reactive: { required: true }, id: { required: true },\n        prop: { required: true }, value: { required: false },\n      })\n      return reactive.set({ id, prop, value })\n    } else if (action.action === 'add') {\n      let { reactive, parentId, props } = getProps(action, {\n        reactive: { required: true }, parentId: { required: true },\n        props: { dataType: 'Object', required: true },\n      })\n      return reactive.add({ parentId, props })\n    } else {\n      Exception.raise({\n        type: 'MEMBER_UNSUPPORTED_ACTION',\n        message: `Unsupported action ${action}.`,\n      })\n    }\n  }\n\n  function getChildTypes(props = {}) {\n    let { reactive, member } = getProps(props, {\n      reactive: { required: true }, member: { required: true },\n    })\n    let type = reactive.get({ id: member.id, prop: 'type' })\n    let childGroup =(Form.group(`${type}Child`) || []).map((i) => i.type)\n    return makeChildTypes(childGroup)\n  }\n\n  function makeChildTypes(types = []) {\n    return types.map((type) => {\n      let camelType = type[0].toLowerCase() + type.slice(1)\n      return { type, label: i18n.t(`section.member.type.${camelType}.label`) }\n    })\n  }\n\n  return { getProps: collectProps, errorMessages, onAction, getChildTypes }\n\n})()\n\n\n\nexport default MemberHelper\n", "import { Type } from 'rcfm'\nimport { getProps } from '../../base/get-prop'\nimport MemberHelper from './member'\n\n\n\nconst PropHelper = (() => {\n\n  function collectProps(props = {}) {\n    return getProps(props, {\n      reactive: { required: true },\n      onAction: { dataType: 'Function', default: MemberHelper.onAction },\n      member: {\n        required: true,\n        validate(val) { Type.mustbe.nonblankString(val.prop, 'Member prop') },\n      },\n    })\n  }\n\n  function isSchemable(props = {}) {\n    let { reactive, member } = collectProps(props)\n    return reactive.schema.for(member).schemable\n  }\n\n  function isCondition(props = {}) {\n    let { reactive } = getProps(props, { reactive: { required: true } })\n    const Condition = reactive.schema.constructor.Condition\n    return Condition.isCondition(props.value)\n  }\n\n  function getDefault(props = {}) {\n    let { reactive, member } = collectProps(props)\n    if (!props.conditional) { return reactive.schema.for(member).default }\n    return [\n      { when: [{}], then: reactive.schema.for(member).default },\n      { else: reactive.schema.for(member).default },\n    ]\n  }\n\n  function getType(props = {}) {\n    let { reactive, member } = collectProps(props)\n    let { validation } = reactive.schema.for(member)\n    if (!validation) { return 'Object' }\n    return validation.find((v) => 'dataType' in v)?.dataType || 'Object'\n  }\n\n  function isRequired(props = {}) {\n    let { reactive, member } = collectProps(props)\n    let { validation } = reactive.schema.for(member)\n    if (!validation) { return false }\n    return validation.find((v) => 'presence' in v) ? true : false\n  }\n\n  return {\n    getProps: collectProps, getType,\n    getDefault, isSchemable, isCondition, isRequired,\n  }\n\n})()\n\n\n\nexport default PropHelper\n\n", "import { Type, Form } from 'rcfm'\nimport { getProps } from '../../base/get-prop'\nimport i18n from '../locales/'\n\n\n\nconst ConditionHelper = (() => {\n\n  function genResult(defaultResult) {\n    return Type.is.function(defaultResult) ? defaultResult() : defaultResult\n  }\n\n  function mutateBranch(mutation = {}, branches = {}, defaultResult) {\n    let elseBranch = { ...branches.else }\n    let whenBranches = branches.whens.slice()\n    let { target, action, branchIndex, result } = mutation\n    if (target === 'else') {\n      if ('result' in mutation) { elseBranch.result = result }\n    } else if (target === 'when') {\n      if (action === 'delete') {\n        whenBranches.splice(branchIndex, 1)\n      } else if (action === 'append') {\n        whenBranches.splice(branchIndex + 1, 0, {\n          rules: [{ logic: '', expression: {} }],\n          result: genResult(defaultResult),\n        })\n      } else if (action === 'update') {\n        if ('result' in mutation) { whenBranches[branchIndex].result = result }\n      }\n    }\n    return { whens: whenBranches, else: elseBranch }\n  }\n\n  function mutateRule(mutation = {}, branches = {}) {\n    let elseBranch = { ...branches.else }\n    let whenBranches = branches.whens.slice()\n    let { action, branchIndex, ruleIndex, logic, name, rule, value } = mutation\n    let rules = whenBranches.slice()[branchIndex].rules\n    if (action === 'delete') {\n      rules.splice(ruleIndex, 1)\n      ruleIndex === 0 && rules.length && (rules[0].logic = '')\n    } else if (action === 'append') {\n      logic = ruleIndex === -1 ? '' : 'and'\n      rules.splice(ruleIndex + 1, 0, { logic, expression: {} })\n    } else if (action === 'update') {\n      if ('logic' in mutation) { rules[ruleIndex].logic = logic }\n      if ('rule' in mutation) { rules[ruleIndex].expression.rule = rule }\n      if ('name' in mutation) {\n        rules[ruleIndex].expression.name = name\n        rules[ruleIndex].expression.rule = undefined\n      }\n      if ('value' in mutation) {\n        rules[ruleIndex].expression.value = value\n        rules[ruleIndex].expression.name = undefined\n        rules[ruleIndex].expression.rule = undefined\n      }\n    }\n    return { whens: whenBranches, else: elseBranch }\n  }\n\n  function collectProps(props = {}) {\n    let properties = getProps(props, {\n      reactive: { required: true }, member: { required: true },\n      ResultComponent: { dataType: ['Function', 'Object'], required: true },\n      value: { dataType: 'Array', default: [] },\n      onChange: { dataType: 'Function', default: null },\n      exception: { default: null },\n      defaultResult: { default: undefined },\n    })\n    const Condition = properties.reactive.schema.constructor.Condition\n    let branches = Condition.extract(properties.value)\n    if (Type.is.blank(branches.else.result)) {\n      branches.else = { result: genResult(properties.defaultResult) }\n    }\n    if (Type.isnt.array(branches.whens) || !branches.whens.length) {\n      branches.whens = [{\n        rules: [{ logic: '', expression: {} }],\n        result: genResult(properties.defaultResult),\n      }]\n    }\n    branches.whens = branches.whens.map(({ rules, result }) => {\n      rules = rules.length ? rules.map(({ logic, expression }) => ({\n        logic,\n        expression: properties.reactive.validator.extractValidation(expression),\n      })) : [{ logic: '', expression: {} }]\n      return { rules, result }\n    })\n    properties.value = branches\n    return properties\n  }\n\n  function decorateOnChange(props = {}) {\n    let { reactive, value, defaultResult, onChange } = getProps(props, {\n      reactive: { required: true },\n      value: { dataType: 'Object', default: {} },\n      onChange: { dataType: 'Function', default: null },\n      defaultResult: { default: undefined },\n    })\n    return function(mu = {}) {\n      if (!onChange) { return }\n      let mutate = mu.target === 'rule' ? mutateRule : mutateBranch\n      value = mutate(mu, value, defaultResult)\n      const Condition = reactive.schema.constructor.Condition\n      onChange(Condition.combine({\n        else: value.else,\n        whens: value.whens.map(({ rules, result }) => {\n          rules = rules.map(({ logic, expression }) => ({\n            logic, expression: reactive.validator.combineValidation(expression),\n          }))\n          return { rules, result }\n        }),\n      }))\n    }\n  }\n\n  function getLogics() {\n    let i18nSegment = 'section.member.prop.condition.whenBranch.logics'\n    return [{\n      value: 'and', label: i18n.t(`${i18nSegment}.and`),\n    }, {\n      value: 'or', label: i18n.t(`${i18nSegment}.or`),\n    }]\n  }\n\n  function getProviders(props = {}) {\n    let { reactive, member } = getProps(props, {\n      reactive: { required: true }, member: { required: true },\n    })\n    return (Form.providers(reactive, member) || []).map((p) => ({\n      value: joinProvider(p), label: reactive.get({ id: p.id, prop: 'label' }),\n    }))\n  }\n\n  function joinProvider(provider = {}) {\n    if (!provider || !provider.id || !provider.prop) { return '' }\n    return `${provider.id}/${provider.prop}`\n  }\n\n  function splitProvider(provider = '') {\n    let [id, prop] = provider.split('/')\n    return { id: id || '', prop: prop || '' }\n  }\n\n  function isConditionException(exception = {}, type= '') {\n    if (!exception) { return false }\n    if (exception.type !== 'CONDITION_INVALID_CONDITION') { return false }\n    if (!type) { return true }\n    return exception?.data?.dueto === type\n  }\n\n  function isWhensException(exception = {}) {\n    return isConditionException(exception, 'whens')\n  }\n\n  function isRulesException(exception = {}) {\n    return isConditionException(exception, 'rules')\n  }\n\n  function isLogicException(exception = {}) {\n    return isConditionException(exception, 'logic')\n  }\n\n  function isProviderException(exception = {}) {\n    return isConditionException(exception, 'provider')\n  }\n\n  function isValidationException(exception = {}) {\n    return isConditionException(exception, 'validation')\n  }\n\n  return {\n    getProps: collectProps, decorateOnChange,\n    getLogics, getProviders, joinProvider, splitProvider,\n    isConditionException, isWhensException, isRulesException,\n    isLogicException, isProviderException, isValidationException,\n  }\n\n})()\n\n\n\nexport default ConditionHelper\n", "import { getProps } from '../../base/get-prop'\n\n\n\nconst CalculationHelper = (() => {\n\n  function collectProps(props = {}) {\n    return getProps(props, {\n      reactive: { required: true },\n      member: { required: true },\n      exception: { default: null },\n      value: { dataType: ['Object', 'String'], default: null },\n      onChange: { dataType: 'Function', default: null },\n    })\n  }\n\n  return { getProps: collectProps }\n\n})()\n\n\n\nexport default CalculationHelper\n", "import { getProps } from '../../base/get-prop'\n\n\n\nconst OptionsHelper = (() => {\n\n  function collectProps(props = {}) {\n    let properties = getProps(props, {\n      reactive: { required: true }, member: { required: true },\n      exception: { default: null }, value: { dataType: 'Array', default: [] },\n      onChange: { dataType: 'Function', default: null },\n    })\n    if (!properties.value.length) { properties.value = [{}] }\n    return properties\n  }\n\n  function decorateOnChange(props = {}) {\n    let properties = collectProps(props)\n    return function(mutation = {}) {\n      if (!properties.onChange) { return }\n      let newValue = properties.value.slice()\n      let { index, action, label, value } = mutation\n      if (action === 'delete') {\n        newValue.splice(index, 1)\n      } else if (action === 'append') {\n        newValue.splice(index + 1, 0, { label: '', value: '' })\n      } else if (action === 'update') {\n        if ('label' in mutation) { newValue[index].label = label }\n        if ('value' in mutation) { newValue[index].value = value }\n      }\n      properties.onChange(newValue)\n    }\n  }\n\n  return { getProps: collectProps, decorateOnChange }\n\n})()\n\n\n\nexport default OptionsHelper\n", "import { Type, Struct, Form } from 'rcfm'\nimport { getProps } from '../../base/get-prop'\nimport i18n from '../locales'\n\n\n\nconst ValidationHelper = (() => {\n\n  function collectProps(props = {}) {\n    let properties = getProps(props, {\n      exception: { default: null },\n      reactive: { required: true }, member: { required: true },\n      value: { dataType: 'Array', default: [] },\n      onChange: { dataType: 'Function', default: null },\n      actions: { dataType: 'Array', default: ['append', 'update', 'delete'] },\n    })\n    properties.value = properties.value.slice()\n    if (!properties.value.length) { properties.value = [{}] }\n    properties.value = properties.value.map((v) => {\n      return properties.reactive.validator.extractValidation(v)\n    })\n    return properties\n  }\n\n  function decorateOnChange(props = {}) {\n    let {reactive, value, onChange} = getProps(props, {\n      reactive: { required: true },\n      onChange: { dataType: 'Function', default: null },\n      value: { dataType: 'Array', default: [] },\n    })\n    return function(mutation = {}) {\n      if (!onChange) { return }\n      value = value.slice()\n      let { index, action, name, rule } = mutation\n      if (action === 'delete') {\n        value.splice(index, 1)\n      } else if (action === 'append') {\n        value.splice(index + 1, 0, {})\n      } else if (action === 'update') {\n        if ('rule' in mutation) { value[index].rule = rule }\n        if ('name' in mutation) {\n          value[index].name = name\n          value[index].rule = undefined\n        }\n      }\n      onChange(value.map((v) => {\n        v = reactive.validator.combineValidation(v)\n        return Struct.object.exclude(v, ['valOf'])\n      }))\n    }\n  }\n\n  function getValidators(props = {}) {\n    let { reactive, member, scope } = getProps(props, {\n      reactive: { required: true }, member: { required: true },\n      scope: { dataType: 'String', validate(val) {\n        !['validation', 'condition'].includes(val)\n        && raise(`The 'scope' prop must be within ['validation', 'condition']`)\n      } }\n    })\n    return (Form.validators(reactive, member, { scope }) || [])\n      .map((v) => {\n        let label = i18n.t(`validator.validators.${v.name}.label`)\n        return { label, value: v.name }\n    })\n  }\n\n  function getRuleType(props = {}) {\n    let { reactive, member, value } = getProps(props, {\n      reactive: { required: true }, member: { required: true },\n      // Validation Item value\n      value: { dataType: 'Object', required: true },\n    })\n    let { name, rule } = value\n    let { ruleType } = reactive.validator.get(name) || {}\n    if (!ruleType) { return undefined }\n    if (Type.is.string(ruleType) && ruleType !== '*') { return ruleType }\n    let { validation } = reactive.schema.for({ id: member.id, prop: 'value' })\n    let valueType = (validation || []).find((v) => 'dataType' in v)?.dataType\n    if (Type.is.string(valueType) && valueType !== '*') { return valueType }\n    return 'Object'\n  }\n\n  return {\n    getProps: collectProps,\n    decorateOnChange, getValidators, getRuleType,\n  }\n\n})()\n\n\n\nexport default ValidationHelper\n", "import MemberHelper from './member'\nimport PropHelper from './prop'\nimport ConditionHelper from './condition'\nimport CalculationHelper from './calculation'\nimport OptionsHelper from './options'\nimport ValidationHelper from './validation'\n\n\n\nconst Helper = {\n  ...MemberHelper,\n  Prop: PropHelper,\n  Condition: ConditionHelper,\n  Calculation: CalculationHelper,\n  Options: OptionsHelper,\n  Validation: ValidationHelper,\n}\n\n\n\nexport default Helper\n", "import { getProps } from '../base/get-prop'\n\n\n\nconst FieldHelper = (() => {\n\n  function isRequired(props = {}) {\n    let { reactive, member } = getProps(props, {\n      reactive: { required: true }, member: { required: true },\n    })\n    let id = member.id\n    let schema = reactive.schema.for({ id, prop: 'value' })\n    let validation = reactive.get({ id, prop: 'validation' })\n    let validations = (schema.validation || []).concat(validation || [])\n    let presenceValidation = validations.find((v) => 'presence' in v)\n    return presenceValidation ? true : false\n  }\n\n  function isReadonly(props = {}){\n    let { reactive, member } = getProps(props, {\n      reactive: { required: true }, member: { required: true },\n    })\n    let id = member.id\n    if (reactive.get({ id, prop: 'editable' }) === false) { return true }\n    if (reactive.get({ id, prop: 'visible' }) === false ) { return true }\n    let state = reactive.get({ id, prop: 'calculation' }, { include: 'raw' })\n    if (state.raw.value) { return true }\n    return false\n  }\n\n  return { isRequired, isReadonly }\n\n})()\n\n\n\nexport default FieldHelper\n", "import { Form } from 'rcfm'\nimport { getProps } from '../base/get-prop'\n\n\n\nconst SubformHelper = (() => {\n\n  function installFieldComponents(props = {}) {\n    let fields = Form.group('Field')\n    if (!fields) { return }\n    let { installer, namespace } = getProps(props, {\n      installer: { required: true },\n      namespace: { required: true, dataType: 'String' },\n    })\n    fields.forEach((field) => {\n      let FieldComponentName = `${namespace}${field.type}`\n      if (!installer.has(FieldComponentName)) { return }\n      installer.install({\n        name: `${namespace}Subform${field.type}`,\n        Component: installer.use(FieldComponentName),\n      })\n    })\n  }\n\n  function collectFields(props = {}) {\n    let { reactive, collection } = getProps(props, {\n      reactive: { required: true },\n      collection: { dataType: 'Array' }\n    })\n    if (!collection || !collection.length) { return [] }\n    let installedFields = Form.group('SubformField')\n    if (!installedFields) { return [] }\n    let fieldTypes = installedFields.map((f) => f.type)\n    return collection.filter((c) => fieldTypes.includes(\n      reactive.get({ id: c.id, prop: 'type' })\n    ))\n  }\n\n  return { installFieldComponents, collectFields }\n\n})()\n\n\n\nexport default SubformHelper\n\n", "import Installer from './installer'\n\n\n\nimport { getProp, getProps } from './base/get-prop'\nimport joinClass from './base/join-class'\n\n\n\nimport './components/locales'\nimport Button from './components/button'\nimport Tabs from './components/tabs'\nimport Form from './components/form'\nimport Highlight from './components/highlight'\n\n\n\nimport './sections/locales'\nimport Member from './sections/member'\nimport Field from './sections/field'\nimport Subform from './sections/subform'\n\n\n\nfunction Helper() {\n  let installer = Installer.create()\n  // Helpers should be decorated on the installer instance.\n  installer.getProp = getProp\n  installer.getProps = getProps\n  installer.joinClass = joinClass\n  installer.Component = { Button, Tabs, Form, Highlight }\n  installer.Section = { Member, Field, Subform }\n  return installer\n}\n\n\n\nconst UI = Helper()\n\nif (typeof window !== 'undefined' && window.ReactiveForm) {\n  window.ReactiveForm.UI = UI\n}\n\n\n\nexport { UI }\n"],
  "mappings": "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",
  "names": []
}
